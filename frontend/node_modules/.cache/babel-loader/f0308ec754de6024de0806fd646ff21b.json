{"ast":null,"code":"var _jsxFileName = \"D:\\\\myFishProject\\\\frontend\\\\src\\\\components\\\\Loginpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthProvider\";\nimport { saveToken, saveID } from \"./getCommonOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const loginValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const [loginForm, setLoginForm] = useState(loginValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n  const navigate = useNavigate();\n  const auth = useAuth();\n\n  const myHandleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginForm({ ...loginForm,\n      [name]: value\n    });\n    console.log(loginForm);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(loginForm);\n    setFormErrors(validate(loginForm));\n    setIsSubmit(true);\n    const data = {\n      email: loginForm.email,\n      password: loginForm.password\n    };\n    fetch('http://127.0.0.1:8000/login/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(res => {\n      console.log(res.data);\n      const authToken = res.data;\n      const userID = res.data;\n      authToken.map(auths => {\n        saveToken(auths.token);\n        console.log(saveToken);\n      });\n      userID.map(ID => {\n        saveID(ID.user_id);\n      });\n      auth.login(authToken);\n      navigate('/', {\n        replace: true\n      });\n    });\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(loginForm);\n    }\n  }, [formErrors, loginForm, isSubmit]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"acc-row1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"accHeading\",\n            children: \"Enter Your Login Details Below...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"accParaDetail\",\n            children: \"Enter your details below to login or continue as guest by clicking on the button below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginAccForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Enter Your Email\",\n              name: \"email\",\n              id: \"login_email\",\n              value: loginForm.email,\n              onChange: myHandleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorsClass\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter Your Password\",\n              id: \"login_password\",\n              name: \"password\",\n              value: loginForm.password,\n              onChange: myHandleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorsClass\",\n              children: formErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              className: \"loginButton\",\n              type: \"submit\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Login, \"1BKgsDm2seJnl9zVnjok+qrCdwc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/myFishProject/frontend/src/components/Loginpage.js"],"names":["React","useState","useEffect","useNavigate","useAuth","saveToken","saveID","Login","loginValues","email","password","loginForm","setLoginForm","formErrors","setFormErrors","isSubmit","setIsSubmit","navigate","auth","myHandleChange","e","preventDefault","name","value","target","console","log","handleSubmit","validate","data","fetch","method","headers","body","JSON","stringify","then","response","json","res","authToken","userID","map","auths","token","ID","user_id","login","replace","Object","keys","length","values","errors","regex","test"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useAuth} from \"../context/AuthProvider\";\r\nimport { saveToken, saveID } from \"./getCommonOptions\";\r\n\r\nfunction Login(){\r\n    const loginValues={email:\"\", password:\"\"};\r\n    const [loginForm, setLoginForm]=useState(loginValues);\r\n    const [formErrors, setFormErrors]=useState({});\r\n    const [isSubmit, setIsSubmit]=useState(false);\r\n    const navigate = useNavigate()\r\n    \r\n    const auth = useAuth()\r\n\r\n    \r\n        \r\n    const myHandleChange=(e)=>{\r\n        e.preventDefault();\r\n        const {name, value}=e.target;\r\n        setLoginForm({...loginForm, [name]:value});\r\n        console.log(loginForm);\r\n    }\r\n        \r\n    const handleSubmit= async (e)=>{\r\n        e.preventDefault();\r\n        console.log(loginForm);\r\n        setFormErrors(validate(loginForm));\r\n        setIsSubmit(true);\r\n        const data={ \r\n            email:loginForm.email, password:loginForm.password}\r\n            fetch('http://127.0.0.1:8000/login/', {\r\n                method:\"POST\",\r\n                headers: {\"Content-Type\":\"application/json\",},\r\n                body: JSON.stringify(data),\r\n                \r\n                \r\n            }).then((response)=> response.json())\r\n            .then((res)=>{\r\n                console.log(res.data);\r\n                const authToken=res.data; \r\n                const userID=res.data;\r\n                authToken.map((auths)=>{\r\n                    saveToken(auths.token);\r\n                    console.log(saveToken);\r\n                })\r\n                userID.map((ID)=>{\r\n                    saveID(ID.user_id);\r\n                })\r\n                auth.login(authToken);\r\n                navigate('/', { replace: true });\r\n            });\r\n                \r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(formErrors);\r\n        if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n          console.log(loginForm);\r\n        }\r\n        \r\n    }, [formErrors, loginForm, isSubmit]);\r\n\r\n    const validate = (values) => { \r\n        const errors={};\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\r\n        if(!values.email){\r\n            errors.email=\"Email is required!\"; \r\n        } else if (!regex.test(values.email)) {\r\n            errors.email = \"This is not a valid email format!\";\r\n        }\r\n        if(!values.password){\r\n            errors.password=\"Password is required\";\r\n        }\r\n        return errors;\r\n    }\r\n\r\n   \r\n        return(\r\n            <div>\r\n                <div className=\"Container\">\r\n                    <div className=\"inner-box\">\r\n                        <div className=\"acc-row1\">\r\n                            <h1 className=\"accHeading\">Enter Your Login Details Below...</h1>\r\n                            <p className=\"accParaDetail\">Enter your details below to login or continue as guest by clicking on the button below</p>\r\n                        </div>\r\n                        <div className=\"loginAccForm\">\r\n                            <form>\r\n                                <input  type=\"email\" placeholder=\"Enter Your Email\"  name=\"email\" id=\"login_email\" value={loginForm.email} \r\n                                onChange={myHandleChange}  ></input>\r\n                                 <p className=\"errorsClass\">{formErrors.email}</p>\r\n                                <input  type=\"password\" placeholder=\"Enter Your Password\" id=\"login_password\" name=\"password\" value={loginForm.password} \r\n                                onChange={myHandleChange}  ></input>\r\n                                 <p className=\"errorsClass\">{formErrors.password}</p>\r\n                                <button onClick={handleSubmit} className=\"loginButton\"  type=\"submit\">Sign In</button>    \r\n                            </form>\r\n\r\n                       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}