{"ast":null,"code":"/* jshint node:true */\n'use strict';\n/**\n * Module dependencies.\n */\n//const _ = require('underscore');\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar Parser = require('./parser/csv');\n\nvar Stream = require('./core/stream');\n\nvar helper = require('./core/helper');\n\nvar EOL = require('./core/eol');\n/**\n * Main function that converts json to csv\n *\n * @param {Object|Array} json\n * @param {Object} [options]\n * @param {Function} callback(err, csv) - Callback function\n *      if error, returning error in call back.\n *      if csv is created successfully, returning csv output to callback.\n */\n\n\nmodule.exports = function () {\n  var DEFAULT_OPTIONS = {\n    headers: [],\n    //              Array\n    rename: [],\n    //               Array\n    headerPathString: '.',\n    //    String\n    rowDelimiter: ',',\n    //        String\n    textDelimiter: '\"',\n    //       String\n    arrayPathString: ';',\n    //     String\n    undefinedString: '',\n    //      String\n    endOfLine: EOL || '\\n',\n    //   String\n    mainPathItem: null,\n    //       String\n    booleanTrueString: null,\n    //  String\n    booleanFalseString: null,\n    // String\n    includeHeaders: true,\n    //     Boolean\n    fillGaps: false,\n    //          Boolean\n    verticalOutput: true,\n    //     Boolean\n    forceTextDelimiter: false //Boolean\n\n  }; // argument parsing\n\n  var json = void 0,\n      userOptions = void 0,\n      callback = void 0;\n\n  if (arguments.length === 3) {\n    var _arguments = Array.prototype.slice.call(arguments);\n\n    json = _arguments[0];\n    userOptions = _arguments[1];\n    callback = _arguments[2];\n  } else if (arguments.length === 2) {\n    var any = void 0;\n\n    var _arguments2 = Array.prototype.slice.call(arguments);\n\n    json = _arguments2[0];\n    any = _arguments2[1];\n\n    if (typeof any === 'function') {\n      callback = any;\n    } else if ((typeof any === 'undefined' ? 'undefined' : _typeof(any)) === 'object') {\n      userOptions = any;\n    }\n  } else if (arguments.length === 1) {\n    var _arguments3 = Array.prototype.slice.call(arguments),\n        _any = _arguments3[0];\n\n    if ((typeof _any === 'undefined' ? 'undefined' : _typeof(_any)) === 'object') {\n      var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n      var objectKeys = Object.keys(_any);\n      var isOptions = objectKeys.every(function (key) {\n        return defaultKeys.includes(key);\n      });\n\n      if (objectKeys.length > 0 && isOptions) {\n        userOptions = _any;\n      } else {\n        json = _any;\n      }\n    } else {\n      json = _any;\n    }\n  } else {\n    return new Stream(new Parser(DEFAULT_OPTIONS));\n  }\n\n  var options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  var parser = new Parser(options); // if no json is provided Stream API will be used\n\n  if (!json) {\n    return new Stream(parser);\n  } // always return an promise\n\n\n  return new Promise(function (resolve, reject) {\n    parser.parse(json, function (err, result) {\n      if (callback) return callback(err, result);\n      if (err) return reject(err);\n      if (reject) return resolve(result);\n    });\n  });\n};","map":{"version":3,"sources":["D:/myFishProject/frontend/node_modules/jsonexport/dist/index.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","Parser","require","Stream","helper","EOL","module","exports","DEFAULT_OPTIONS","headers","rename","headerPathString","rowDelimiter","textDelimiter","arrayPathString","undefinedString","endOfLine","mainPathItem","booleanTrueString","booleanFalseString","includeHeaders","fillGaps","verticalOutput","forceTextDelimiter","json","userOptions","callback","arguments","length","_arguments","Array","slice","call","any","_arguments2","_arguments3","_any","defaultKeys","Object","keys","objectKeys","isOptions","every","key","includes","options","assign","parser","Promise","resolve","reject","parse","err","result"],"mappings":"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","sourcesContent":["/* jshint node:true */\n'use strict';\n/**\n * Module dependencies.\n */\n//const _ = require('underscore');\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Parser = require('./parser/csv');\nvar Stream = require('./core/stream');\nvar helper = require('./core/helper');\nvar EOL = require('./core/eol');\n\n/**\n * Main function that converts json to csv\n *\n * @param {Object|Array} json\n * @param {Object} [options]\n * @param {Function} callback(err, csv) - Callback function\n *      if error, returning error in call back.\n *      if csv is created successfully, returning csv output to callback.\n */\nmodule.exports = function () {\n  var DEFAULT_OPTIONS = {\n    headers: [], //              Array\n    rename: [], //               Array\n    headerPathString: '.', //    String\n    rowDelimiter: ',', //        String\n    textDelimiter: '\"', //       String\n    arrayPathString: ';', //     String\n    undefinedString: '', //      String\n    endOfLine: EOL || '\\n', //   String\n    mainPathItem: null, //       String\n    booleanTrueString: null, //  String\n    booleanFalseString: null, // String\n    includeHeaders: true, //     Boolean\n    fillGaps: false, //          Boolean\n    verticalOutput: true, //     Boolean\n    forceTextDelimiter: false //Boolean\n  };\n  // argument parsing\n  var json = void 0,\n      userOptions = void 0,\n      callback = void 0;\n  if (arguments.length === 3) {\n    var _arguments = Array.prototype.slice.call(arguments);\n\n    json = _arguments[0];\n    userOptions = _arguments[1];\n    callback = _arguments[2];\n  } else if (arguments.length === 2) {\n    var any = void 0;\n\n    var _arguments2 = Array.prototype.slice.call(arguments);\n\n    json = _arguments2[0];\n    any = _arguments2[1];\n\n    if (typeof any === 'function') {\n      callback = any;\n    } else if ((typeof any === 'undefined' ? 'undefined' : _typeof(any)) === 'object') {\n      userOptions = any;\n    }\n  } else if (arguments.length === 1) {\n    var _arguments3 = Array.prototype.slice.call(arguments),\n        _any = _arguments3[0];\n\n    if ((typeof _any === 'undefined' ? 'undefined' : _typeof(_any)) === 'object') {\n      var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n      var objectKeys = Object.keys(_any);\n      var isOptions = objectKeys.every(function (key) {\n        return defaultKeys.includes(key);\n      });\n      if (objectKeys.length > 0 && isOptions) {\n        userOptions = _any;\n      } else {\n        json = _any;\n      }\n    } else {\n      json = _any;\n    }\n  } else {\n    return new Stream(new Parser(DEFAULT_OPTIONS));\n  }\n  var options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  var parser = new Parser(options);\n  // if no json is provided Stream API will be used\n  if (!json) {\n    return new Stream(parser);\n  }\n  // always return an promise\n  return new Promise(function (resolve, reject) {\n    parser.parse(json, function (err, result) {\n      if (callback) return callback(err, result);\n      if (err) return reject(err);\n      if (reject) return resolve(result);\n    });\n  });\n};"]},"metadata":{},"sourceType":"script"}