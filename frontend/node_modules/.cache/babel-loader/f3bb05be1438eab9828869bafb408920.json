{"ast":null,"code":"var Cf = Object.create;\nvar rn = Object.defineProperty,\n    vf = Object.defineProperties,\n    If = Object.getOwnPropertyDescriptor,\n    Ff = Object.getOwnPropertyDescriptors,\n    Sf = Object.getOwnPropertyNames,\n    Qn = Object.getOwnPropertySymbols,\n    Ef = Object.getPrototypeOf,\n    Va = Object.prototype.hasOwnProperty,\n    tc = Object.prototype.propertyIsEnumerable;\n\nvar oc = (e, t, o) => t in e ? rn(e, t, {\n  enumerable: !0,\n  configurable: !0,\n  writable: !0,\n  value: o\n}) : e[t] = o,\n    i = (e, t) => {\n  for (var o in t || (t = {})) Va.call(t, o) && oc(e, o, t[o]);\n\n  if (Qn) for (var o of Qn(t)) tc.call(t, o) && oc(e, o, t[o]);\n  return e;\n},\n    S = (e, t) => vf(e, Ff(t)),\n    Nf = e => rn(e, \"__esModule\", {\n  value: !0\n}),\n    n = (e, t) => rn(e, \"name\", {\n  value: t,\n  configurable: !0\n});\n\nvar rc = e => typeof e == \"symbol\" ? e : e + \"\",\n    f = (e, t) => {\n  var o = {};\n\n  for (var r in e) Va.call(e, r) && t.indexOf(r) < 0 && (o[r] = e[r]);\n\n  if (e != null && Qn) for (var r of Qn(e)) t.indexOf(r) < 0 && tc.call(e, r) && (o[r] = e[r]);\n  return o;\n};\n\nvar Bf = (e, t) => () => (e && (t = e(e = 0)), t);\n\nvar Lf = (e, t) => () => (t || e((t = {\n  exports: {}\n}).exports, t), t.exports);\n\nvar kf = (e, t, o, r) => {\n  if (t && typeof t == \"object\" || typeof t == \"function\") for (let s of Sf(t)) !Va.call(e, s) && (o || s !== \"default\") && rn(e, s, {\n    get: () => t[s],\n    enumerable: !(r = If(t, s)) || r.enumerable\n  });\n  return e;\n},\n    wf = (e, t) => kf(Nf(rn(e != null ? Cf(Ef(e)) : {}, \"default\", !t && e && e.__esModule ? {\n  get: () => e.default,\n  enumerable: !0\n} : {\n  value: e,\n  enumerable: !0\n})), e);\n\nvar l = Bf(() => {});\nvar Dc = Lf(Li => {\n  \"use strict\";\n\n  l();\n  Li.match = FT;\n  Li.parse = wc;\n  var PT = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n      xT = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n      CT = /^(?:(min|max)-)?(.+)/,\n      vT = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n      IT = /(dpi|dpcm|dppx)?$/;\n\n  function FT(e, t) {\n    return wc(e).some(function (o) {\n      var r = o.inverse,\n          s = o.type === \"all\" || t.type === o.type;\n      if (s && r || !(s || r)) return !1;\n      var a = o.expressions.every(function (p) {\n        var c = p.feature,\n            d = p.modifier,\n            m = p.value,\n            u = t[c];\n        if (!u) return !1;\n\n        switch (c) {\n          case \"orientation\":\n          case \"scan\":\n            return u.toLowerCase() === m.toLowerCase();\n\n          case \"width\":\n          case \"height\":\n          case \"device-width\":\n          case \"device-height\":\n            m = Oc(m), u = Oc(u);\n            break;\n\n          case \"resolution\":\n            m = $c(m), u = $c(u);\n            break;\n\n          case \"aspect-ratio\":\n          case \"device-aspect-ratio\":\n          case \"device-pixel-ratio\":\n            m = Ac(m), u = Ac(u);\n            break;\n\n          case \"grid\":\n          case \"color\":\n          case \"color-index\":\n          case \"monochrome\":\n            m = parseInt(m, 10) || 1, u = parseInt(u, 10) || 0;\n            break;\n        }\n\n        switch (d) {\n          case \"min\":\n            return u >= m;\n\n          case \"max\":\n            return u <= m;\n\n          default:\n            return u === m;\n        }\n      });\n      return a && !r || !a && r;\n    });\n  }\n\n  n(FT, \"matchQuery\");\n\n  function wc(e) {\n    return e.split(\",\").map(function (t) {\n      t = t.trim();\n      var o = t.match(PT),\n          r = o[1],\n          s = o[2],\n          a = o[3] || \"\",\n          p = {};\n      return p.inverse = !!r && r.toLowerCase() === \"not\", p.type = s ? s.toLowerCase() : \"all\", a = a.match(/\\([^\\)]+\\)/g) || [], p.expressions = a.map(function (c) {\n        var d = c.match(xT),\n            m = d[1].toLowerCase().match(CT);\n        return {\n          modifier: m[1],\n          feature: m[2],\n          value: d[2]\n        };\n      }), p;\n    });\n  }\n\n  n(wc, \"parseQuery\");\n\n  function Ac(e) {\n    var t = Number(e),\n        o;\n    return t || (o = e.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/), t = o[1] / o[2]), t;\n  }\n\n  n(Ac, \"toDecimal\");\n\n  function $c(e) {\n    var t = parseFloat(e),\n        o = String(e).match(IT)[1];\n\n    switch (o) {\n      case \"dpcm\":\n        return t / 2.54;\n\n      case \"dppx\":\n        return t * 96;\n\n      default:\n        return t;\n    }\n  }\n\n  n($c, \"toDpi\");\n\n  function Oc(e) {\n    var t = parseFloat(e),\n        o = String(e).match(vT)[1];\n\n    switch (o) {\n      case \"em\":\n        return t * 16;\n\n      case \"rem\":\n        return t * 16;\n\n      case \"cm\":\n        return t * 96 / 2.54;\n\n      case \"mm\":\n        return t * 96 / 2.54 / 10;\n\n      case \"in\":\n        return t * 96;\n\n      case \"pt\":\n        return t * 72;\n\n      case \"pc\":\n        return t * 72 / 12;\n\n      default:\n        return t;\n    }\n  }\n\n  n(Oc, \"toPx\");\n});\nl();\nl();\nimport * as Wo from \"react\";\nimport { useRef as MB, useEffect as Kd } from \"react\";\nimport Zl from \"prop-types\";\nimport { Card as VB, Avatar as _B } from \"@mui/material\";\nimport { styled as HB } from \"@mui/material/styles\";\nimport zB from \"@mui/icons-material/Lock\";\nimport { useNavigate as WB } from \"react-router-dom\";\nimport { useCheckAuth as qB } from \"ra-core\";\nl();\nimport * as zo from \"react\";\nimport { styled as SB } from \"@mui/material/styles\";\nimport EB from \"prop-types\";\nimport { Button as NB, CardContent as BB, CircularProgress as LB } from \"@mui/material\";\nimport { Form as kB, required as Jd, useTranslate as wB, useLogin as AB, useNotify as $B, useSafeSetState as OB } from \"ra-core\";\nl();\nimport * as Mt from \"react\";\nimport { cloneElement as rx, Children as nx, useEffect as om, useRef as sx } from \"react\";\nimport ax from \"clsx\";\nimport { isRequired as ix, FieldTitle as lx, composeSyncValidators as px, useApplyInputDefaultValues as cx, useGetValidationErrorMessage as mx, useResourceContext as dx } from \"ra-core\";\nimport { useFieldArray as ux, useFormContext as fx, useWatch as gx } from \"react-hook-form\";\nimport { InputLabel as yx, FormControl as bx, FormHelperText as Rx } from \"@mui/material\";\nimport hx from \"lodash/isEqual\";\nl();\nimport * as Ot from \"react\";\nimport { styled as wh } from \"@mui/material/styles\";\nimport { Children as Ah, memo as $h } from \"react\";\nimport Co from \"prop-types\";\nimport { AppBar as Oh, Toolbar as Dh, Typography as Mh, useMediaQuery as Vh } from \"@mui/material\";\nimport { ComponentPropType as _h } from \"ra-core\";\nl();\nimport * as Gn from \"react\";\nimport { styled as $f } from \"@mui/material/styles\";\nimport { IconButton as Of, Tooltip as Df } from \"@mui/material\";\nimport Mf from \"@mui/icons-material/Menu\";\nimport { useTranslate as Vf } from \"ra-core\";\nl();\nimport { useStore as Af } from \"ra-core\";\nvar bt = n(() => Af(\"sidebar.open\", !0), \"useSidebarState\");\n\nvar nc = n(e => {\n  let t = Vf(),\n      {\n    className: o\n  } = e,\n      [r, s] = bt();\n  return Gn.createElement(Df, {\n    className: o,\n    title: t(r ? \"ra.action.close_menu\" : \"ra.action.open_menu\", {\n      _: \"Open/Close menu\"\n    }),\n    enterDelay: 500\n  }, Gn.createElement(_f, {\n    color: \"inherit\",\n    onClick: () => s(!r),\n    size: \"large\"\n  }, Gn.createElement(Mf, {\n    classes: {\n      root: r ? Jn.menuButtonIconOpen : Jn.menuButtonIconClosed\n    }\n  })));\n}, \"SidebarToggleButton\"),\n    _a = \"RaSidebarToggleButton\",\n    Jn = {\n  menuButtonIconClosed: `${_a}-menuButtonIconClosed`,\n  menuButtonIconOpen: `${_a}-menuButtonIconOpen`\n},\n    _f = $f(Of, {\n  name: _a,\n  overridesResolver: (e, t) => t.root\n})(_ref => {\n  let {\n    theme: e\n  } = _ref;\n  return {\n    [`& .${Jn.menuButtonIconClosed}`]: {\n      transition: e.transitions.create([\"transform\"], {\n        easing: e.transitions.easing.sharp,\n        duration: e.transitions.duration.leavingScreen\n      }),\n      transform: \"rotate(0deg)\"\n    },\n    [`& .${Jn.menuButtonIconOpen}`]: {\n      transition: e.transitions.create([\"transform\"], {\n        easing: e.transitions.easing.sharp,\n        duration: e.transitions.duration.leavingScreen\n      }),\n      transform: \"rotate(180deg)\"\n    }\n  };\n});\n\nl();\nimport * as as from \"react\";\nimport { styled as GR } from \"@mui/material/styles\";\nimport hi from \"prop-types\";\nimport JR from \"clsx\";\nimport { useTheme as KR } from \"@mui/material/styles\";\nimport YR from \"@mui/material/CircularProgress\";\nimport { useLoading as ZR } from \"ra-core\";\nl();\nl();\nimport * as Ha from \"react\";\nimport { memo as Gf } from \"react\";\nimport za from \"prop-types\";\nimport Jf from \"@mui/icons-material/Queue\";\nimport { Link as Kf } from \"react-router-dom\";\nimport { stringify as Yf } from \"query-string\";\nimport { useResourceContext as Zf, useRecordContext as eg, useCreatePath as tg } from \"ra-core\";\nl();\nimport * as nn from \"react\";\nimport ho from \"prop-types\";\nimport { Button as Hf, Tooltip as zf, IconButton as sc, useMediaQuery as Wf } from \"@mui/material\";\nimport { styled as qf } from \"@mui/material/styles\";\nimport { useTranslate as jf } from \"ra-core\";\nvar j = n(e => {\n  let T = e,\n      {\n    alignIcon: t = \"left\",\n    children: o,\n    className: r,\n    disabled: s,\n    label: a,\n    color: p = \"primary\",\n    size: c = \"small\",\n    to: d\n  } = T,\n      m = f(T, [\"alignIcon\", \"children\", \"className\", \"disabled\", \"label\", \"color\", \"size\", \"to\"]),\n      u = jf(),\n      g = a ? u(a, {\n    _: a\n  }) : void 0,\n      y = Qf(d),\n      b = Wf(C => C.breakpoints.down(\"sm\")),\n      P = sn(m);\n  return b ? a && !s ? nn.createElement(zf, {\n    title: g\n  }, nn.createElement(sc, S(i(i({\n    \"aria-label\": g,\n    className: r,\n    color: p\n  }, P), y), {\n    size: \"large\"\n  }), o)) : nn.createElement(sc, S(i(i({\n    className: r,\n    color: p,\n    disabled: s\n  }, P), y), {\n    size: \"large\"\n  }), o) : nn.createElement(Xf, i(i({\n    className: r,\n    color: p,\n    size: c,\n    \"aria-label\": g,\n    disabled: s,\n    startIcon: t === \"left\" && o ? o : void 0,\n    endIcon: t === \"right\" && o ? o : void 0\n  }, P), y), g);\n}, \"Button\"),\n    sn = n(d => {\n  var m = d,\n      {\n    invalid: e,\n    pristine: t,\n    record: o,\n    redirect: r,\n    resource: s,\n    mutationMode: a,\n    hasCreate: p\n  } = m,\n      c = f(m, [\"invalid\", \"pristine\", \"record\", \"redirect\", \"resource\", \"mutationMode\", \"hasCreate\"]);\n  return c;\n}, \"sanitizeButtonRestProps\");\nj.propTypes = {\n  alignIcon: ho.oneOf([\"left\", \"right\"]),\n  children: ho.element,\n  className: ho.string,\n  color: ho.oneOf([\"default\", \"inherit\", \"primary\", \"secondary\"]),\n  disabled: ho.bool,\n  label: ho.string,\n  size: ho.oneOf([\"small\", \"medium\", \"large\"])\n};\nvar Uf = \"RaButton\",\n    Xf = qf(Hf, {\n  name: Uf,\n  overridesResolver: (e, t) => t.root\n})({\n  \"&.MuiButton-sizeSmall\": {\n    lineHeight: 1.5\n  }\n}),\n    Qf = n(e => {\n  if (e == null) return;\n  if (typeof e == \"string\") return {\n    to: e\n  };\n  let a = e,\n      {\n    redirect: t,\n    replace: o,\n    state: r\n  } = a;\n  return {\n    to: f(a, [\"redirect\", \"replace\", \"state\"]),\n    redirect: t,\n    replace: o,\n    state: r\n  };\n}, \"getLinkParams\");\nvar ac = n(e => {\n  let m = e,\n      {\n    label: t = \"ra.action.clone\",\n    scrollToTop: o = !0,\n    icon: r = og\n  } = m,\n      s = f(m, [\"label\", \"scrollToTop\", \"icon\"]),\n      a = Zf(e),\n      p = eg(e),\n      d = tg()({\n    resource: a,\n    type: \"create\"\n  });\n  return Ha.createElement(j, i({\n    component: Kf,\n    to: p ? {\n      pathname: d,\n      search: Yf({\n        source: JSON.stringify(ng(p))\n      }),\n      state: {\n        _scrollToTop: o\n      }\n    } : d,\n    label: t,\n    onClick: rg\n  }, sg(s)), r);\n}, \"CloneButton\"),\n    og = Ha.createElement(Jf, null),\n    rg = n(e => e.stopPropagation(), \"stopPropagation\"),\n    ng = n(o => {\n  var r = o,\n      {\n    id: e\n  } = r,\n      t = f(r, [\"id\"]);\n  return t;\n}, \"omitId\"),\n    sg = n(r => {\n  var s = r,\n      {\n    resource: e,\n    record: t\n  } = s,\n      o = f(s, [\"resource\", \"record\"]);\n  return o;\n}, \"sanitizeRestProps\");\nac.propTypes = {\n  icon: za.element,\n  label: za.string,\n  record: za.any\n};\nvar ag = Gf(ac);\nl();\nimport * as Kn from \"react\";\nimport { styled as ig } from \"@mui/material/styles\";\nimport { memo as lg } from \"react\";\nimport Yn from \"prop-types\";\nimport { Fab as pg, useMediaQuery as cg } from \"@mui/material\";\nimport mg from \"@mui/icons-material/Add\";\nimport dg from \"clsx\";\nimport { Link as ic } from \"react-router-dom\";\nimport { useTranslate as ug, useResourceContext as fg, useCreatePath as gg } from \"ra-core\";\nvar lc = n(e => {\n  let g = e,\n      {\n    className: t,\n    icon: o = yg,\n    label: r = \"ra.action.create\",\n    scrollToTop: s = !0,\n    variant: a\n  } = g,\n      p = f(g, [\"className\", \"icon\", \"label\", \"scrollToTop\", \"variant\"]),\n      c = fg(e),\n      d = gg(),\n      m = ug();\n  return cg(y => y.breakpoints.down(\"md\")) ? Kn.createElement(bg, i({\n    component: ic,\n    to: d({\n      resource: c,\n      type: \"create\"\n    }),\n    state: pc[String(s)],\n    color: \"primary\",\n    className: dg(Wa.floating, t),\n    \"aria-label\": r && m(r)\n  }, sn(p)), o) : Kn.createElement(j, i({\n    component: ic,\n    to: d({\n      resource: c,\n      type: \"create\"\n    }),\n    state: pc[String(s)],\n    className: t,\n    label: r,\n    variant: a\n  }, p), o);\n}, \"CreateButton\"),\n    pc = {\n  true: {\n    _scrollToTop: !0\n  },\n  false: {}\n},\n    yg = Kn.createElement(mg, null);\nlc.propTypes = {\n  resource: Yn.string,\n  className: Yn.string,\n  icon: Yn.element,\n  label: Yn.string\n};\nvar cc = \"RaCreateButton\",\n    Wa = {\n  floating: `${cc}-floating`\n},\n    bg = ig(pg, {\n  name: cc,\n  overridesResolver: (e, t) => t.root\n})(_ref2 => {\n  let {\n    theme: e\n  } = _ref2;\n  return {\n    [`&.${Wa.floating}`]: {\n      color: e.palette.getContrastText(e.palette.primary.main),\n      margin: 0,\n      top: \"auto\",\n      right: 20,\n      bottom: 60,\n      left: \"auto\",\n      position: \"fixed\",\n      zIndex: 1e3\n    }\n  };\n}),\n    an = lg(lc, (e, t) => e.resource === t.resource && e.label === t.label && e.translate === t.translate && e.disabled === t.disabled);\nl();\nimport * as qa from \"react\";\nimport { memo as Rg } from \"react\";\nimport Zn from \"prop-types\";\nimport hg from \"@mui/icons-material/RemoveRedEye\";\nimport { Link as Tg } from \"react-router-dom\";\nimport { useResourceContext as Pg, useRecordContext as xg, useCreatePath as Cg } from \"ra-core\";\nvar mc = n(e => {\n  let d = e,\n      {\n    icon: t = Ig,\n    label: o = \"ra.action.show\",\n    scrollToTop: r = !0\n  } = d,\n      s = f(d, [\"icon\", \"label\", \"scrollToTop\"]),\n      a = Pg(e),\n      p = xg(e),\n      c = Cg();\n  return p ? qa.createElement(j, i({\n    component: Tg,\n    to: c({\n      type: \"show\",\n      resource: a,\n      id: p.id\n    }),\n    state: vg[String(r)],\n    label: o,\n    onClick: Fg\n  }, s), t) : null;\n}, \"ShowButton\"),\n    vg = {\n  true: {\n    _scrollToTop: !0\n  },\n  false: {}\n},\n    Ig = qa.createElement(hg, null),\n    Fg = n(e => e.stopPropagation(), \"stopPropagation\");\nmc.propTypes = {\n  icon: Zn.element,\n  label: Zn.string,\n  record: Zn.any,\n  scrollToTop: Zn.bool\n};\nvar Sg = Rg(mc, (e, t) => e.resource === t.resource && (e.record && t.record ? e.record.id === t.record.id : e.record == t.record) && e.label === t.label && e.disabled === t.disabled),\n    ja = Sg;\nl();\nimport * as We from \"react\";\nimport { memo as Eg } from \"react\";\nimport { Button as Ng, Menu as Bg, MenuItem as Lg, Tooltip as kg, IconButton as wg, useMediaQuery as Ag } from \"@mui/material\";\nimport { styled as $g } from \"@mui/material/styles\";\nimport Og from \"@mui/icons-material/Sort\";\nimport Dg from \"@mui/icons-material/ArrowDropDown\";\nimport { useListSortContext as Mg, useTranslate as Vg, getFieldLabelTranslationArgs as dc, shallowEqual as _g } from \"ra-core\";\nvar Hg = n(e => {\n  let {\n    fields: t,\n    label: o = \"ra.sort.sort_by\",\n    icon: r = zg\n  } = e,\n      {\n    resource: s,\n    sort: a,\n    setSort: p\n  } = Mg(),\n      c = Vg(),\n      d = Ag(T => T.breakpoints.down(\"sm\")),\n      [m, u] = We.useState(null),\n      g = n(T => {\n    u(T.currentTarget);\n  }, \"handleClick\"),\n      y = n(() => {\n    u(null);\n  }, \"handleClose\"),\n      b = n(T => {\n    let C = T.currentTarget.dataset.sort;\n    p({\n      field: C,\n      order: C === a.field ? uc(a.order) : \"ASC\"\n    }), u(null);\n  }, \"handleChangeSort\"),\n      P = c(o, {\n    field: c(...dc({\n      resource: s,\n      source: a.field\n    })),\n    order: c(`ra.sort.${a.order}`),\n    _: o\n  });\n  return We.createElement(We.Fragment, null, d ? We.createElement(kg, {\n    title: P\n  }, We.createElement(wg, {\n    \"aria-label\": P,\n    color: \"primary\",\n    onClick: g,\n    size: \"large\"\n  }, r)) : We.createElement(qg, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"primary\",\n    onClick: g,\n    startIcon: r,\n    endIcon: We.createElement(Dg, null),\n    size: \"small\"\n  }, P), We.createElement(Bg, {\n    id: \"simple-menu\",\n    anchorEl: m,\n    keepMounted: !0,\n    open: Boolean(m),\n    onClose: y\n  }, t.map(T => We.createElement(Lg, {\n    onClick: b,\n    \"data-sort\": T,\n    key: T\n  }, c(...dc({\n    resource: s,\n    source: T\n  })), \" \", c(`ra.sort.${a.field === T ? uc(a.order) : \"ASC\"}`)))));\n}, \"SortButton\"),\n    zg = We.createElement(Og, null),\n    uc = n(e => e === \"ASC\" ? \"DESC\" : \"ASC\", \"inverseOrder\"),\n    Wg = n((e, t) => _g(e.fields, t.fields), \"arePropsEqual\"),\n    qg = $g(Ng, {\n  name: \"RaSortButton\",\n  overridesResolver: (e, t) => t.root\n})({\n  \"&.MuiButton-sizeSmall\": {\n    lineHeight: 1.5\n  },\n  \"& .MuiButton-endIcon\": {\n    ml: 0\n  }\n}),\n    jg = Eg(Hg, Wg);\nl();\nimport * as Ga from \"react\";\nimport Ko from \"prop-types\";\nl();\nimport * as ln from \"react\";\nimport { Fragment as Ug } from \"react\";\nimport Ut from \"prop-types\";\nimport Xg from \"@mui/icons-material/Delete\";\nimport fc from \"inflection\";\nimport { alpha as Qg, styled as Gg } from \"@mui/material/styles\";\nimport { useDeleteMany as Jg, useListContext as Kg, useNotify as Yg, useRefresh as Zg, useResourceContext as ey, useTranslate as ty, useUnselectAll as oy, useSafeSetState as ry } from \"ra-core\";\nvar Ua = n(e => {\n  let F = e,\n      {\n    confirmTitle: t = \"ra.message.bulk_delete_title\",\n    confirmContent: o = \"ra.message.bulk_delete_content\",\n    icon: r = iy,\n    label: s = \"ra.action.delete\",\n    mutationMode: a = \"pessimistic\",\n    onClick: p\n  } = F,\n      c = f(F, [\"confirmTitle\", \"confirmContent\", \"icon\", \"label\", \"mutationMode\", \"onClick\"]),\n      {\n    selectedIds: d\n  } = Kg(e),\n      [m, u] = ry(!1),\n      g = Yg(),\n      y = ey(e),\n      b = oy(y),\n      P = Zg(),\n      T = ty(),\n      [C, {\n    isLoading: x\n  }] = Jg(y, {\n    ids: d\n  }, {\n    onSuccess: () => {\n      P(), g(\"ra.notification.deleted\", {\n        type: \"info\",\n        messageArgs: {\n          smart_count: d.length\n        }\n      }), b(), u(!1);\n    },\n    onError: E => {\n      g(typeof E == \"string\" ? E : E.message || \"ra.notification.http_error\", {\n        type: \"warning\",\n        messageArgs: {\n          _: typeof E == \"string\" ? E : E && E.message ? E.message : void 0\n        }\n      }), u(!1);\n    },\n    mutationMode: a\n  }),\n      I = n(E => {\n    u(!0), E.stopPropagation();\n  }, \"handleClick\"),\n      v = n(() => {\n    u(!1);\n  }, \"handleDialogClose\"),\n      N = n(E => {\n    C(), typeof p == \"function\" && p(E);\n  }, \"handleDelete\");\n  return ln.createElement(Ug, null, ln.createElement(ay, i({\n    onClick: I,\n    label: s\n  }, ny(c)), r), ln.createElement(To, {\n    isOpen: m,\n    loading: x,\n    title: t,\n    content: o,\n    translateOptions: {\n      smart_count: d.length,\n      name: T(`resources.${y}.forcedCaseName`, {\n        smart_count: d.length,\n        _: fc.humanize(T(`resources.${y}.name`, {\n          smart_count: d.length,\n          _: fc.inflect(y, d.length)\n        }), !0)\n      })\n    },\n    onConfirm: N,\n    onClose: v\n  }));\n}, \"BulkDeleteWithConfirmButton\"),\n    ny = n(a => {\n  var p = a,\n      {\n    classes: e,\n    filterValues: t,\n    label: o,\n    selectedIds: r\n  } = p,\n      s = f(p, [\"classes\", \"filterValues\", \"label\", \"selectedIds\"]);\n  return s;\n}, \"sanitizeRestProps\"),\n    sy = \"RaBulkDeleteWithConfirmButton\",\n    ay = Gg(j, {\n  name: sy,\n  overridesResolver: (e, t) => t.root\n})(_ref3 => {\n  let {\n    theme: e\n  } = _ref3;\n  return {\n    color: e.palette.error.main,\n    \"&:hover\": {\n      backgroundColor: Qg(e.palette.error.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n}),\n    iy = ln.createElement(Xg, null);\nUa.propTypes = {\n  confirmTitle: Ut.string,\n  confirmContent: Ut.string,\n  icon: Ut.element,\n  label: Ut.string,\n  mutationMode: Ut.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  resource: Ut.string,\n  selectedIds: Ut.arrayOf(Ut.any)\n};\nl();\nimport * as Xa from \"react\";\nimport { styled as ly } from \"@mui/material/styles\";\nimport pn from \"prop-types\";\nimport py from \"@mui/icons-material/Delete\";\nimport { alpha as cy } from \"@mui/material/styles\";\nimport { useDeleteMany as my, useRefresh as dy, useNotify as uy, useUnselectAll as fy, useResourceContext as gy, useListContext as yy } from \"ra-core\";\nvar Qa = n(e => {\n  let b = e,\n      {\n    label: t = \"ra.action.delete\",\n    icon: o = by,\n    onClick: r\n  } = b,\n      s = f(b, [\"label\", \"icon\", \"onClick\"]),\n      {\n    selectedIds: a\n  } = yy(e),\n      p = uy(),\n      c = gy(e),\n      d = fy(c),\n      m = dy(),\n      [u, {\n    isLoading: g\n  }] = my();\n  return Xa.createElement(Ty, i({\n    onClick: n(P => {\n      u(c, {\n        ids: a\n      }, {\n        onSuccess: () => {\n          p(\"ra.notification.deleted\", {\n            type: \"info\",\n            messageArgs: {\n              smart_count: a.length\n            },\n            undoable: !0\n          }), d();\n        },\n        onError: T => {\n          p(typeof T == \"string\" ? T : T.message || \"ra.notification.http_error\", {\n            type: \"warning\",\n            messageArgs: {\n              _: typeof T == \"string\" ? T : T && T.message ? T.message : void 0\n            }\n          }), m();\n        },\n        mutationMode: \"undoable\"\n      }), typeof r == \"function\" && r(P);\n    }, \"handleClick\"),\n    label: t,\n    disabled: g\n  }, Ry(s)), o);\n}, \"BulkDeleteWithUndoButton\"),\n    by = Xa.createElement(py, null),\n    Ry = n(a => {\n  var p = a,\n      {\n    classes: e,\n    filterValues: t,\n    label: o,\n    selectedIds: r\n  } = p,\n      s = f(p, [\"classes\", \"filterValues\", \"label\", \"selectedIds\"]);\n  return s;\n}, \"sanitizeRestProps\"),\n    hy = \"RaBulkDeleteWithUndoButton\",\n    Ty = ly(j, {\n  name: hy,\n  overridesResolver: (e, t) => t.root\n})(_ref4 => {\n  let {\n    theme: e\n  } = _ref4;\n  return {\n    color: e.palette.error.main,\n    \"&:hover\": {\n      backgroundColor: cy(e.palette.error.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n});\nQa.propTypes = {\n  label: pn.string,\n  resource: pn.string,\n  selectedIds: pn.arrayOf(pn.any),\n  icon: pn.element\n};\nvar Ja = n(o => {\n  var r = o,\n      {\n    mutationMode: e = \"undoable\"\n  } = r,\n      t = f(r, [\"mutationMode\"]);\n  return e === \"undoable\" ? Ga.createElement(Qa, i({}, t)) : Ga.createElement(Ua, i({\n    mutationMode: e\n  }, t));\n}, \"BulkDeleteButton\");\nJa.propTypes = {\n  label: Ko.string,\n  resource: Ko.string,\n  selectedIds: Ko.arrayOf(Ko.any),\n  mutationMode: Ko.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  icon: Ko.element\n};\nl();\nimport * as Ka from \"react\";\nimport { useCallback as Py } from \"react\";\nimport Yo from \"prop-types\";\nimport xy from \"@mui/icons-material/GetApp\";\nimport { fetchRelatedRecords as Cy, useDataProvider as vy, useNotify as Iy, useListContext as Fy } from \"ra-core\";\nvar Sy = n(e => {\n  let b = e,\n      {\n    onClick: t,\n    label: o = \"ra.action.export\",\n    icon: r = Ey,\n    exporter: s\n  } = b,\n      a = f(b, [\"onClick\", \"label\", \"icon\", \"exporter\"]),\n      {\n    exporter: p,\n    resource: c,\n    selectedIds: d\n  } = Fy(e),\n      m = s || p,\n      u = vy(),\n      g = Iy(),\n      y = Py(P => {\n    m && u.getMany(c, {\n      ids: d\n    }).then(_ref5 => {\n      let {\n        data: T\n      } = _ref5;\n      return m(T, Cy(u), u, c);\n    }).catch(T => {\n      console.error(T), g(\"ra.notification.http_error\", {\n        type: \"warning\"\n      });\n    }), typeof t == \"function\" && t(P);\n  }, [u, m, g, t, c, d]);\n  return Ka.createElement(j, i({\n    onClick: y,\n    label: o\n  }, Ny(a)), r);\n}, \"BulkExportButton\"),\n    Ey = Ka.createElement(xy, null),\n    Ny = n(s => {\n  var a = s,\n      {\n    filterValues: e,\n    selectedIds: t,\n    resource: o\n  } = a,\n      r = f(a, [\"filterValues\", \"selectedIds\", \"resource\"]);\n  return r;\n}, \"sanitizeRestProps\");\nSy.propTypes = {\n  exporter: Yo.func,\n  label: Yo.string,\n  resource: Yo.string,\n  selectedIds: Yo.arrayOf(Yo.any),\n  icon: Yo.element\n};\nl();\nimport * as ti from \"react\";\nimport er from \"prop-types\";\nl();\nimport * as cn from \"react\";\nimport { Fragment as By, useState as Ly } from \"react\";\nimport kt from \"prop-types\";\nimport ky from \"@mui/icons-material/Update\";\nimport gc from \"inflection\";\nimport { alpha as wy, styled as Ay } from \"@mui/material/styles\";\nimport { useListContext as $y, useTranslate as Oy, useUpdateMany as Dy, useRefresh as My, useNotify as Vy, useUnselectAll as _y, useResourceContext as Hy } from \"ra-core\";\nvar Ya = n(e => {\n  let t = Vy(),\n      o = My(),\n      r = Oy(),\n      s = Hy(e),\n      a = _y(s),\n      [p, c] = Ly(!1),\n      {\n    selectedIds: d\n  } = $y(e),\n      k = e,\n      {\n    confirmTitle: m = \"ra.message.bulk_update_title\",\n    confirmContent: u = \"ra.message.bulk_update_content\",\n    data: g,\n    icon: y = jy,\n    label: b = \"ra.action.update\",\n    mutationMode: P = \"pessimistic\",\n    onClick: T,\n    onSuccess: C = n(() => {\n      o(), t(\"ra.notification.updated\", {\n        type: \"info\",\n        messageArgs: {\n          smart_count: d.length\n        }\n      }), a(), c(!1);\n    }, \"onSuccess\"),\n    onError: x = n(L => {\n      t(typeof L == \"string\" ? L : L.message || \"ra.notification.http_error\", {\n        type: \"warning\",\n        messageArgs: {\n          _: typeof L == \"string\" ? L : L && L.message ? L.message : void 0\n        }\n      }), c(!1);\n    }, \"onError\")\n  } = k,\n      I = f(k, [\"confirmTitle\", \"confirmContent\", \"data\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"onSuccess\", \"onError\"]),\n      [v, {\n    isLoading: N\n  }] = Dy(s, {\n    ids: d,\n    data: g\n  }, {\n    onSuccess: C,\n    onError: x,\n    mutationMode: P\n  }),\n      F = n(L => {\n    c(!0), L.stopPropagation();\n  }, \"handleClick\"),\n      E = n(() => {\n    c(!1);\n  }, \"handleDialogClose\"),\n      B = n(L => {\n    v(), typeof T == \"function\" && T(L);\n  }, \"handleUpdate\");\n\n  return cn.createElement(By, null, cn.createElement(qy, i({\n    onClick: F,\n    label: b\n  }, zy(I)), y), cn.createElement(To, {\n    isOpen: p,\n    loading: N,\n    title: m,\n    content: u,\n    translateOptions: {\n      smart_count: d.length,\n      name: r(`resources.${s}.forcedCaseName`, {\n        smart_count: d.length,\n        _: gc.humanize(r(`resources.${s}.name`, {\n          smart_count: d.length,\n          _: gc.inflect(s, d.length)\n        }), !0)\n      })\n    },\n    onConfirm: B,\n    onClose: E\n  }));\n}, \"BulkUpdateWithConfirmButton\"),\n    zy = n(a => {\n  var p = a,\n      {\n    filterValues: e,\n    label: t,\n    onSuccess: o,\n    onError: r\n  } = p,\n      s = f(p, [\"filterValues\", \"label\", \"onSuccess\", \"onError\"]);\n  return s;\n}, \"sanitizeRestProps\");\nYa.propTypes = {\n  confirmTitle: kt.string,\n  confirmContent: kt.string,\n  label: kt.string,\n  resource: kt.string,\n  selectedIds: kt.arrayOf(kt.any),\n  icon: kt.element,\n  data: kt.any.isRequired,\n  mutationMode: kt.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"])\n};\nvar Wy = \"RaBulkUpdateWithConfirmButton\",\n    qy = Ay(j, {\n  name: Wy,\n  overridesResolver: (e, t) => t.root\n})(_ref6 => {\n  let {\n    theme: e\n  } = _ref6;\n  return {\n    color: e.palette.primary.main,\n    \"&:hover\": {\n      backgroundColor: wy(e.palette.primary.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n}),\n    jy = cn.createElement(ky, null);\nl();\nimport * as Za from \"react\";\nimport { styled as Uy } from \"@mui/material/styles\";\nimport Zo from \"prop-types\";\nimport Xy from \"@mui/icons-material/Update\";\nimport { alpha as Qy } from \"@mui/material/styles\";\nimport { useUpdateMany as Gy, useRefresh as Jy, useNotify as Ky, useUnselectAll as Yy, useResourceContext as Zy, useListContext as eb } from \"ra-core\";\nvar ei = n(e => {\n  let {\n    selectedIds: t\n  } = eb(e),\n      o = Ky(),\n      r = Zy(e),\n      s = Yy(r),\n      a = Jy(),\n      C = e,\n      {\n    data: p,\n    label: c = \"ra.action.update\",\n    icon: d = tb,\n    onClick: m,\n    onSuccess: u = n(() => {\n      o(\"ra.notification.updated\", {\n        type: \"info\",\n        messageArgs: {\n          smart_count: t.length\n        },\n        undoable: !0\n      }), s(), a();\n    }, \"onSuccess\"),\n    onError: g = n(x => {\n      o(typeof x == \"string\" ? x : x.message || \"ra.notification.http_error\", {\n        type: \"warning\",\n        messageArgs: {\n          _: typeof x == \"string\" ? x : x && x.message ? x.message : void 0\n        }\n      }), a();\n    }, \"onError\")\n  } = C,\n      y = f(C, [\"data\", \"label\", \"icon\", \"onClick\", \"onSuccess\", \"onError\"]),\n      [b, {\n    isLoading: P\n  }] = Gy(r, {\n    ids: t,\n    data: p\n  }, {\n    onSuccess: u,\n    onError: g,\n    mutationMode: \"undoable\"\n  });\n  return Za.createElement(nb, i({\n    onClick: n(x => {\n      b(), typeof m == \"function\" && m(x);\n    }, \"handleClick\"),\n    label: c,\n    disabled: P\n  }, ob(y)), d);\n}, \"BulkUpdateWithUndoButton\"),\n    tb = Za.createElement(Xy, null),\n    ob = n(p => {\n  var c = p,\n      {\n    filterValues: e,\n    label: t,\n    selectedIds: o,\n    onSuccess: r,\n    onError: s\n  } = c,\n      a = f(c, [\"filterValues\", \"label\", \"selectedIds\", \"onSuccess\", \"onError\"]);\n  return a;\n}, \"sanitizeRestProps\");\nei.propTypes = {\n  label: Zo.string,\n  resource: Zo.string,\n  selectedIds: Zo.arrayOf(Zo.any),\n  icon: Zo.element,\n  data: Zo.any.isRequired\n};\nvar rb = \"RaBulkUpdateWithUndoButton\",\n    nb = Uy(j, {\n  name: rb,\n  overridesResolver: (e, t) => t.root\n})(_ref7 => {\n  let {\n    theme: e\n  } = _ref7;\n  return {\n    color: e.palette.primary.main,\n    \"&:hover\": {\n      backgroundColor: Qy(e.palette.primary.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n});\nvar yc = n(e => {\n  let r = e,\n      {\n    mutationMode: t\n  } = r,\n      o = f(r, [\"mutationMode\"]);\n  return t === \"undoable\" ? ti.createElement(ei, i({}, o)) : ti.createElement(Ya, i({\n    mutationMode: t\n  }, o));\n}, \"BulkUpdateButton\");\nyc.propTypes = {\n  label: er.string,\n  resource: er.string,\n  selectedIds: er.arrayOf(er.any),\n  mutationMode: er.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  icon: er.element\n};\nyc.defaultProps = {\n  mutationMode: \"undoable\",\n  data: []\n};\nl();\nimport * as si from \"react\";\nimport At from \"prop-types\";\nimport { useRecordContext as Sb, useSaveContext as Eb } from \"ra-core\";\nl();\nimport * as oi from \"react\";\nimport { styled as sb } from \"@mui/material/styles\";\nimport wt from \"prop-types\";\nimport { alpha as ab } from \"@mui/material/styles\";\nimport ib from \"@mui/icons-material/Delete\";\nimport lb from \"clsx\";\nimport { useDeleteWithUndoController as pb, useRecordContext as cb, useResourceContext as mb } from \"ra-core\";\nvar ri = n(e => {\n  let y = e,\n      {\n    label: t = \"ra.action.delete\",\n    className: o,\n    icon: r = db,\n    onClick: s,\n    redirect: a = \"list\",\n    mutationOptions: p\n  } = y,\n      c = f(y, [\"label\", \"className\", \"icon\", \"onClick\", \"redirect\", \"mutationOptions\"]),\n      d = cb(e),\n      m = mb(e),\n      {\n    isLoading: u,\n    handleDelete: g\n  } = pb({\n    record: d,\n    resource: m,\n    redirect: a,\n    onClick: s,\n    mutationOptions: p\n  });\n  return oi.createElement(fb, i({\n    onClick: g,\n    disabled: u,\n    label: t,\n    className: lb(\"ra-delete-button\", o),\n    key: \"button\"\n  }, c), r);\n}, \"DeleteWithUndoButton\"),\n    db = oi.createElement(ib, null);\nri.propTypes = {\n  className: wt.string,\n  label: wt.string,\n  record: wt.any,\n  redirect: wt.oneOfType([wt.string, wt.bool, wt.func]),\n  resource: wt.string,\n  icon: wt.element\n};\nvar ub = \"RaDeleteWithUndoButton\",\n    fb = sb(j, {\n  name: ub,\n  overridesResolver: (e, t) => t.root\n})(_ref8 => {\n  let {\n    theme: e\n  } = _ref8;\n  return {\n    color: e.palette.error.main,\n    \"&:hover\": {\n      backgroundColor: ab(e.palette.error.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n});\nl();\nimport es, { Fragment as gb } from \"react\";\nimport { styled as yb } from \"@mui/material/styles\";\nimport qe from \"prop-types\";\nimport { alpha as bb } from \"@mui/material/styles\";\nimport Rb from \"@mui/icons-material/Delete\";\nimport hb from \"clsx\";\nimport bc from \"inflection\";\nimport { useDeleteWithConfirmController as Tb, useRecordContext as Pb, useResourceContext as xb, useTranslate as Cb } from \"ra-core\";\nvar ni = n(e => {\n  let N = e,\n      {\n    className: t,\n    confirmTitle: o = \"ra.message.delete_title\",\n    confirmContent: r = \"ra.message.delete_content\",\n    icon: s = vb,\n    label: a = \"ra.action.delete\",\n    mutationMode: p = \"pessimistic\",\n    onClick: c,\n    redirect: d = \"list\",\n    translateOptions: m = {},\n    mutationOptions: u\n  } = N,\n      g = f(N, [\"className\", \"confirmTitle\", \"confirmContent\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"redirect\", \"translateOptions\", \"mutationOptions\"]),\n      y = Cb(),\n      b = Pb(e),\n      P = xb(e),\n      {\n    open: T,\n    isLoading: C,\n    handleDialogOpen: x,\n    handleDialogClose: I,\n    handleDelete: v\n  } = Tb({\n    record: b,\n    redirect: d,\n    mutationMode: p,\n    onClick: c,\n    mutationOptions: u,\n    resource: P\n  });\n  return es.createElement(gb, null, es.createElement(Fb, i({\n    onClick: x,\n    label: a,\n    className: hb(\"ra-delete-button\", t),\n    key: \"button\"\n  }, g), s), es.createElement(To, {\n    isOpen: T,\n    loading: C,\n    title: o,\n    content: r,\n    translateOptions: i({\n      name: y(`resources.${P}.forcedCaseName`, {\n        smart_count: 1,\n        _: bc.humanize(y(`resources.${P}.name`, {\n          smart_count: 1,\n          _: bc.singularize(P)\n        }), !0)\n      }),\n      id: b.id\n    }, m),\n    onConfirm: v,\n    onClose: I\n  }));\n}, \"DeleteWithConfirmButton\"),\n    vb = es.createElement(Rb, null);\nni.propTypes = {\n  className: qe.string,\n  confirmTitle: qe.string,\n  confirmContent: qe.string,\n  label: qe.string,\n  mutationMode: qe.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  record: qe.any,\n  redirect: qe.oneOfType([qe.string, qe.bool, qe.func]),\n  resource: qe.string,\n  icon: qe.element,\n  translateOptions: qe.object\n};\nvar Ib = \"RaDeleteWithConfirmButton\",\n    Fb = yb(j, {\n  name: Ib,\n  overridesResolver: (e, t) => t.root\n})(_ref9 => {\n  let {\n    theme: e\n  } = _ref9;\n  return {\n    color: e.palette.error.main,\n    \"&:hover\": {\n      backgroundColor: bb(e.palette.error.main, .12),\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n});\nvar ai = n(e => {\n  let p = e,\n      {\n    mutationMode: t\n  } = p,\n      o = f(p, [\"mutationMode\"]),\n      r = Sb(e),\n      s = Eb(e);\n  if (!r || r.id == null) return null;\n  let a = t || ((s == null ? void 0 : s.mutationMode) ? s.mutationMode : \"undoable\");\n  return a === \"undoable\" ? si.createElement(ri, i({\n    record: r\n  }, o)) : si.createElement(ni, i({\n    mutationMode: a,\n    record: r\n  }, o));\n}, \"DeleteButton\");\nai.propTypes = {\n  label: At.string,\n  mutationMode: At.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  record: At.any,\n  redirect: At.oneOfType([At.string, At.bool, At.func]),\n  resource: At.string,\n  icon: At.element\n};\nl();\nimport * as ii from \"react\";\nimport ts from \"prop-types\";\nimport Nb from \"@mui/icons-material/Create\";\nimport { Link as Bb } from \"react-router-dom\";\nimport { useResourceContext as Lb, useRecordContext as kb, useCreatePath as wb } from \"ra-core\";\nvar li = n(e => {\n  let d = e,\n      {\n    icon: t = $b,\n    label: o = \"ra.action.edit\",\n    scrollToTop: r = !0\n  } = d,\n      s = f(d, [\"icon\", \"label\", \"scrollToTop\"]),\n      a = Lb(e),\n      p = kb(e),\n      c = wb();\n  return p ? ii.createElement(j, i({\n    component: Bb,\n    to: c({\n      type: \"edit\",\n      resource: a,\n      id: p.id\n    }),\n    state: Ab[String(r)],\n    label: o,\n    onClick: Ob\n  }, s), t) : null;\n}, \"EditButton\"),\n    Ab = {\n  true: {\n    _scrollToTop: !0\n  },\n  false: {}\n},\n    $b = ii.createElement(Nb, null),\n    Ob = n(e => e.stopPropagation(), \"stopPropagation\");\nli.propTypes = {\n  icon: ts.element,\n  label: ts.string,\n  record: ts.any,\n  scrollToTop: ts.bool\n};\nl();\nimport * as pi from \"react\";\nimport { useCallback as Db } from \"react\";\nimport $t from \"prop-types\";\nimport Mb from \"@mui/icons-material/GetApp\";\nimport { fetchRelatedRecords as Vb, useDataProvider as _b, useNotify as Hb, useListContext as zb, useResourceContext as Wb } from \"ra-core\";\nvar ci = n(e => {\n  let x = e,\n      {\n    maxResults: t = 1e3,\n    onClick: o,\n    label: r = \"ra.action.export\",\n    icon: s = qb,\n    exporter: a\n  } = x,\n      p = f(x, [\"maxResults\", \"onClick\", \"label\", \"icon\", \"exporter\"]),\n      {\n    filter: c,\n    filterValues: d,\n    sort: m,\n    exporter: u,\n    total: g\n  } = zb(e),\n      y = Wb(e),\n      b = a || u,\n      P = _b(),\n      T = Hb(),\n      C = Db(I => {\n    P.getList(y, {\n      sort: m,\n      filter: c ? i(i({}, d), c) : d,\n      pagination: {\n        page: 1,\n        perPage: t\n      }\n    }).then(_ref10 => {\n      let {\n        data: v\n      } = _ref10;\n      return b && b(v, Vb(P), P, y);\n    }).catch(v => {\n      console.error(v), T(\"ra.notification.http_error\", {\n        type: \"warning\"\n      });\n    }), typeof o == \"function\" && o(I);\n  }, [P, b, c, d, t, T, o, y, m]);\n\n  return pi.createElement(j, i({\n    onClick: C,\n    label: r,\n    disabled: g === 0\n  }, jb(p)), s);\n}, \"ExportButton\"),\n    qb = pi.createElement(Mb, null),\n    jb = n(r => {\n  var s = r,\n      {\n    filterValues: e,\n    resource: t\n  } = s,\n      o = f(s, [\"filterValues\", \"resource\"]);\n  return o;\n}, \"sanitizeRestProps\");\nci.propTypes = {\n  exporter: $t.func,\n  filterValues: $t.object,\n  label: $t.string,\n  maxResults: $t.number,\n  resource: $t.string,\n  sort: $t.exact({\n    field: $t.string,\n    order: $t.string\n  }),\n  icon: $t.element\n};\nl();\nimport * as mn from \"react\";\nimport { IconButton as Ub, Tooltip as Xb } from \"@mui/material\";\nimport { useTranslate as Qb } from \"ra-core\";\nvar mi = n(r => {\n  var s = r,\n      {\n    label: e,\n    onClick: t\n  } = s,\n      o = f(s, [\"label\", \"onClick\"]);\n  let a = Qb(),\n      [p, c] = mn.useState(!1),\n      d = n(() => {\n    c(!1);\n  }, \"handleClose\"),\n      m = n(() => {\n    c(!0);\n  }, \"handleOpen\"),\n      u = a(e, {\n    _: e\n  });\n  return mn.createElement(Xb, {\n    title: u,\n    open: p,\n    onOpen: m,\n    onClose: d\n  }, mn.createElement(Ub, S(i({\n    \"aria-label\": u,\n    onClick: n(y => {\n      d(), t(y);\n    }, \"handleClick\")\n  }, o), {\n    size: \"large\"\n  })));\n}, \"IconButtonWithTooltip\");\nl();\nimport * as Xt from \"react\";\nimport { useState as Gb } from \"react\";\nimport { useLocaleState as Jb } from \"ra-core\";\nimport { Box as Kb, Button as Yb, Menu as Zb, MenuItem as eR, styled as tR } from \"@mui/material\";\nimport oR from \"@mui/icons-material/Translate\";\nimport rR from \"@mui/icons-material/ExpandMore\";\nvar q0 = n(_ref11 => {\n  let {\n    languages: e\n  } = _ref11;\n  let [t, o] = Gb(null),\n      [r, s] = Jb(),\n      a = n(m => {\n    let u = e.find(g => g.locale === m);\n    return u ? u.name : \"\";\n  }, \"getNameForLocale\"),\n      p = n(m => () => {\n    s(m), o(null);\n  }, \"changeLocale\"),\n      c = n(m => {\n    o(m.currentTarget);\n  }, \"handleLanguageClick\"),\n      d = n(() => {\n    o(null);\n  }, \"handleClose\");\n  return Xt.createElement(nR, null, Xt.createElement(Yb, {\n    color: \"inherit\",\n    \"aria-controls\": \"simple-menu\",\n    \"aria-label\": \"\",\n    \"aria-haspopup\": \"true\",\n    onClick: c\n  }, Xt.createElement(oR, null), Xt.createElement(\"div\", {\n    className: hc.selectedLanguage\n  }, a(r)), Xt.createElement(rR, {\n    fontSize: \"small\"\n  })), Xt.createElement(Zb, {\n    id: \"simple-menu\",\n    anchorEl: t,\n    keepMounted: !0,\n    open: Boolean(t),\n    onClose: d\n  }, e.map(m => Xt.createElement(eR, {\n    key: m.locale,\n    onClick: p(m.locale)\n  }, m.name))));\n}, \"LocalesMenuButton\"),\n    Rc = \"RaLocalesMenuButton\",\n    hc = {\n  selectedLanguage: `${Rc}-selectedLanguage`\n},\n    nR = tR(Kb, {\n  name: Rc,\n  overridesResolver: (e, t) => t.root\n})(_ref12 => {\n  let {\n    theme: e\n  } = _ref12;\n  return {\n    [`& .${hc.selectedLanguage}`]: {\n      marginLeft: e.spacing(1)\n    }\n  };\n});\nl();\nimport * as di from \"react\";\nimport Tc from \"prop-types\";\nimport sR from \"@mui/icons-material/List\";\nimport { Link as aR } from \"react-router-dom\";\nimport { useResourceContext as iR, useCreatePath as lR } from \"ra-core\";\nvar ui = n(e => {\n  let c = e,\n      {\n    icon: t = cR,\n    label: o = \"ra.action.list\",\n    scrollToTop: r = !0\n  } = c,\n      s = f(c, [\"icon\", \"label\", \"scrollToTop\"]),\n      a = iR(e),\n      p = lR();\n  return di.createElement(j, i({\n    component: aR,\n    to: p({\n      type: \"list\",\n      resource: a\n    }),\n    state: pR[String(r)],\n    label: o\n  }, s), t);\n}, \"ListButton\"),\n    pR = {\n  true: {\n    _scrollToTop: !0\n  },\n  false: {}\n},\n    cR = di.createElement(sR, null);\nui.propTypes = {\n  icon: Tc.element,\n  label: Tc.string\n};\nl();\nimport * as fi from \"react\";\nimport { useCallback as mR } from \"react\";\nimport gi from \"prop-types\";\nimport dR from \"@mui/icons-material/Refresh\";\nimport { useRefresh as uR } from \"ra-core\";\nvar fR = n(e => {\n  let c = e,\n      {\n    label: t = \"ra.action.refresh\",\n    icon: o = gR,\n    onClick: r\n  } = c,\n      s = f(c, [\"label\", \"icon\", \"onClick\"]),\n      a = uR(),\n      p = mR(d => {\n    d.preventDefault(), a(), typeof r == \"function\" && r(d);\n  }, [a, r]);\n  return fi.createElement(j, i({\n    label: t,\n    onClick: p\n  }, s), o);\n}, \"RefreshButton\"),\n    gR = fi.createElement(dR, null);\nfR.propTypes = {\n  label: gi.string,\n  icon: gi.element,\n  onClick: gi.func\n};\nl();\nimport * as os from \"react\";\nimport { useCallback as yR } from \"react\";\nimport yi from \"prop-types\";\nimport bR from \"@mui/material/Tooltip\";\nimport RR from \"@mui/material/IconButton\";\nimport hR from \"@mui/icons-material/Refresh\";\nimport { useRefresh as TR, useTranslate as PR } from \"ra-core\";\nvar bi = n(e => {\n  let m = e,\n      {\n    label: t = \"ra.action.refresh\",\n    icon: o = xR,\n    onClick: r,\n    className: s\n  } = m,\n      a = f(m, [\"label\", \"icon\", \"onClick\", \"className\"]),\n      p = TR(),\n      c = PR(),\n      d = yR(u => {\n    u.preventDefault(), p(), typeof r == \"function\" && r(u);\n  }, [p, r]);\n  return os.createElement(bR, {\n    title: t && c(t, {\n      _: t\n    })\n  }, os.createElement(RR, S(i({\n    \"aria-label\": t && c(t, {\n      _: t\n    }),\n    className: s,\n    color: \"inherit\",\n    onClick: d\n  }, a), {\n    size: \"large\"\n  }), o));\n}, \"RefreshIconButton\"),\n    xR = os.createElement(hR, null);\nbi.propTypes = {\n  className: yi.string,\n  label: yi.string,\n  icon: yi.element\n};\nl();\nimport * as rs from \"react\";\nimport { useCallback as CR } from \"react\";\nimport { styled as vR } from \"@mui/material/styles\";\nimport Po from \"prop-types\";\nimport { Button as IR, CircularProgress as FR } from \"@mui/material\";\nimport SR from \"@mui/icons-material/Save\";\nimport { useFormContext as ER, useFormState as NR } from \"react-hook-form\";\nimport { useNotify as BR, useSaveContext as LR, useTranslate as kR, warning as wR } from \"ra-core\";\nvar Ri = n(e => {\n  let k = e,\n      {\n    color: t = \"primary\",\n    icon: o = AR,\n    invalid: r,\n    label: s = \"ra.action.save\",\n    onClick: a,\n    mutationOptions: p,\n    saving: c,\n    disabled: d,\n    type: m = \"submit\",\n    transform: u,\n    variant: g = \"contained\",\n    alwaysEnable: y = !1\n  } = k,\n      b = f(k, [\"color\", \"icon\", \"invalid\", \"label\", \"onClick\", \"mutationOptions\", \"saving\", \"disabled\", \"type\", \"transform\", \"variant\", \"alwaysEnable\"]),\n      P = kR(),\n      T = BR(),\n      C = ER(),\n      x = LR(),\n      {\n    isDirty: I,\n    isValidating: v\n  } = NR(),\n      N = DR(y === !1 || y === void 0 ? void 0 : !y, d || !I || v || (x == null ? void 0 : x.saving));\n  wR(m === \"submit\" && (p && (p.onSuccess || p.onError) || u), 'Cannot use <SaveButton mutationOptions> props on a button of type \"submit\". To override the default mutation options on a particular save button, set the <SaveButton type=\"button\"> prop, or set mutationOptions in the main view component (<Create> or <Edit>).');\n  let F = CR(async L => {\n    if (a && a(L), !L.defaultPrevented && m === \"button\") {\n      if (L.preventDefault(), !(await C.trigger())) {\n        L.preventDefault(), T(\"ra.message.invalid_form\", {\n          type: \"warning\"\n        });\n        return;\n      }\n\n      let H = C.getValues();\n      x == null || x.save(H, S(i({}, p), {\n        transform: u\n      }));\n    }\n  }, [C, T, p, x, u, a, m]),\n      E = s && P(s, {\n    _: s\n  }),\n      B = typeof c != \"undefined\" ? c : x == null ? void 0 : x.saving;\n  return rs.createElement(OR, i({\n    variant: g,\n    type: m,\n    color: t,\n    \"aria-label\": E,\n    disabled: N,\n    onClick: F\n  }, sn(b)), B ? rs.createElement(FR, {\n    size: 18,\n    thickness: 2\n  }) : o, E);\n}, \"SaveButton\"),\n    AR = rs.createElement(SR, null);\nRi.propTypes = {\n  className: Po.string,\n  invalid: Po.bool,\n  label: Po.string,\n  saving: Po.bool,\n  variant: Po.oneOf([\"text\", \"outlined\", \"contained\"]),\n  icon: Po.element,\n  alwaysEnable: Po.bool\n};\nvar $R = \"RaSaveButton\",\n    OR = vR(IR, {\n  name: $R,\n  overridesResolver: (e, t) => t.root\n})(_ref13 => {\n  let {\n    theme: e\n  } = _ref13;\n  return {\n    position: \"relative\",\n    [\"& .MuiSvgIcon-root, & .MuiIcon-root, & .MuiCircularProgress-root\"]: {\n      marginRight: e.spacing(1)\n    },\n    [\"& .MuiSvgIcon-root, & .MuiIcon-root\"]: {\n      fontSize: 18\n    }\n  };\n}),\n    DR = n((e, t) => typeof e == \"undefined\" ? t : e, \"valueOrDefault\");\nl();\nimport MR from \"react\";\nimport { styled as VR } from \"@mui/material/styles\";\nimport { useTranslate as _R } from \"ra-core\";\nvar Pc = n(() => {\n  let e = _R();\n\n  return MR.createElement(zR, {\n    onClick: WR,\n    className: \"skip-nav-button\",\n    label: e(\"ra.navigation.skip_nav\"),\n    variant: \"contained\"\n  });\n}, \"SkipNavigationButton\"),\n    HR = \"RaSkipNavigationButton\",\n    zR = VR(j, {\n  name: HR,\n  overridesResolver: (e, t) => t.root\n})(_ref14 => {\n  let {\n    theme: e\n  } = _ref14;\n  return {\n    position: \"fixed\",\n    padding: e.spacing(1),\n    backgroundColor: e.palette.background.default,\n    color: e.palette.getContrastText(e.palette.background.default),\n    transition: e.transitions.create([\"top\", \"opacity\"], {\n      easing: e.transitions.easing.easeIn,\n      duration: e.transitions.duration.leavingScreen\n    }),\n    left: e.spacing(2),\n    top: e.spacing(-10),\n    zIndex: 5e3,\n    \"&:hover\": {\n      opacity: .8,\n      backgroundColor: e.palette.background.default\n    },\n    \"&:focus\": {\n      top: e.spacing(2),\n      transition: e.transitions.create([\"top\", \"opacity\"], {\n        easing: e.transitions.easing.easeOut,\n        duration: e.transitions.duration.enteringScreen\n      })\n    }\n  };\n}),\n    WR = n(() => {\n  if (typeof document == \"undefined\") return;\n  let e = document.getElementById(\"main-content\");\n\n  if (!e) {\n    process.env.NODE_ENV !== \"production\" && console.warn('No element with id \"main-content\" was found. Ensure the element that contains your main content has an id of \"main-content\".');\n    return;\n  }\n\n  e.setAttribute(\"tabIndex\", \"-1\"), e.focus(), e.blur(), e.removeAttribute(\"tabIndex\");\n}, \"skipToContent\");\nl();\nimport ns from \"react\";\nimport { Tooltip as qR, IconButton as jR } from \"@mui/material\";\nimport UR from \"@mui/icons-material/Brightness4\";\nimport XR from \"@mui/icons-material/Brightness7\";\nimport { useTranslate as QR } from \"ra-core\";\nvar j_ = n(e => {\n  let t = QR(),\n      {\n    darkTheme: o,\n    lightTheme: r\n  } = e,\n      [s, a] = ss(r),\n      p = n(() => {\n    a((s == null ? void 0 : s.palette.mode) === \"dark\" ? r : o);\n  }, \"handleTogglePaletteType\"),\n      c = t(\"ra.action.toggle_theme\", {\n    _: \"Toggle Theme\"\n  });\n  return ns.createElement(qR, {\n    title: c,\n    enterDelay: 300\n  }, ns.createElement(jR, {\n    color: \"inherit\",\n    onClick: p,\n    \"aria-label\": c\n  }, (s == null ? void 0 : s.palette.mode) === \"dark\" ? ns.createElement(XR, null) : ns.createElement(UR, null)));\n}, \"ToggleThemeButton\");\nvar Ti = n(e => {\n  let p = e,\n      {\n    className: t,\n    sx: o\n  } = p,\n      r = f(p, [\"className\", \"sx\"]),\n      s = ZR(),\n      a = KR();\n  return as.createElement(eh, {\n    className: t,\n    sx: o\n  }, s ? as.createElement(YR, i({\n    className: JR(\"app-loader\", is.loader),\n    color: \"inherit\",\n    size: a.spacing(2),\n    thickness: 6\n  }, r)) : as.createElement(bi, {\n    className: is.loadedIcon\n  }));\n}, \"LoadingIndicator\");\nTi.propTypes = {\n  classes: hi.object,\n  className: hi.string,\n  width: hi.string\n};\nvar Pi = \"RaLoadingIndicator\",\n    is = {\n  loader: `${Pi}-loader`,\n  loadedIcon: `${Pi}-loadedIcon`\n},\n    eh = GR(\"div\", {\n  name: Pi,\n  overridesResolver: (e, t) => t.root\n})(_ref15 => {\n  let {\n    theme: e\n  } = _ref15;\n  return {\n    [`& .${is.loader}`]: {\n      marginLeft: e.spacing(2),\n      marginRight: e.spacing(2)\n    },\n    [`& .${is.loadedIcon}`]: {}\n  };\n});\nl();\nimport * as lt from \"react\";\nimport { useCallback as uh, useMemo as fh, useState as gh } from \"react\";\nimport { styled as yh } from \"@mui/material/styles\";\nimport ps from \"prop-types\";\nimport { useAuthProvider as bh, useGetIdentity as Rh, useTranslate as hh } from \"ra-core\";\nimport { Tooltip as Th, IconButton as Ph, Menu as xh, Button as Ch, Avatar as Fc, useMediaQuery as vh } from \"@mui/material\";\nimport Ih from \"@mui/icons-material/AccountCircle\";\nl();\nimport * as xc from \"react\";\nl();\nimport { createContext as th } from \"react\";\nvar ls = th(void 0);\nvar Cc = n(_ref16 => {\n  let {\n    children: e,\n    value: t\n  } = _ref16;\n  return xc.createElement(ls.Provider, {\n    value: t\n  }, e);\n}, \"UserMenuContextProvider\");\nl();\nimport * as xo from \"react\";\nimport { styled as oh } from \"@mui/material/styles\";\nimport { useCallback as rh } from \"react\";\nimport xi from \"prop-types\";\nimport { ListItemIcon as nh, ListItemText as sh, MenuItem as ah, useMediaQuery as ih } from \"@mui/material\";\nimport lh from \"@mui/icons-material/PowerSettingsNew\";\nimport ph from \"clsx\";\nimport { useTranslate as ch, useLogout as mh } from \"ra-core\";\nvar Ci = xo.forwardRef(n(function (t, o) {\n  let g = t,\n      {\n    className: r,\n    redirectTo: s,\n    icon: a\n  } = g,\n      p = f(g, [\"className\", \"redirectTo\", \"icon\"]),\n      c = ih(y => y.breakpoints.down(\"sm\")),\n      d = ch(),\n      m = mh(),\n      u = rh(() => m(null, s, !1), [s, m]);\n  return xo.createElement(dh, i({\n    className: ph(\"logout\", r),\n    onClick: u,\n    ref: o,\n    component: c ? \"span\" : \"li\"\n  }, p), xo.createElement(nh, {\n    className: Ic.icon\n  }, a || xo.createElement(lh, null)), xo.createElement(sh, null, d(\"ra.auth.logout\")));\n}, \"Logout\"));\nCi.propTypes = {\n  className: xi.string,\n  redirectTo: xi.string,\n  icon: xi.element\n};\nvar vc = \"RaLogout\",\n    Ic = {\n  icon: `${vc}-icon`\n},\n    dh = oh(ah, {\n  name: vc,\n  overridesResolver: (e, t) => t.root\n})(_ref17 => {\n  let {\n    theme: e\n  } = _ref17;\n  return {\n    color: e.palette.text.secondary,\n    [`& .${Ic.icon}`]: {\n      minWidth: e.spacing(5)\n    }\n  };\n});\nvar cs = n(e => {\n  let [t, o] = gh(null),\n      r = hh(),\n      {\n    isLoading: s,\n    identity: a\n  } = Rh(),\n      p = bh(),\n      c = vh(C => C.breakpoints.up(\"sm\")),\n      {\n    children: d = p ? lt.createElement(Ci, null) : null,\n    className: m,\n    label: u = \"ra.auth.user_menu\",\n    icon: g = Sh\n  } = e,\n      y = n(C => o(C.currentTarget), \"handleMenu\"),\n      b = uh(() => o(null), []),\n      P = fh(() => ({\n    onClose: b\n  }), [b]);\n  if (!d) return null;\n  let T = Boolean(t);\n  return lt.createElement(Fh, {\n    className: m\n  }, c && !s && (a == null ? void 0 : a.fullName) ? lt.createElement(Ch, {\n    \"aria-label\": u && r(u, {\n      _: u\n    }),\n    className: dn.userButton,\n    color: \"inherit\",\n    startIcon: a.avatar ? lt.createElement(Fc, {\n      className: dn.avatar,\n      src: a.avatar,\n      alt: a.fullName\n    }) : g,\n    onClick: y\n  }, a.fullName) : lt.createElement(Th, {\n    title: u && r(u, {\n      _: u\n    })\n  }, lt.createElement(Ph, {\n    \"aria-label\": u && r(u, {\n      _: u\n    }),\n    \"aria-owns\": T ? \"menu-appbar\" : null,\n    \"aria-haspopup\": !0,\n    color: \"inherit\",\n    onClick: y,\n    size: \"large\"\n  }, !s && (a == null ? void 0 : a.avatar) ? lt.createElement(Fc, {\n    className: dn.avatar,\n    src: a.avatar,\n    alt: a.fullName\n  }) : g)), lt.createElement(Cc, {\n    value: P\n  }, lt.createElement(xh, {\n    id: \"menu-appbar\",\n    disableScrollLock: !0,\n    anchorEl: t,\n    anchorOrigin: Eh,\n    transformOrigin: Nh,\n    open: T,\n    onClose: b\n  }, d)));\n}, \"UserMenu\");\ncs.propTypes = {\n  children: ps.node,\n  classes: ps.object,\n  label: ps.string,\n  icon: ps.node\n};\nvar vi = \"RaUserMenu\",\n    dn = {\n  userButton: `${vi}-userButton`,\n  avatar: `${vi}-avatar`\n},\n    Fh = yh(\"div\", {\n  name: vi,\n  overridesResolver: (e, t) => t.root\n})(_ref18 => {\n  let {\n    theme: e\n  } = _ref18;\n  return {\n    [`& .${dn.userButton}`]: {\n      textTransform: \"none\"\n    },\n    [`& .${dn.avatar}`]: {\n      width: e.spacing(4),\n      height: e.spacing(4)\n    }\n  };\n}),\n    Sh = lt.createElement(Ih, null),\n    Eh = {\n  vertical: \"bottom\",\n  horizontal: \"right\"\n},\n    Nh = {\n  vertical: \"top\",\n  horizontal: \"right\"\n};\nl();\nimport * as Sc from \"react\";\nimport Bh from \"prop-types\";\nimport Lh from \"@mui/material/useScrollTrigger\";\nimport kh from \"@mui/material/Slide\";\nvar Ii = n(e => {\n  let {\n    children: t\n  } = e,\n      o = Lh();\n  return Sc.createElement(kh, {\n    appear: !1,\n    direction: \"down\",\n    in: !o\n  }, t);\n}, \"HideOnScroll\");\nIi.propTypes = {\n  children: Bh.node.isRequired\n};\nvar Fi = $h(e => {\n  let u = e,\n      {\n    children: t,\n    className: o,\n    color: r = \"secondary\",\n    open: s,\n    title: a,\n    userMenu: p = Hh,\n    container: c = Ii\n  } = u,\n      d = f(u, [\"children\", \"className\", \"color\", \"open\", \"title\", \"userMenu\", \"container\"]),\n      m = Vh(g => g.breakpoints.down(\"sm\"));\n  return Ot.createElement(c, {\n    className: o\n  }, Ot.createElement(zh, i({\n    className: Io.appBar,\n    color: r\n  }, d), Ot.createElement(Dh, {\n    disableGutters: !0,\n    variant: m ? \"regular\" : \"dense\",\n    className: Io.toolbar\n  }, Ot.createElement(nc, {\n    className: Io.menuButton\n  }), Ah.count(t) === 0 ? Ot.createElement(Mh, {\n    variant: \"h6\",\n    color: \"inherit\",\n    className: Io.title,\n    id: \"react-admin-title\"\n  }) : t, Ot.createElement(Ti, null), typeof p == \"boolean\" ? p === !0 ? Ot.createElement(cs, null) : null : p)));\n});\nFi.propTypes = {\n  children: Co.node,\n  className: Co.string,\n  color: Co.oneOf([\"default\", \"inherit\", \"primary\", \"secondary\", \"transparent\"]),\n  container: _h,\n  open: Co.bool,\n  userMenu: Co.oneOfType([Co.element, Co.bool])\n};\nvar Hh = Ot.createElement(cs, null),\n    vo = \"RaAppBar\",\n    Io = {\n  appBar: `${vo}-appBar`,\n  toolbar: `${vo}-toolbar`,\n  menuButton: `${vo}-menuButton`,\n  menuButtonIconClosed: `${vo}-menuButtonIconClosed`,\n  menuButtonIconOpen: `${vo}-menuButtonIconOpen`,\n  title: `${vo}-title`\n},\n    zh = wh(Oh, {\n  name: vo,\n  overridesResolver: (e, t) => t.root\n})(_ref19 => {\n  let {\n    theme: e\n  } = _ref19;\n  return {\n    [`& .${Io.toolbar}`]: {\n      paddingRight: 24\n    },\n    [`& .${Io.menuButton}`]: {\n      marginLeft: \"0.2em\",\n      marginRight: \"0.2em\"\n    },\n    [`& .${Io.title}`]: {\n      flex: 1,\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\"\n    }\n  };\n});\nl();\nimport * as Ec from \"react\";\nimport { styled as Wh } from \"@mui/material/styles\";\nimport Si from \"prop-types\";\nimport qh from \"@mui/material/CardContent\";\nvar jh = n(e => {\n  let {\n    className: t,\n    children: o\n  } = e;\n  return Ec.createElement(Uh, {\n    className: t\n  }, o);\n}, \"CardContentInner\");\njh.propTypes = {\n  className: Si.string,\n  classes: Si.object,\n  children: Si.node\n};\nvar Nc = \"RaCardContentInner\",\n    vH = {\n  root: `${Nc}-root`\n},\n    Uh = Wh(qh, {\n  name: Nc,\n  overridesResolver: (e, t) => t.root\n})(_ref20 => {\n  let {\n    theme: e\n  } = _ref20;\n  return {\n    paddingTop: 0,\n    paddingBottom: 0,\n    \"&:first-of-type\": {\n      paddingTop: 16\n    },\n    \"&:last-child\": {\n      paddingBottom: 16,\n      [e.breakpoints.only(\"xs\")]: {\n        paddingBottom: 70\n      }\n    }\n  };\n});\nl();\nimport * as Rt from \"react\";\nimport { styled as Xh } from \"@mui/material/styles\";\nimport { useCallback as Bc } from \"react\";\nimport je from \"prop-types\";\nimport Qh from \"@mui/material/Dialog\";\nimport Gh from \"@mui/material/DialogActions\";\nimport Jh from \"@mui/material/DialogContent\";\nimport Kh from \"@mui/material/DialogContentText\";\nimport Yh from \"@mui/material/DialogTitle\";\nimport Lc from \"@mui/material/Button\";\nimport { alpha as Zh } from \"@mui/material/styles\";\nimport eT from \"@mui/icons-material/CheckCircle\";\nimport tT from \"@mui/icons-material/ErrorOutline\";\nimport oT from \"clsx\";\nimport { useTranslate as rT } from \"ra-core\";\nvar To = n(e => {\n  let {\n    className: t,\n    isOpen: o = !1,\n    loading: r,\n    title: s,\n    content: a,\n    cancel: p = \"ra.action.cancel\",\n    confirm: c = \"ra.action.confirm\",\n    confirmColor: d = \"primary\",\n    ConfirmIcon: m = eT,\n    CancelIcon: u = tT,\n    onClose: g,\n    onConfirm: y,\n    translateOptions: b = {},\n    sx: P\n  } = e,\n      T = rT(),\n      C = Bc(I => {\n    I.stopPropagation(), y(I);\n  }, [y]),\n      x = Bc(I => {\n    I.stopPropagation();\n  }, []);\n  return Rt.createElement(nT, {\n    className: t,\n    open: o,\n    onClose: g,\n    onClick: x,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    sx: P\n  }, Rt.createElement(Yh, {\n    id: \"alert-dialog-title\"\n  }, T(s, i({\n    _: s\n  }, b))), Rt.createElement(Jh, null, typeof a == \"string\" ? Rt.createElement(Kh, null, T(a, i({\n    _: a\n  }, b))) : a), Rt.createElement(Gh, null, Rt.createElement(Lc, {\n    disabled: r,\n    onClick: g\n  }, Rt.createElement(u, {\n    className: Fo.iconPaddingStyle\n  }), T(p, {\n    _: p\n  })), Rt.createElement(Lc, {\n    disabled: r,\n    onClick: C,\n    className: oT(\"ra-confirm\", {\n      [Fo.confirmWarning]: d === \"warning\",\n      [Fo.confirmPrimary]: d === \"primary\"\n    }),\n    autoFocus: !0\n  }, Rt.createElement(m, {\n    className: Fo.iconPaddingStyle\n  }), T(c, {\n    _: c\n  }))));\n}, \"Confirm\");\nTo.propTypes = {\n  cancel: je.string,\n  className: je.string,\n  confirm: je.string,\n  confirmColor: je.string,\n  ConfirmIcon: je.elementType,\n  CancelIcon: je.elementType,\n  content: je.node.isRequired,\n  isOpen: je.bool,\n  loading: je.bool,\n  onClose: je.func.isRequired,\n  onConfirm: je.func.isRequired,\n  title: je.string.isRequired,\n  sx: je.any\n};\nvar ms = \"RaConfirm\",\n    Fo = {\n  confirmPrimary: `${ms}-confirmPrimary`,\n  confirmWarning: `${ms}-confirmWarning`,\n  iconPaddingStyle: `${ms}-iconPaddingStyle`\n},\n    nT = Xh(Qh, {\n  name: ms,\n  overridesResolver: (e, t) => t.root\n})(_ref21 => {\n  let {\n    theme: e\n  } = _ref21;\n  return {\n    [`& .${Fo.confirmPrimary}`]: {\n      color: e.palette.primary.main\n    },\n    [`& .${Fo.confirmWarning}`]: {\n      color: e.palette.error.main,\n      \"&:hover\": {\n        backgroundColor: Zh(e.palette.error.main, .12),\n        \"@media (hover: none)\": {\n          backgroundColor: \"transparent\"\n        }\n      }\n    },\n    [`& .${Fo.iconPaddingStyle}`]: {\n      paddingRight: \"0.5em\"\n    }\n  };\n});\nl();\nimport * as Ni from \"react\";\nimport fs from \"prop-types\";\nimport RT from \"@mui/icons-material/Dashboard\";\nimport { useTranslate as hT, useBasename as TT } from \"ra-core\";\nl();\nimport ds, { forwardRef as kc, useCallback as sT } from \"react\";\nimport { styled as aT } from \"@mui/material/styles\";\nimport Qt from \"prop-types\";\nimport iT from \"clsx\";\nimport { Link as lT, useMatch as pT } from \"react-router-dom\";\nimport { MenuItem as cT, ListItemIcon as mT, Tooltip as dT, useMediaQuery as uT } from \"@mui/material\";\nimport { useTranslate as fT, useBasename as gT } from \"ra-core\";\nvar un = kc((e, t) => {\n  let I = e,\n      {\n    className: o,\n    primaryText: r,\n    leftIcon: s,\n    onClick: a,\n    sidebarIsOpen: p,\n    tooltipProps: c\n  } = I,\n      d = f(I, [\"className\", \"primaryText\", \"leftIcon\", \"onClick\", \"sidebarIsOpen\", \"tooltipProps\"]),\n      m = uT(v => v.breakpoints.down(\"md\")),\n      u = fT(),\n      g = gT(),\n      [y, b] = bt(),\n      P = sT(v => {\n    m && b(!1), a && a(v);\n  }, [b, m, a]),\n      T = (typeof e.to == \"string\" ? e.to : e.to.pathname) || \"\",\n      C = pT({\n    path: T,\n    end: T === `${g}/`\n  }),\n      x = n(() => ds.createElement(yT, S(i({\n    className: iT(o, {\n      [us.active]: !!C\n    }),\n    component: bT,\n    ref: t,\n    tabIndex: 0\n  }, d), {\n    onClick: P\n  }), s && ds.createElement(mT, {\n    className: us.icon\n  }, s), typeof r == \"string\" ? u(r, {\n    _: r\n  }) : r), \"renderMenuItem\");\n  return y ? x() : ds.createElement(dT, i({\n    title: typeof r == \"string\" ? u(r, {\n      _: r\n    }) : r,\n    placement: \"right\"\n  }, c), x());\n});\nun.propTypes = {\n  className: Qt.string,\n  leftIcon: Qt.element,\n  onClick: Qt.func,\n  primaryText: Qt.node,\n  to: Qt.oneOfType([Qt.string, Qt.object]).isRequired,\n  sidebarIsOpen: Qt.bool\n};\nvar Ei = \"RaMenuItemLink\",\n    us = {\n  active: `${Ei}-active`,\n  icon: `${Ei}-icon`\n},\n    yT = aT(cT, {\n  name: Ei,\n  overridesResolver: (e, t) => t.root\n})(_ref22 => {\n  let {\n    theme: e\n  } = _ref22;\n  return {\n    color: e.palette.text.secondary,\n    [`&.${us.active}`]: {\n      color: e.palette.text.primary\n    },\n    [`& .${us.icon}`]: {\n      minWidth: e.spacing(5)\n    }\n  };\n}),\n    bT = kc((e, t) => ds.createElement(lT, i({\n  ref: t\n}, e)));\nvar Bi = n(e => {\n  let a = e,\n      {\n    locale: t\n  } = a,\n      o = f(a, [\"locale\"]),\n      r = hT(),\n      s = TT();\n  return Ni.createElement(un, i({\n    to: `${s}/`,\n    primaryText: r(\"ra.page.dashboard\"),\n    leftIcon: Ni.createElement(RT, null)\n  }, o));\n}, \"DashboardMenuItem\");\nBi.propTypes = {\n  locale: fs.string,\n  onClick: fs.func,\n  dense: fs.bool,\n  sidebarIsOpen: fs.bool\n};\nl();\nvar Vc = wf(Dc());\nimport * as Mc from \"react\";\nimport { createTheme as ST, ThemeProvider as ET } from \"@mui/material/styles\";\nvar mz = n(_ref23 => {\n  let {\n    width: e = \"md\",\n    children: t\n  } = _ref23;\n  let o = ST(),\n      r = n(s => ({\n    matches: Vc.default.match(s, {\n      width: o.breakpoints.values[e]\n    })\n  }), \"ssrMatchMedia\");\n  return Mc.createElement(ET, {\n    theme: S(i({}, o), {\n      components: {\n        MuiUseMediaQuery: {\n          defaultProps: {\n            ssrMatchMedia: r,\n            matchMedia: r\n          }\n        }\n      }\n    })\n  }, t);\n}, \"DeviceTestWrapper\");\nl();\nimport * as K from \"react\";\nimport { Fragment as $T } from \"react\";\nimport { styled as OT } from \"@mui/material/styles\";\nimport wi from \"prop-types\";\nimport { Button as DT, Accordion as MT, AccordionDetails as VT, AccordionSummary as _T, Typography as Hc } from \"@mui/material\";\nimport HT from \"@mui/icons-material/Report\";\nimport zT from \"@mui/icons-material/ExpandMore\";\nimport WT from \"@mui/icons-material/History\";\nimport { useTranslate as qT } from \"ra-core\";\nl();\nimport * as ki from \"react\";\nimport { createPortal as NT } from \"react-dom\";\nimport tr from \"prop-types\";\nimport { useTranslate as BT, warning as LT } from \"ra-core\";\nvar Ue = n(e => {\n  let d = e,\n      {\n    className: t,\n    defaultTitle: o,\n    title: r\n  } = d,\n      s = f(d, [\"className\", \"defaultTitle\", \"title\"]),\n      a = BT(),\n      p = typeof document != \"undefined\" ? document.getElementById(\"react-admin-title\") : null;\n  if (!p) return null;\n  LT(!o && !r, \"Missing title prop in <Title> element\");\n  let c = r ? typeof r == \"string\" ? ki.createElement(\"span\", i({\n    className: t\n  }, s), a(r, {\n    _: r\n  })) : r : ki.createElement(\"span\", i({\n    className: t\n  }, s), o);\n  return NT(c, p);\n}, \"Title\"),\n    So = tr.oneOfType([tr.string, tr.element]);\nUe.propTypes = {\n  defaultTitle: tr.string,\n  className: tr.string,\n  record: tr.any,\n  title: So\n};\nl();\nimport { useEffect as kT, useRef as wT } from \"react\";\nimport { useLocation as AT } from \"react-router\";\n\nvar _c = n(e => {\n  let {\n    pathname: t\n  } = AT(),\n      o = wT(t);\n  kT(() => {\n    t !== o.current && e();\n  }, [t, e]);\n}, \"useResetErrorBoundaryOnLocationChange\");\n\nvar Ai = n(e => {\n  let m = e,\n      {\n    error: t,\n    errorComponent: o,\n    errorInfo: r,\n    resetErrorBoundary: s,\n    className: a,\n    title: p\n  } = m,\n      c = f(m, [\"error\", \"errorComponent\", \"errorInfo\", \"resetErrorBoundary\", \"className\", \"title\"]),\n      d = qT();\n  return _c(s), o ? K.createElement(o, {\n    error: t,\n    errorInfo: r,\n    title: p\n  }) : K.createElement($T, null, p && K.createElement(Ue, {\n    title: p\n  }), K.createElement(jT, i({\n    className: a\n  }, c), K.createElement(\"h1\", {\n    className: Me.title,\n    role: \"alert\"\n  }, K.createElement(HT, {\n    className: Me.icon\n  }), d(\"ra.page.error\")), K.createElement(\"div\", null, d(\"ra.message.error\")), process.env.NODE_ENV !== \"production\" && K.createElement(K.Fragment, null, K.createElement(MT, {\n    className: Me.panel\n  }, K.createElement(_T, {\n    expandIcon: K.createElement(zT, null),\n    className: Me.panelSumary\n  }, d(t.message, {\n    _: t.message\n  })), K.createElement(VT, {\n    className: Me.panelDetails\n  }, K.createElement(\"p\", null, d(t.message, {\n    _: t.message\n  })), K.createElement(\"p\", null, r == null ? void 0 : r.componentStack))), K.createElement(\"div\", {\n    className: Me.advice\n  }, K.createElement(Hc, {\n    align: \"center\"\n  }, \"Need help with this error? Try the following:\"), K.createElement(Hc, {\n    component: \"div\"\n  }, K.createElement(\"ul\", null, K.createElement(\"li\", null, \"Check the\", \" \", K.createElement(\"a\", {\n    href: \"https://marmelab.com/react-admin/Readme.html\"\n  }, \"react-admin documentation\")), K.createElement(\"li\", null, \"Search on\", \" \", K.createElement(\"a\", {\n    href: \"https://stackoverflow.com/questions/tagged/react-admin\"\n  }, \"StackOverflow\"), \" \", \"for community answers\"), K.createElement(\"li\", null, \"Get help from the core team via\", \" \", K.createElement(\"a\", {\n    href: \"https://marmelab.com/ra-enterprise/#fromsww\"\n  }, \"react-admin Enterprise Edition\")))))), K.createElement(\"div\", {\n    className: Me.toolbar\n  }, K.createElement(DT, {\n    variant: \"contained\",\n    startIcon: K.createElement(WT, null),\n    onClick: UT\n  }, d(\"ra.action.back\")))));\n}, \"Error\");\nAi.propTypes = {\n  className: wi.string,\n  error: wi.object.isRequired,\n  errorInfo: wi.object,\n  title: So\n};\nvar Dt = \"RaError\",\n    Me = {\n  container: `${Dt}-container`,\n  title: `${Dt}-title`,\n  icon: `${Dt}-icon`,\n  panel: `${Dt}-panel`,\n  panelSumary: `${Dt}-panelSumary`,\n  panelDetails: `${Dt}-panelDetails`,\n  toolbar: `${Dt}-toolbar`,\n  advice: `${Dt}-advice`\n},\n    jT = OT(\"div\", {\n  name: Dt,\n  overridesResolver: (e, t) => t.root\n})(_ref24 => {\n  let {\n    theme: e\n  } = _ref24;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    [e.breakpoints.down(\"md\")]: {\n      padding: \"1em\"\n    },\n    fontFamily: \"Roboto, sans-serif\",\n    opacity: .5,\n    [`& .${Me.title}`]: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    [`& .${Me.icon}`]: {\n      width: \"2em\",\n      height: \"2em\",\n      marginRight: \"0.5em\"\n    },\n    [`& .${Me.panel}`]: {\n      marginTop: \"1em\",\n      maxWidth: \"60em\"\n    },\n    [`& .${Me.panelSumary}`]: {\n      userSelect: \"all\"\n    },\n    [`& .${Me.panelDetails}`]: {\n      whiteSpace: \"pre-wrap\"\n    },\n    [`& .${Me.toolbar}`]: {\n      marginTop: \"2em\"\n    },\n    [`& .${Me.advice}`]: {\n      marginTop: \"2em\"\n    }\n  };\n});\n\nfunction UT() {\n  window.history.go(-1);\n}\n\nn(UT, \"goBack\");\nl();\nimport ht, { useState as sP } from \"react\";\nimport { ErrorBoundary as aP } from \"react-error-boundary\";\nimport iP from \"clsx\";\nimport { styled as lP } from \"@mui/material/styles\";\nl();\nimport * as or from \"react\";\nimport { styled as XT } from \"@mui/material/styles\";\nimport QT from \"prop-types\";\nimport { Drawer as GT, useMediaQuery as zc } from \"@mui/material\";\nimport Wc from \"lodash/get\";\nimport { useLocale as JT } from \"ra-core\";\nvar $i = n(e => {\n  let u = e,\n      {\n    children: t,\n    closedSize: o,\n    size: r\n  } = u,\n      s = f(u, [\"children\", \"closedSize\", \"size\"]),\n      a = zc(g => g.breakpoints.down(\"sm\")),\n      p = zc(g => g.breakpoints.down(\"md\")),\n      [c, d] = bt();\n  JT();\n  let m = n(() => d(!c), \"toggleSidebar\");\n  return a ? or.createElement(Oi, i({\n    variant: \"temporary\",\n    open: c,\n    onClose: m,\n    classes: Ie\n  }, s), t) : p ? or.createElement(Oi, i({\n    variant: \"permanent\",\n    open: c,\n    onClose: m,\n    classes: Ie\n  }, s), or.createElement(\"div\", {\n    className: Ie.fixed\n  }, t)) : or.createElement(Oi, i({\n    variant: \"permanent\",\n    open: c,\n    onClose: m,\n    classes: Ie\n  }, s), or.createElement(\"div\", {\n    className: Ie.fixed\n  }, t));\n}, \"Sidebar\");\n$i.propTypes = {\n  children: QT.node.isRequired\n};\nvar Xe = \"RaSidebar\",\n    Ie = {\n  docked: `${Xe}-docked`,\n  paper: `${Xe}-paper`,\n  paperAnchorLeft: `${Xe}-paperAnchorLeft`,\n  paperAnchorRight: `${Xe}-paperAnchorRight`,\n  paperAnchorTop: `${Xe}-paperAnchorTop`,\n  paperAnchorBottom: `${Xe}-paperAnchorBottom`,\n  paperAnchorDockedLeft: `${Xe}-paperAnchorDockedLeft`,\n  paperAnchorDockedTop: `${Xe}-paperAnchorDockedTop`,\n  paperAnchorDockedRight: `${Xe}-paperAnchorDockedRight`,\n  paperAnchorDockedBottom: `${Xe}-paperAnchorDockedBottom`,\n  modal: `${Xe}-modal`,\n  fixed: `${Xe}-fixed`\n},\n    Oi = XT(GT, {\n  name: Xe,\n  slot: \"Root\",\n  overridesResolver: (e, t) => t.root\n})(_ref25 => {\n  let {\n    open: e,\n    theme: t\n  } = _ref25;\n  return {\n    height: \"calc(100vh - 3em)\",\n    [`& .${Ie.docked}`]: {},\n    [`& .${Ie.paper}`]: {},\n    [`& .${Ie.paperAnchorLeft}`]: {},\n    [`& .${Ie.paperAnchorRight}`]: {},\n    [`& .${Ie.paperAnchorTop}`]: {},\n    [`& .${Ie.paperAnchorBottom}`]: {},\n    [`& .${Ie.paperAnchorDockedLeft}`]: {},\n    [`& .${Ie.paperAnchorDockedTop}`]: {},\n    [`& .${Ie.paperAnchorDockedRight}`]: {},\n    [`& .${Ie.paperAnchorDockedBottom}`]: {},\n    [`& .${Ie.modal}`]: {},\n    [`& .${Ie.fixed}`]: {\n      position: \"fixed\",\n      height: \"calc(100vh - 3em)\",\n      overflowX: \"hidden\",\n      scrollbarWidth: \"none\",\n      msOverflowStyle: \"none\",\n      \"&::-webkit-scrollbar\": {\n        display: \"none\"\n      }\n    },\n    [\"& .MuiPaper-root\"]: {\n      position: \"relative\",\n      width: e ? Wc(t, \"sidebar.width\", Di) : Wc(t, \"sidebar.closedWidth\", Mi),\n      transition: t.transitions.create(\"width\", {\n        easing: t.transitions.easing.sharp,\n        duration: t.transitions.duration.leavingScreen\n      }),\n      backgroundColor: \"transparent\",\n      borderRight: \"none\",\n      [t.breakpoints.only(\"xs\")]: {\n        marginTop: 0,\n        height: \"100vh\",\n        position: \"inherit\",\n        backgroundColor: t.palette.background.default\n      },\n      [t.breakpoints.up(\"md\")]: {\n        border: \"none\"\n      },\n      zIndex: \"inherit\"\n    }\n  };\n}),\n    Di = 240,\n    Mi = 55;\nl();\nimport * as Gt from \"react\";\nimport { createElement as KT } from \"react\";\nimport { styled as YT } from \"@mui/material/styles\";\nimport Vi from \"prop-types\";\nimport qc from \"lodash/get\";\nimport ZT from \"@mui/icons-material/ViewList\";\nimport eP from \"clsx\";\nimport { useResourceDefinitions as tP, useGetResourceLabel as oP, useCreatePath as rP } from \"ra-core\";\n\nvar _i = n(e => {\n  let t = tP(),\n      o = oP(),\n      r = rP(),\n      u = e,\n      {\n    hasDashboard: s,\n    dense: a,\n    children: p = Gt.createElement(Gt.Fragment, null, s && Gt.createElement(Bi, {\n      dense: a\n    }), Object.keys(t).filter(g => t[g].hasList).map(g => Gt.createElement(un, {\n      key: g,\n      to: r({\n        resource: g,\n        type: \"list\"\n      }),\n      state: {\n        _scrollToTop: !0\n      },\n      primaryText: o(g, 2),\n      leftIcon: t[g].icon ? KT(t[g].icon) : Gt.createElement(ZT, null),\n      dense: a\n    }))),\n    className: c\n  } = u,\n      d = f(u, [\"hasDashboard\", \"dense\", \"children\", \"className\"]),\n      [m] = bt();\n  return Gt.createElement(nP, i({\n    className: eP({\n      [gs.open]: m,\n      [gs.closed]: !m\n    }, c)\n  }, d), p);\n}, \"Menu\");\n\n_i.propTypes = {\n  className: Vi.string,\n  dense: Vi.bool,\n  hasDashboard: Vi.bool\n};\nvar Hi = \"RaMenu\",\n    gs = {\n  open: `${Hi}-open`,\n  closed: `${Hi}-closed`\n},\n    nP = YT(\"div\", {\n  name: Hi,\n  overridesResolver: (e, t) => t.root\n})(_ref26 => {\n  let {\n    theme: e\n  } = _ref26;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    marginTop: \"0.5em\",\n    marginBottom: \"1em\",\n    [e.breakpoints.only(\"xs\")]: {\n      marginTop: 0\n    },\n    transition: e.transitions.create(\"width\", {\n      easing: e.transitions.easing.sharp,\n      duration: e.transitions.duration.leavingScreen\n    }),\n    [`&.${gs.open}`]: {\n      width: qc(e, \"sidebar.width\", Di)\n    },\n    [`&.${gs.closed}`]: {\n      width: qc(e, \"sidebar.closedWidth\", Mi)\n    }\n  };\n});\nvar jc = n(e => {\n  let P = e,\n      {\n    appBar: t = Fi,\n    children: o,\n    className: r,\n    dashboard: s,\n    error: a,\n    menu: p = _i,\n    sidebar: c = $i,\n    title: d\n  } = P,\n      m = f(P, [\"appBar\", \"children\", \"className\", \"dashboard\", \"error\", \"menu\", \"sidebar\", \"title\"]),\n      [u] = bt(),\n      [g, y] = sP(null),\n      b = n((T, C) => {\n    y(C);\n  }, \"handleError\");\n  return ht.createElement(pP, i({\n    className: iP(\"layout\", r)\n  }, m), ht.createElement(Pc, null), ht.createElement(\"div\", {\n    className: rr.appFrame\n  }, ht.createElement(t, {\n    open: u,\n    title: d\n  }), ht.createElement(\"main\", {\n    className: rr.contentWithSidebar\n  }, ht.createElement(c, null, ht.createElement(p, {\n    hasDashboard: !!s\n  })), ht.createElement(\"div\", {\n    id: \"main-content\",\n    className: rr.content\n  }, ht.createElement(aP, {\n    onError: b,\n    fallbackRender: _ref27 => {\n      let {\n        error: T,\n        resetErrorBoundary: C\n      } = _ref27;\n      return ht.createElement(Ai, {\n        error: T,\n        errorComponent: a,\n        errorInfo: g,\n        resetErrorBoundary: C,\n        title: d\n      });\n    }\n  }, o)))));\n}, \"Layout\"),\n    ys = \"RaLayout\",\n    rr = {\n  appFrame: `${ys}-appFrame`,\n  contentWithSidebar: `${ys}-contentWithSidebar`,\n  content: `${ys}-content`\n},\n    pP = lP(\"div\", {\n  name: ys,\n  overridesResolver: (e, t) => t.root\n})(_ref28 => {\n  let {\n    theme: e\n  } = _ref28;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    zIndex: 1,\n    minHeight: \"100vh\",\n    backgroundColor: e.palette.background.default,\n    position: \"relative\",\n    minWidth: \"fit-content\",\n    width: \"100%\",\n    color: e.palette.getContrastText(e.palette.background.default),\n    [`& .${rr.appFrame}`]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexGrow: 1,\n      [e.breakpoints.up(\"xs\")]: {\n        marginTop: e.spacing(6)\n      },\n      [e.breakpoints.down(\"sm\")]: {\n        marginTop: e.spacing(7)\n      }\n    },\n    [`& .${rr.contentWithSidebar}`]: {\n      display: \"flex\",\n      flexGrow: 1\n    },\n    [`& .${rr.content}`]: {\n      backgroundColor: e.palette.background.default,\n      zIndex: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      flexGrow: 1,\n      flexBasis: 0,\n      [e.breakpoints.up(\"xs\")]: {\n        paddingRight: e.spacing(2),\n        paddingLeft: e.spacing(1)\n      },\n      [e.breakpoints.down(\"md\")]: {\n        padding: 0\n      }\n    }\n  };\n});\nl();\nimport * as Uc from \"react\";\nimport { styled as cP } from \"@mui/material/styles\";\nimport mP from \"@mui/material/LinearProgress\";\nimport Xc from \"prop-types\";\nimport { useTimeout as dP } from \"ra-core\";\nvar ke = n(o => {\n  var r = o,\n      {\n    timeout: e = 1e3\n  } = r,\n      t = f(r, [\"timeout\"]);\n  let c = t,\n      {\n    className: s\n  } = c,\n      a = f(c, [\"className\"]);\n  return dP(e) ? Uc.createElement(fP, i({\n    className: s\n  }, a)) : null;\n}, \"LinearProgress\");\nke.propTypes = {\n  className: Xc.string,\n  timeout: Xc.number\n};\nke.displayName = \"LinearProgress\";\nvar uP = \"RaLinearProgress\",\n    fP = cP(mP, {\n  name: uP,\n  overridesResolver: (e, t) => t.root\n})(_ref29 => {\n  let {\n    theme: e\n  } = _ref29;\n  return {\n    margin: `${e.spacing(1)} 0`,\n    width: e.spacing(20)\n  };\n});\nl();\nimport * as nr from \"react\";\nimport { styled as gP } from \"@mui/material/styles\";\nimport zi from \"prop-types\";\nimport yP from \"@mui/material/CircularProgress\";\nimport { useTranslate as bP } from \"ra-core\";\nvar bs = n(e => {\n  let {\n    className: t,\n    loadingPrimary: o = \"ra.page.loading\",\n    loadingSecondary: r = \"ra.message.loading\"\n  } = e,\n      s = bP();\n  return nr.createElement(RP, {\n    className: t\n  }, nr.createElement(\"div\", {\n    className: hs.message\n  }, nr.createElement(yP, {\n    className: hs.icon,\n    color: \"primary\"\n  }), nr.createElement(\"h1\", null, s(o)), nr.createElement(\"div\", null, s(r), \".\")));\n}, \"Loading\");\nbs.propTypes = {\n  className: zi.string,\n  loadingPrimary: zi.string,\n  loadingSecondary: zi.string\n};\nbs.defaultProps = {\n  loadingPrimary: \"ra.page.loading\",\n  loadingSecondary: \"ra.message.loading\"\n};\nvar Rs = \"RaLoading\",\n    hs = {\n  root: `${Rs}-root`,\n  icon: `${Rs}-icon`,\n  message: `${Rs}-message`\n},\n    RP = gP(\"div\", {\n  name: Rs,\n  overridesResolver: (e, t) => t.root\n})(_ref30 => {\n  let {\n    theme: e\n  } = _ref30;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [e.breakpoints.up(\"md\")]: {\n      height: \"100%\"\n    },\n    [e.breakpoints.down(\"xl\")]: {\n      height: \"100vh\",\n      marginTop: \"-3em\"\n    },\n    [`& .${hs.icon}`]: {\n      width: \"9em\",\n      height: \"9em\"\n    },\n    [`& .${hs.message}`]: {\n      textAlign: \"center\",\n      fontFamily: \"Roboto, sans-serif\",\n      opacity: .5,\n      margin: \"0 1em\"\n    }\n  };\n});\nl();\nimport * as Qc from \"react\";\nimport Ts from \"prop-types\";\nvar Wi = n(r => {\n  var s = r,\n      {\n    loadingPrimary: e = \"ra.page.loading\",\n    loadingSecondary: t = \"ra.message.loading\"\n  } = s,\n      o = f(s, [\"loadingPrimary\", \"loadingSecondary\"]);\n  return Qc.createElement(bs, i({\n    loadingPrimary: e,\n    loadingSecondary: t\n  }, o));\n}, \"LoadingPage\");\nWi.propTypes = {\n  theme: Ts.object,\n  className: Ts.string,\n  loadingPrimary: Ts.string,\n  loadingSecondary: Ts.string\n};\nl();\nimport * as Tt from \"react\";\nimport { styled as hP } from \"@mui/material/styles\";\nimport qi from \"prop-types\";\nimport TP from \"@mui/material/Button\";\nimport PP from \"@mui/icons-material/HotTub\";\nimport xP from \"@mui/icons-material/History\";\nimport { useAuthenticated as CP, useTranslate as vP } from \"ra-core\";\nvar ji = n(e => {\n  let a = e,\n      {\n    className: t,\n    title: o\n  } = a,\n      r = f(a, [\"className\", \"title\"]),\n      s = vP();\n  return CP(), Tt.createElement(FP, i({\n    className: t\n  }, IP(r)), Tt.createElement(Ue, {\n    defaultTitle: o\n  }), Tt.createElement(\"div\", {\n    className: sr.message\n  }, Tt.createElement(PP, {\n    className: sr.icon\n  }), Tt.createElement(\"h1\", null, s(\"ra.page.not_found\")), Tt.createElement(\"div\", null, s(\"ra.message.not_found\"), \".\")), Tt.createElement(\"div\", {\n    className: sr.toolbar\n  }, Tt.createElement(TP, {\n    variant: \"contained\",\n    startIcon: Tt.createElement(xP, null),\n    onClick: SP\n  }, s(\"ra.action.back\"))));\n}, \"NotFound\"),\n    IP = n(a => {\n  var p = a,\n      {\n    staticContext: e,\n    history: t,\n    location: o,\n    match: r\n  } = p,\n      s = f(p, [\"staticContext\", \"history\", \"location\", \"match\"]);\n  return s;\n}, \"sanitizeRestProps\");\nji.propTypes = {\n  className: qi.string,\n  title: qi.string,\n  location: qi.object\n};\nvar Ps = \"RaNotFound\",\n    sr = {\n  icon: `${Ps}-icon`,\n  message: `${Ps}-message`,\n  toolbar: `${Ps}-toolbar`\n},\n    FP = hP(\"div\", {\n  name: Ps,\n  overridesResolver: (e, t) => t.root\n})(_ref31 => {\n  let {\n    theme: e\n  } = _ref31;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    [e.breakpoints.up(\"md\")]: {\n      height: \"100%\"\n    },\n    [e.breakpoints.down(\"md\")]: {\n      height: \"100vh\",\n      marginTop: \"-3em\"\n    },\n    [`& .${sr.icon}`]: {\n      width: \"9em\",\n      height: \"9em\"\n    },\n    [`& .${sr.message}`]: {\n      textAlign: \"center\",\n      fontFamily: \"Roboto, sans-serif\",\n      opacity: .5,\n      margin: \"0 1em\"\n    },\n    [`& .${sr.toolbar}`]: {\n      textAlign: \"center\",\n      marginTop: \"2em\"\n    }\n  };\n});\n\nfunction SP() {\n  window.history.go(-1);\n}\n\nn(SP, \"goBack\");\nl();\nimport * as Jt from \"react\";\nimport { styled as EP } from \"@mui/material/styles\";\nimport { useState as NP, useEffect as BP, useCallback as Ui } from \"react\";\nimport Xi from \"prop-types\";\nimport { Button as LP, Snackbar as kP } from \"@mui/material\";\nimport wP from \"clsx\";\nimport { useNotificationContext as AP, undoableEventEmitter as Gc, useTranslate as $P } from \"ra-core\";\nvar OP = {\n  vertical: \"bottom\",\n  horizontal: \"center\"\n},\n    Qi = n(e => {\n  let x = e,\n      {\n    className: t,\n    type: o = \"info\",\n    autoHideDuration: r = 4e3,\n    multiLine: s = !1,\n    anchorOrigin: a = OP\n  } = x,\n      p = f(x, [\"className\", \"type\", \"autoHideDuration\", \"multiLine\", \"anchorOrigin\"]),\n      {\n    notifications: c,\n    takeNotification: d\n  } = AP(),\n      [m, u] = NP(!1),\n      [g, y] = Jt.useState(void 0),\n      b = $P();\n  BP(() => {\n    c.length && !g ? (y(d()), u(!0)) : c.length && g && m && u(!1);\n  }, [c, g, m, d]);\n  let P = Ui(() => {\n    u(!1);\n  }, [u]),\n      T = Ui(() => {\n    g && g.notificationOptions.undoable && Gc.emit(\"end\", {\n      isUndo: !1\n    }), y(void 0);\n  }, [g]),\n      C = Ui(() => {\n    Gc.emit(\"end\", {\n      isUndo: !0\n    }), u(!1);\n  }, []);\n  return g ? Jt.createElement(DP, i({\n    className: t,\n    open: m,\n    message: g.message && b(g.message, g.notificationOptions.messageArgs),\n    autoHideDuration: g.notificationOptions.autoHideDuration || r,\n    disableWindowBlurListener: g.notificationOptions.undoable,\n    TransitionProps: {\n      onExited: T\n    },\n    onClose: P,\n    ContentProps: {\n      className: wP(Kt[g.type || o], {\n        [Kt.multiLine]: g.multiLine || s\n      })\n    },\n    action: g.notificationOptions.undoable ? Jt.createElement(LP, {\n      color: \"primary\",\n      className: Kt.undo,\n      size: \"small\",\n      onClick: C\n    }, Jt.createElement(Jt.Fragment, null, b(\"ra.action.undo\"))) : null,\n    anchorOrigin: a\n  }, p)) : null;\n}, \"Notification\");\nQi.propTypes = {\n  type: Xi.string,\n  autoHideDuration: Xi.number,\n  multiLine: Xi.bool\n};\nvar ar = \"RaNotification\",\n    Kt = {\n  success: `${ar}-success`,\n  error: `${ar}-error`,\n  warning: `${ar}-warning`,\n  undo: `${ar}-undo`,\n  multiLine: `${ar}-multiLine`\n},\n    DP = EP(kP, {\n  name: ar,\n  overridesResolver: (e, t) => t.root\n})(_ref32 => {\n  let {\n    theme: e,\n    type: t\n  } = _ref32;\n  return {\n    [`& .${Kt.success}`]: {\n      backgroundColor: e.palette.success.main,\n      color: e.palette.success.contrastText\n    },\n    [`& .${Kt.error}`]: {\n      backgroundColor: e.palette.error.dark,\n      color: e.palette.error.contrastText\n    },\n    [`& .${Kt.warning}`]: {\n      backgroundColor: e.palette.error.light,\n      color: e.palette.error.contrastText\n    },\n    [`& .${Kt.undo}`]: {\n      color: t === \"success\" ? e.palette.success.contrastText : e.palette.primary.light\n    },\n    [`& .${Kt.multiLine}`]: {\n      whiteSpace: \"pre-wrap\"\n    }\n  };\n});\nl();\nimport { useStore as MP } from \"ra-core\";\nvar ss = n(e => MP(\"theme\", e), \"useTheme\");\nl();\nimport * as Jc from \"react\";\nimport { useMemo as VP } from \"react\";\nimport { ThemeProvider as _P, createTheme as Kc } from \"@mui/material/styles\";\nvar Yc = n(_ref33 => {\n  let {\n    children: e,\n    theme: t\n  } = _ref33;\n  let [o] = ss(t),\n      r = VP(() => {\n    try {\n      return Kc(o);\n    } catch (s) {\n      return console.warn(\"Failed to reuse custom theme from store\", s), Kc();\n    }\n  }, [o]);\n  return Jc.createElement(_P, {\n    theme: r\n  }, e);\n}, \"ThemeProvider\");\nl();\nimport * as Zc from \"react\";\nimport { styled as HP } from \"@mui/material/styles\";\nimport em from \"prop-types\";\nimport zP from \"@mui/material/Toolbar\";\nvar tm = n(e => Zc.createElement(qP, i({}, e)), \"TopToolbar\");\ntm.propTypes = {\n  children: em.node,\n  className: em.string\n};\nvar Pt = tm,\n    WP = \"RaTopToolbar\",\n    qP = HP(zP, {\n  name: WP,\n  overridesResolver: (e, t) => t.root\n})(_ref34 => {\n  let {\n    theme: e\n  } = _ref34;\n  return {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n    paddingBottom: e.spacing(1),\n    gap: e.spacing(1),\n    [e.breakpoints.up(\"sm\")]: {\n      minHeight: e.spacing(6)\n    },\n    [e.breakpoints.up(\"xs\")]: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    [e.breakpoints.down(\"md\")]: {\n      paddingRight: e.spacing(2)\n    },\n    [e.breakpoints.down(\"sm\")]: {\n      padding: e.spacing(1),\n      backgroundColor: e.palette.background.paper\n    }\n  };\n});\nl();\nimport { useContext as jP } from \"react\";\nvar fq = n(() => jP(ls), \"useUserMenu\");\nl();\nimport * as ir from \"react\";\nimport { isValidElement as UP } from \"react\";\nimport { useTranslate as XP, ValidationError as QP } from \"ra-core\";\nvar Z = n(e => {\n  let {\n    helperText: t,\n    touched: o,\n    error: r\n  } = e,\n      s = XP();\n  return o && r ? ir.createElement(QP, {\n    error: r\n  }) : UP(t) ? t : typeof t == \"string\" ? ir.createElement(ir.Fragment, null, s(t, {\n    _: t\n  })) : t !== !1 ? ir.createElement(\"span\", {\n    dangerouslySetInnerHTML: GP\n  }) : null;\n}, \"InputHelperText\"),\n    GP = {\n  __html: \"&#8203;\"\n};\nl();\nvar oe = n(Bt => {\n  var it = Bt,\n      {\n    afterSubmit: e,\n    allowNull: t,\n    alwaysOn: o,\n    beforeSubmit: r,\n    component: s,\n    data: a,\n    defaultValue: p,\n    error: c,\n    format: d,\n    formatOnBlur: m,\n    formClassName: u,\n    initialValue: g,\n    initializeForm: y,\n    input: b,\n    isEqual: P,\n    isRequired: T,\n    label: C,\n    limitChoicesToValue: x,\n    locale: I,\n    meta: v,\n    multiple: N,\n    name: F,\n    options: E,\n    optionText: B,\n    optionValue: k,\n    parse: L,\n    record: _,\n    ref: H,\n    refetch: $,\n    render: W,\n    resource: O,\n    setFilter: D,\n    setPagination: X,\n    setSort: w,\n    source: M,\n    submitError: re,\n    subscription: te,\n    textAlign: de,\n    translate: ne,\n    translateChoice: ie,\n    validate: G,\n    validateFields: le,\n    value: He\n  } = it,\n      pe = f(it, [\"afterSubmit\", \"allowNull\", \"alwaysOn\", \"beforeSubmit\", \"component\", \"data\", \"defaultValue\", \"error\", \"format\", \"formatOnBlur\", \"formClassName\", \"initialValue\", \"initializeForm\", \"input\", \"isEqual\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"locale\", \"meta\", \"multiple\", \"name\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"record\", \"ref\", \"refetch\", \"render\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"submitError\", \"subscription\", \"textAlign\", \"translate\", \"translateChoice\", \"validate\", \"validateFields\", \"value\"]);\n  return pe;\n}, \"sanitizeInputRestProps\");\nl();\nimport * as fn from \"react\";\nimport { Stack as JP, Typography as KP } from \"@mui/material\";\nimport { styled as YP } from \"@mui/material/styles\";\nimport ZP from \"clsx\";\nimport { FieldTitle as ex } from \"ra-core\";\nvar ye = n(u => {\n  var g = u,\n      {\n    children: e,\n    className: t = \"\",\n    color: o = \"textSecondary\",\n    component: r = \"span\",\n    fullWidth: s,\n    isRequired: a,\n    label: p,\n    resource: c,\n    source: d\n  } = g,\n      m = f(g, [\"children\", \"className\", \"color\", \"component\", \"fullWidth\", \"isRequired\", \"label\", \"resource\", \"source\"]);\n  var y, b;\n  return p !== !1 && e.props.label !== !1 && typeof e.type != \"string\" && ((y = e.type) == null ? void 0 : y.displayName) !== \"Labeled\" && ((b = e.type) == null ? void 0 : b.displayName) !== \"Labeled\" ? fn.createElement(tx, i({\n    component: r,\n    className: ZP(t, {\n      [xs.fullWidth]: s\n    })\n  }, m), fn.createElement(KP, {\n    color: o,\n    className: xs.label\n  }, fn.createElement(ex, {\n    label: p || e.props.label,\n    source: d || e.props.source,\n    resource: c,\n    isRequired: a\n  })), e) : fn.createElement(\"div\", {\n    className: t\n  }, e);\n}, \"Labeled\");\nye.displayName = \"Labeled\";\nvar Gi = \"RaLabeled\",\n    xs = {\n  label: `${Gi}-label`,\n  fullWidth: `${Gi}-fullWidth`\n},\n    tx = YP(JP, {\n  name: Gi,\n  overridesResolver: (e, t) => t.root\n})(_ref35 => {\n  let {\n    theme: e\n  } = _ref35;\n  return {\n    display: \"inline-flex\",\n    marginBottom: \"0.2em\",\n    [`&.${xs.fullWidth}`]: {\n      width: \"100%\"\n    },\n    [`& .${xs.label}`]: {\n      fontSize: \"0.75em\",\n      marginBottom: \"0.2em\"\n    }\n  };\n});\nl();\nimport { createContext as ox } from \"react\";\nvar Cs = ox(void 0);\nvar Ji = n(e => {\n  let X = e,\n      {\n    className: t,\n    defaultValue: o,\n    label: r,\n    isFetching: s,\n    isLoading: a,\n    children: p,\n    helperText: c,\n    record: d,\n    source: m,\n    validate: u,\n    variant: g,\n    disabled: y,\n    margin: b = \"dense\"\n  } = X,\n      P = f(X, [\"className\", \"defaultValue\", \"label\", \"isFetching\", \"isLoading\", \"children\", \"helperText\", \"record\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]),\n      T = Array.isArray(u) ? px(u) : u,\n      C = mx(),\n      x = dx(e),\n      I = ux({\n    name: m\n  }),\n      {\n    getFieldState: v,\n    clearErrors: N,\n    formState: F,\n    getValues: E,\n    register: B,\n    setError: k,\n    unregister: L\n  } = fx(),\n      {\n    isSubmitted: _\n  } = F;\n  om(() => (B(m), () => {\n    L(m, {\n      keepValue: !0\n    });\n  }), [B, L, m]), cx(e);\n  let H = gx({\n    name: m\n  }),\n      {\n    isDirty: $,\n    invalid: W,\n    error: O\n  } = v(m, F),\n      D = sx(null);\n  return om(() => {\n    T && n(async () => {\n      let M = await T(H, E(), e);\n      M && !hx(D.current, M) && (D.current = M, k(m, {\n        type: \"manual\",\n        message: C(M)\n      })), !M && O && (D.current = null, N(m));\n    }, \"applyValidation\")();\n  }, [N, O, T, H, E, e, k, m, C]), a ? Mt.createElement(ye, {\n    label: r,\n    className: t\n  }, Mt.createElement(ke, null)) : Mt.createElement(bx, i({\n    fullWidth: !0,\n    margin: \"normal\",\n    className: ax(\"ra-input\", `ra-input-${m}`, t),\n    error: ($ || _) && W\n  }, oe(P)), Mt.createElement(yx, {\n    htmlFor: m,\n    shrink: !0,\n    error: ($ || _) && W\n  }, Mt.createElement(lx, {\n    label: r,\n    source: m,\n    resource: x,\n    isRequired: ix(u)\n  })), Mt.createElement(Cs.Provider, {\n    value: I\n  }, rx(nx.only(p), S(i({}, I), {\n    record: d,\n    resource: x,\n    source: m,\n    variant: g,\n    margin: b,\n    disabled: y\n  }))), !!(($ || _) && W) || c ? Mt.createElement(Rx, {\n    error: ($ || _) && W\n  }, Mt.createElement(Z, {\n    touched: $ || _,\n    error: O == null ? void 0 : O.message,\n    helperText: c\n  })) : null);\n}, \"ArrayInput\");\nJi.defaultProps = {\n  options: {},\n  fullWidth: !0\n};\nvar qq = n(e => {\n  if (!Array.isArray(e)) return e;\n}, \"getArrayInputError\");\nl();\nimport * as Vt from \"react\";\nimport { cloneElement as Ax, useCallback as el, useMemo as $x } from \"react\";\nimport { styled as Ox } from \"@mui/material\";\nimport Dx from \"clsx\";\nimport Mx from \"lodash/get\";\nimport Pe from \"prop-types\";\nl();\nimport { useContext as Tx, useMemo as Px } from \"react\";\nvar rm = n(e => {\n  let t = Tx(Cs),\n      o = Px(() => ({\n    append: e == null ? void 0 : e.append,\n    fields: e == null ? void 0 : e.fields,\n    insert: e == null ? void 0 : e.insert,\n    move: e == null ? void 0 : e.move,\n    prepend: e == null ? void 0 : e.prepend,\n    remove: e == null ? void 0 : e.remove,\n    replace: e == null ? void 0 : e.replace,\n    swap: e == null ? void 0 : e.swap,\n    update: e == null ? void 0 : e.update\n  }), [e]);\n  return (e == null ? void 0 : e.fields) ? o : t;\n}, \"useArrayInput\");\nl();\nvar lr = \"RaSimpleFormIterator\",\n    Ae = {\n  line: `${lr}-line`,\n  index: `${lr}-index`,\n  indexContainer: `${lr}-indexContainer`,\n  form: `${lr}-form`,\n  action: `${lr}-action`,\n  leftIcon: `${lr}-leftIcon`\n};\nl();\nimport { createContext as xx } from \"react\";\nvar vs = xx(void 0);\nl();\nimport * as xt from \"react\";\nimport { Children as Ix, cloneElement as Ki, isValidElement as Fx, useMemo as Sx } from \"react\";\nimport { Typography as Ex } from \"@mui/material\";\nimport nm from \"clsx\";\nl();\nimport { useContext as Cx } from \"react\";\nvar Is = n(() => Cx(vs), \"useSimpleFormIterator\");\nl();\nimport { createContext as vx } from \"react\";\nvar Fs = vx(void 0);\nvar sm = xt.forwardRef((e, t) => {\n  let {\n    children: o,\n    disabled: r,\n    disableReordering: s,\n    disableRemove: a,\n    getItemLabel: p,\n    index: c,\n    member: d,\n    record: m,\n    removeButton: u,\n    reOrderButtons: g,\n    resource: y,\n    source: b\n  } = e,\n      {\n    total: P,\n    reOrder: T,\n    remove: C\n  } = Is(),\n      x = n(N => typeof a == \"boolean\" ? a : a && a(N), \"disableRemoveField\"),\n      I = n((N, F) => E => {\n    C(F), N && N(E);\n  }, \"handleRemoveButtonClick\"),\n      v = Sx(() => ({\n    index: c,\n    total: P,\n    reOrder: N => T(c, N),\n    remove: () => C(c)\n  }), [c, P, T, C]);\n  return xt.createElement(Fs.Provider, {\n    value: v\n  }, xt.createElement(\"li\", {\n    className: Ae.line,\n    ref: t\n  }, xt.createElement(\"div\", null, xt.createElement(\"div\", {\n    className: Ae.indexContainer\n  }, xt.createElement(Ex, {\n    variant: \"body1\",\n    className: Ae.index\n  }, p(c)), !r && !s && Ki(g, {\n    index: c,\n    max: P,\n    reOrder: T,\n    className: nm(\"button-reorder\", `button-reorder-${b}-${c}`)\n  }))), xt.createElement(\"section\", {\n    className: Ae.form\n  }, Ix.map(o, (N, F) => {\n    if (!Fx(N)) return null;\n    let k = N.props,\n        {\n      source: E\n    } = k,\n        B = f(k, [\"source\"]);\n    return Ki(N, i({\n      source: E ? `${d}.${E}` : d,\n      index: E ? void 0 : F,\n      label: typeof N.props.label == \"undefined\" ? E ? `resources.${y}.fields.${E}` : void 0 : N.props.label,\n      disabled: r\n    }, B));\n  })), !r && !x(m) && xt.createElement(\"span\", {\n    className: Ae.action\n  }, Ki(u, {\n    onClick: I(u.props.onClick, c),\n    className: nm(\"button-remove\", `button-remove-${b}-${c}`)\n  }))));\n});\nl();\nimport * as Yi from \"react\";\nimport Nx from \"@mui/icons-material/AddCircleOutline\";\nvar am = n(e => {\n  let {\n    add: t\n  } = Is();\n  return Yi.createElement(j, i({\n    label: \"ra.action.add\",\n    onClick: () => t()\n  }, e), Yi.createElement(Nx, null));\n}, \"AddItemButton\");\nl();\nimport * as Zi from \"react\";\nimport Lx from \"@mui/icons-material/RemoveCircleOutline\";\nl();\nimport { useContext as Bx } from \"react\";\nvar Ss = n(() => Bx(Fs), \"useSimpleFormIteratorItem\");\nvar im = n(e => {\n  let {\n    remove: t\n  } = Ss();\n  return Zi.createElement(j, i({\n    label: \"ra.action.remove\",\n    onClick: () => t()\n  }, e), Zi.createElement(Lx, null));\n}, \"RemoveItemButton\");\nl();\nimport * as pr from \"react\";\nimport kx from \"@mui/icons-material/ArrowUpward\";\nimport wx from \"@mui/icons-material/ArrowDownward\";\nvar lm = n(_ref36 => {\n  let {\n    className: e\n  } = _ref36;\n  let {\n    index: t,\n    total: o,\n    reOrder: r\n  } = Ss();\n  return pr.createElement(\"div\", {\n    className: e\n  }, pr.createElement(mi, {\n    label: \"ra.action.move_up\",\n    size: \"small\",\n    onClick: () => r(t - 1),\n    disabled: t <= 0\n  }, pr.createElement(kx, null)), pr.createElement(mi, {\n    label: \"ra.action.move_down\",\n    size: \"small\",\n    onClick: () => r(t + 1),\n    disabled: o == null || t >= o - 1\n  }, pr.createElement(wx, null)));\n}, \"ReOrderButtons\");\nvar Es = n(e => {\n  let {\n    addButton: t = Vt.createElement(am, null),\n    removeButton: o = Vt.createElement(im, null),\n    reOrderButtons: r = Vt.createElement(lm, null),\n    children: s,\n    className: a,\n    record: p,\n    resource: c,\n    source: d,\n    disabled: m,\n    disableAdd: u,\n    disableRemove: g,\n    disableReordering: y,\n    getItemLabel: b = _x\n  } = e,\n      {\n    append: P,\n    fields: T,\n    move: C,\n    remove: x\n  } = rm(e),\n      I = el(k => {\n    x(k);\n  }, [x]),\n      v = el(function () {\n    let k = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : void 0;\n    P(k);\n  }, [P]),\n      N = n(k => L => {\n    v(), k && k(L);\n  }, \"handleAddButtonClick\"),\n      F = el((k, L) => {\n    C(k, L);\n  }, [C]),\n      E = Mx(p, d),\n      B = $x(() => ({\n    total: T.length,\n    add: v,\n    remove: I,\n    reOrder: F\n  }), [T.length, v, I, F]);\n  return T ? Vt.createElement(vs.Provider, {\n    value: B\n  }, Vt.createElement(Vx, {\n    className: a\n  }, T.map((k, L) => Vt.createElement(sm, {\n    key: k.id,\n    disabled: m,\n    disableRemove: g,\n    disableReordering: y,\n    fields: T,\n    getItemLabel: b,\n    index: L,\n    member: `${d}.${L}`,\n    onRemoveField: I,\n    onReorder: F,\n    record: E && E[L] || {},\n    removeButton: o,\n    reOrderButtons: r,\n    resource: c,\n    source: d\n  }, s)), !m && !u && Vt.createElement(\"li\", {\n    className: Ae.line\n  }, Vt.createElement(\"span\", {\n    className: Ae.action\n  }, Ax(t, {\n    onClick: N(t.props.onClick),\n    className: Dx(\"button-add\", `button-add-${d}`)\n  }))))) : null;\n}, \"SimpleFormIterator\");\nEs.defaultProps = {\n  disableAdd: !1,\n  disableRemove: !1\n};\nEs.propTypes = {\n  defaultValue: Pe.any,\n  addButton: Pe.element,\n  removeButton: Pe.element,\n  children: Pe.node,\n  className: Pe.string,\n  field: Pe.object,\n  fields: Pe.array,\n  fieldState: Pe.object,\n  formState: Pe.object,\n  record: Pe.object,\n  source: Pe.string,\n  resource: Pe.string,\n  translate: Pe.func,\n  disableAdd: Pe.bool,\n  disableRemove: Pe.oneOfType([Pe.func, Pe.bool]),\n  TransitionProps: Pe.shape({})\n};\n\nvar Vx = Ox(\"ul\")(_ref37 => {\n  let {\n    theme: e\n  } = _ref37;\n  return {\n    padding: 0,\n    marginBottom: 0,\n    \"& > li:last-child\": {\n      borderBottom: \"none\"\n    },\n    [`& .${Ae.line}`]: {\n      display: \"flex\",\n      listStyleType: \"none\",\n      borderBottom: `solid 1px ${e.palette.divider}`,\n      [e.breakpoints.down(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    [`& .${Ae.index}`]: {\n      [e.breakpoints.down(\"md\")]: {\n        display: \"none\"\n      },\n      marginRight: e.spacing(1)\n    },\n    [`& .${Ae.indexContainer}`]: {\n      display: \"flex\",\n      paddingTop: \"1em\",\n      marginRight: e.spacing(1),\n      alignItems: \"center\"\n    },\n    [`& .${Ae.form}`]: {\n      alignItems: \"flex-start\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: 2\n    },\n    [`& .${Ae.action}`]: {\n      paddingTop: \"0.5em\"\n    },\n    [`& .${Ae.leftIcon}`]: {\n      marginRight: e.spacing(1)\n    }\n  };\n}),\n    _x = n(e => e + 1, \"DefaultLabelFn\");\n\nl();\nimport * as Ct from \"react\";\nimport { isValidElement as tl, useCallback as ol, useEffect as mr, useMemo as Gx, useRef as rl, useState as dm } from \"react\";\nimport Jx from \"lodash/debounce\";\nimport um from \"lodash/get\";\nimport fm from \"lodash/isEqual\";\nimport Kx from \"clsx\";\nimport { Autocomplete as Yx, Chip as Zx, TextField as eC } from \"@mui/material\";\nimport { styled as tC } from \"@mui/material/styles\";\nimport { FieldTitle as oC, useChoicesContext as rC, useInput as nC, useSuggestions as sC, useTimeout as aC, useTranslate as iC, warning as lC } from \"ra-core\";\nl();\nimport * as pm from \"react\";\nimport { createContext as Hx, isValidElement as cm, useContext as zx, useEffect as Wx, useMemo as qx, useRef as jx, useState as Ux } from \"react\";\nimport { useTranslate as Xx } from \"ra-core\";\nimport Qx from \"lodash/set\";\nvar cr = n(e => {\n  let {\n    create: t,\n    createLabel: o = \"ra.action.create\",\n    createItemLabel: r = \"ra.action.create_item\",\n    createValue: s = \"@@ra-create\",\n    optionText: a = \"name\",\n    filter: p,\n    handleChange: c,\n    onCreate: d\n  } = e,\n      m = Xx(),\n      [u, g] = Ux(!1),\n      y = jx(p);\n  Wx(() => {\n    y.current !== p && p !== \"\" && (y.current = p);\n  }, [p]);\n  let b = qx(() => ({\n    filter: y.current,\n    onCancel: () => g(!1),\n    onCreate: P => {\n      g(!1), c(P);\n    }\n  }), [c]);\n  return {\n    getCreateItem: () => typeof a != \"string\" ? {\n      id: s,\n      name: p && r ? m(r, {\n        item: p,\n        _: r\n      }) : m(o, {\n        _: o\n      })\n    } : Qx({\n      id: s\n    }, a, p && r ? m(r, {\n      item: p,\n      _: r\n    }) : m(o, {\n      _: o\n    })),\n    handleChange: async P => {\n      var x;\n      let T = ((x = P == null ? void 0 : P.target) == null ? void 0 : x.value) || P,\n          C = Array.isArray(T) ? [...T].pop() : T;\n      if ((C == null ? void 0 : C.id) === s || C === s) if (cm(t)) {\n        g(!0);\n        return;\n      } else {\n        let I = await d(p);\n\n        if (I) {\n          c(I);\n          return;\n        }\n      }\n      c(P);\n    },\n    createElement: u && cm(t) ? pm.createElement(mm.Provider, {\n      value: b\n    }, t) : null\n  };\n}, \"useSupportCreateSuggestion\"),\n    mm = Hx(void 0),\n    sU = n(() => zx(mm), \"useCreateSuggestionContext\");\nvar gm = n(e => {\n  let ec = e,\n      {\n    choices: t,\n    className: o,\n    clearText: r = \"ra.action.clear_input_value\",\n    closeText: s = \"ra.action.close\",\n    create: a,\n    createLabel: p,\n    createItemLabel: c,\n    createValue: d,\n    debounce: m = 250,\n    defaultValue: u = \"\",\n    emptyText: g,\n    emptyValue: y = \"\",\n    field: b,\n    format: P,\n    helperText: T,\n    id: C,\n    inputText: x,\n    isFetching: I,\n    isLoading: v,\n    isRequired: N,\n    label: F,\n    limitChoicesToValue: E,\n    matchSuggestion: B,\n    margin: k = \"dense\",\n    fieldState: L,\n    filterToQuery: _ = mC,\n    formState: H,\n    multiple: $ = !1,\n    noOptionsText: W,\n    onBlur: O,\n    onChange: D,\n    onCreate: X,\n    openText: w = \"ra.action.open\",\n    optionText: M = \"name\",\n    optionValue: re = \"id\",\n    parse: te,\n    resource: de,\n    shouldRenderSuggestions: ne,\n    setFilter: ie,\n    size: G = \"small\",\n    source: le,\n    suggestionLimit: He,\n    TextFieldProps: pe,\n    translateChoice: Bt,\n    validate: it,\n    variant: Yr = \"filled\"\n  } = ec,\n      fo = f(ec, [\"choices\", \"className\", \"clearText\", \"closeText\", \"create\", \"createLabel\", \"createItemLabel\", \"createValue\", \"debounce\", \"defaultValue\", \"emptyText\", \"emptyValue\", \"field\", \"format\", \"helperText\", \"id\", \"inputText\", \"isFetching\", \"isLoading\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"matchSuggestion\", \"margin\", \"fieldState\", \"filterToQuery\", \"formState\", \"multiple\", \"noOptionsText\", \"onBlur\", \"onChange\", \"onCreate\", \"openText\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"shouldRenderSuggestions\", \"setFilter\", \"size\", \"source\", \"suggestionLimit\", \"TextFieldProps\", \"translateChoice\", \"validate\", \"variant\"]),\n      {\n    allChoices: q,\n    isLoading: ze,\n    resource: yt,\n    source: Zr,\n    setFilters: Jo\n  } = rC({\n    choices: t,\n    isFetching: I,\n    isLoading: v,\n    resource: de,\n    source: le\n  }),\n      go = iC(),\n      {\n    id: Te,\n    field: De,\n    isRequired: df,\n    fieldState: {\n      error: Ma,\n      invalid: uf,\n      isTouched: Up\n    },\n    formState: {\n      isSubmitted: Xp\n    }\n  } = nC(i({\n    defaultValue: u,\n    format: P,\n    id: C,\n    field: b,\n    fieldState: L,\n    formState: H,\n    onBlur: O,\n    onChange: D,\n    parse: te,\n    resource: yt,\n    source: Zr,\n    validate: it\n  }, fo)),\n      yo = cC(De.value, {\n    choices: q,\n    multiple: $,\n    optionValue: re\n  });\n  mr(() => {\n    if (tl(M) && x == null) throw new Error(`\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)`);\n    if (tl(M) && B == null) throw new Error(`\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)`);\n  }, [M, x, B]), mr(() => {\n    lC(ne != null && W == null, \"When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys.\");\n  }, [ne, W]);\n  let {\n    getChoiceText: Xn,\n    getChoiceValue: en,\n    getSuggestions: Qp\n  } = sC({\n    choices: q,\n    emptyText: g,\n    emptyValue: y,\n    limitChoicesToValue: E,\n    matchSuggestion: B,\n    optionText: M,\n    optionValue: re,\n    selectedItem: yo,\n    suggestionLimit: He,\n    translateChoice: Bt\n  }),\n      [bo, Gp] = dm(\"\"),\n      ff = n(J => {\n    var ue;\n    $ ? Array.isArray(J) ? De.onChange(J.map(en)) : De.onChange([...((ue = De.value) != null ? ue : []), en(J)]) : De.onChange(en(J) || \"\");\n  }, \"handleChange\"),\n      Jp = ol(Jx(J => {\n    if (ie) return ie(J);\n    t || Jo(_(J), void 0, !0);\n  }, m), [m, Jo, ie]),\n      Kp = rl(De.value);\n  mr(() => {\n    fm(Kp.current, De.value) || (Kp.current = De.value, Jp(\"\"));\n  }, [De.value]);\n  let {\n    getCreateItem: gf,\n    handleChange: yf,\n    createElement: bf\n  } = cr({\n    create: a,\n    createLabel: p,\n    createItemLabel: c,\n    createValue: d,\n    handleChange: ff,\n    filter: bo,\n    onCreate: X,\n    optionText: M\n  }),\n      Ro = ol(J => J == null ? \"\" : typeof J == \"string\" ? J : x != null ? x(J) : Xn(J), [Xn, x]);\n  mr(() => {\n    if (!$) {\n      let J = Ro(yo);\n      if (typeof J == \"string\") Gp(J);else throw new Error(\"When optionText returns a React element, you must also provide the inputText prop\");\n    }\n  }, [Ro, $, yo]);\n  let Rf = n((J, ue, Lt) => {\n    Gp(ue), Jp(ue);\n  }, \"handleInputChange\"),\n      hf = ol(J => {\n    let ue = [];\n    $ ? ue = yo.map(on => Ro(on)) : ue = [Ro(yo)];\n    let Lt = q ? q.some(on => Ro(on) === J) : !1;\n    return ue.includes(J) || Lt;\n  }, [q, Ro, $, yo]),\n      Tf = n((J, ue) => {\n    let {\n      inputValue: Lt\n    } = ue;\n    return (X || a) && Lt !== \"\" && !hf(bo) ? J.concat(gf(Lt)) : J;\n  }, \"filterOptions\"),\n      Pf = n((J, ue, Lt) => {\n    yf(ue != null ? ue : \"\");\n  }, \"handleAutocompleteChange\"),\n      tn = aC(1e3, bo),\n      Yp = rl(q);\n  mr(() => {\n    q && (q.length > 0 || tn) && (Yp.current = q);\n  }, [q, tn]);\n  let Zp = Gx(() => Jo && (q == null ? void 0 : q.length) === 0 && !tn ? Yp.current : Qp(bo), [q, bo, Qp, tn, Jo]),\n      xf = n((J, ue) => en(J) == en(ue), \"isOptionEqualToValue\");\n  return Ct.createElement(Ct.Fragment, null, Ct.createElement(pC, S(i({\n    blurOnSelect: !0,\n    className: Kx(\"ra-input\", `ra-input-${Zr}`, o),\n    clearText: go(r, {\n      _: r\n    }),\n    closeText: go(s, {\n      _: s\n    }),\n    openOnFocus: !0,\n    openText: go(w, {\n      _: w\n    }),\n    id: Te,\n    isOptionEqualToValue: xf,\n    filterSelectedOptions: !0,\n    renderInput: J => Ct.createElement(eC, S(i(i({\n      name: De.name,\n      label: Ct.createElement(oC, {\n        label: F,\n        source: Zr,\n        resource: yt,\n        isRequired: typeof N != \"undefined\" ? N : df\n      }),\n      error: (Up || Xp) && uf,\n      helperText: Ct.createElement(Z, {\n        touched: Up || Xp,\n        error: Ma == null ? void 0 : Ma.message,\n        helperText: T\n      }),\n      margin: k,\n      variant: Yr,\n      className: bm.textField\n    }, pe), J), {\n      size: G\n    })),\n    multiple: $,\n    renderTags: (J, ue) => J.map((Lt, on) => Ct.createElement(Zx, i({\n      label: tl(M) ? x(Lt) : Xn(Lt),\n      sx: {\n        \".MuiSvgIcon-root\": {\n          zIndex: 100\n        }\n      },\n      size: \"small\"\n    }, ue({\n      index: on\n    })))),\n    noOptionsText: typeof W == \"string\" ? go(W, {\n      _: W\n    }) : W,\n    selectOnFocus: !0,\n    clearOnBlur: !0\n  }, oe(fo)), {\n    freeSolo: !!a || !!X,\n    handleHomeEndKeys: !!a || !!X,\n    filterOptions: Tf,\n    options: ne == null || ne(bo) ? Zp : [],\n    getOptionLabel: Ro,\n    inputValue: bo,\n    loading: ze && Zp.length === 0 && tn,\n    value: yo,\n    onChange: Pf,\n    onBlur: De.onBlur,\n    onInputChange: Rf,\n    renderOption: (J, ue) => Ct.createElement(\"li\", i({}, J), Xn(ue))\n  })), bf);\n}, \"AutocompleteInput\"),\n    ym = \"RaAutocompleteInput\",\n    bm = {\n  textField: `${ym}-textField`\n},\n    pC = tC(Yx, {\n  name: ym,\n  overridesResolver: (e, t) => t.root\n})(_ref38 => {\n  let {\n    theme: e\n  } = _ref38;\n  return {\n    [`& .${bm.textField}`]: {\n      minWidth: e.spacing(20)\n    }\n  };\n}),\n    cC = n((e, _ref39) => {\n  let {\n    choices: t,\n    multiple: o,\n    optionValue: r\n  } = _ref39;\n  let s = rl(nl(t, e, r, o)),\n      [a, p] = dm(() => nl(t, e, r, o));\n  return mr(() => {\n    let c = nl(t, e, r, o);\n    fm(s.current, c) || (s.current = c, p(c));\n  }, [t, e, o, r]), a || null;\n}, \"useSelectedChoice\"),\n    nl = n(function () {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let t = arguments.length > 1 ? arguments[1] : undefined;\n  let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"id\";\n  let r = arguments.length > 3 ? arguments[3] : undefined;\n  return r ? (t || []).map(s => e.find(a => s === um(a, o))).filter(s => !!s) : e.find(s => um(s, o) === t) || \"\";\n}, \"getSelectedItems\"),\n    mC = n(e => ({\n  q: e\n}), \"DefaultFilterToQuery\");\nl();\nimport * as Rm from \"react\";\nvar SU = n(o => {\n  var r = o,\n      {\n    defaultValue: e\n  } = r,\n      t = f(r, [\"defaultValue\"]);\n  return Rm.createElement(gm, S(i({}, t), {\n    multiple: !0,\n    defaultValue: e != null ? e : []\n  }));\n}, \"AutocompleteArrayInput\");\nl();\nimport * as Eo from \"react\";\nimport { useCallback as dC } from \"react\";\nimport Tm from \"prop-types\";\nimport uC from \"clsx\";\nimport fC from \"@mui/material/FormControlLabel\";\nimport gC from \"@mui/material/FormHelperText\";\nimport yC from \"@mui/material/FormGroup\";\nimport Pm from \"@mui/material/Switch\";\nimport { FieldTitle as bC, useInput as RC } from \"ra-core\";\nl();\nimport gn from \"prop-types\";\nvar hm = {\n  label: gn.oneOfType([gn.string, gn.bool]),\n  resource: gn.string,\n  source: gn.string\n};\nvar Ns = n(e => {\n  let k = e,\n      {\n    className: t,\n    defaultValue: o = !1,\n    format: r,\n    label: s,\n    fullWidth: a,\n    helperText: p,\n    onBlur: c,\n    onChange: d,\n    onFocus: m,\n    disabled: u,\n    parse: g,\n    resource: y,\n    source: b,\n    validate: P\n  } = k,\n      T = f(k, [\"className\", \"defaultValue\", \"format\", \"label\", \"fullWidth\", \"helperText\", \"onBlur\", \"onChange\", \"onFocus\", \"disabled\", \"parse\", \"resource\", \"source\", \"validate\"]),\n      {\n    id: C,\n    field: x,\n    isRequired: I,\n    fieldState: {\n      error: v,\n      invalid: N,\n      isTouched: F\n    },\n    formState: {\n      isSubmitted: E\n    }\n  } = RC(i({\n    defaultValue: o,\n    format: r,\n    parse: g,\n    resource: y,\n    source: b,\n    onBlur: c,\n    onChange: d,\n    type: \"checkbox\",\n    validate: P\n  }, T)),\n      B = dC(L => {\n    x.onChange(L), x.onBlur();\n  }, [x]);\n  return Eo.createElement(yC, i({\n    className: uC(\"ra-input\", `ra-input-${b}`, t)\n  }, oe(T)), Eo.createElement(fC, {\n    control: Eo.createElement(Pm, S(i({\n      id: C,\n      name: x.name,\n      color: \"primary\",\n      onChange: B,\n      onFocus: m,\n      checked: x.value\n    }, oe(T)), {\n      disabled: u\n    })),\n    label: Eo.createElement(bC, {\n      label: s,\n      source: b,\n      resource: y,\n      isRequired: I\n    })\n  }), Eo.createElement(gC, {\n    error: (F || E) && N\n  }, Eo.createElement(Z, {\n    touched: F || E,\n    error: v == null ? void 0 : v.message,\n    helperText: p\n  })));\n}, \"BooleanInput\");\nNs.propTypes = S(i({}, hm), {\n  options: Tm.shape(Pm.propTypes),\n  disabled: Tm.bool\n});\nNs.defaultProps = {\n  options: {}\n};\nl();\nimport * as vt from \"react\";\nimport { styled as vC } from \"@mui/material/styles\";\nimport Im from \"clsx\";\nimport { useCallback as IC } from \"react\";\nimport tt from \"prop-types\";\nimport Fm from \"lodash/get\";\nimport FC from \"@mui/material/FormLabel\";\nimport SC from \"@mui/material/FormControl\";\nimport EC from \"@mui/material/FormGroup\";\nimport NC from \"@mui/material/FormHelperText\";\nimport { FieldTitle as BC, useInput as LC, warning as Sm, useChoicesContext as kC } from \"ra-core\";\nl();\nimport * as sl from \"react\";\nimport { styled as hC } from \"@mui/material/styles\";\nimport TC from \"@mui/material/FormControlLabel\";\nimport PC from \"@mui/material/Checkbox\";\nimport { useChoices as xC } from \"ra-core\";\nvar xm = n(e => {\n  let T = e,\n      {\n    id: t,\n    choice: o,\n    className: r,\n    fullWidth: s,\n    onChange: a,\n    optionText: p,\n    optionValue: c,\n    options: d,\n    translateChoice: m,\n    value: u\n  } = T,\n      g = f(T, [\"id\", \"choice\", \"className\", \"fullWidth\", \"onChange\", \"optionText\", \"optionValue\", \"options\", \"translateChoice\", \"value\"]),\n      {\n    getChoiceText: y,\n    getChoiceValue: b\n  } = xC({\n    optionText: p,\n    optionValue: c,\n    translateChoice: m\n  }),\n      P = y(o);\n  return sl.createElement(CC, {\n    htmlFor: `${t}_${b(o)}`,\n    key: b(o),\n    onChange: a,\n    className: r,\n    control: sl.createElement(PC, i(i({\n      id: `${t}_${b(o)}`,\n      color: \"primary\",\n      className: vm.checkbox,\n      checked: u ? u.find(C => C == b(o)) !== void 0 : !1,\n      value: String(b(o))\n    }, d), g)),\n    label: P\n  });\n}, \"CheckboxGroupInputItem\"),\n    Cm = \"RaCheckboxGroupInputItem\",\n    vm = {\n  checkbox: `${Cm}-checkbox`\n},\n    CC = hC(TC, {\n  name: Cm,\n  overridesResolver: (e, t) => t.root\n})({\n  [`& .${vm.checkbox}`]: {\n    height: 32\n  }\n});\nvar wC = n(e => {\n  let re = e,\n      {\n    choices: t,\n    className: o,\n    classes: r,\n    format: s,\n    helperText: a,\n    label: p,\n    isLoading: c,\n    isFetching: d,\n    margin: m = \"dense\",\n    onBlur: u,\n    onChange: g,\n    optionText: y = \"name\",\n    optionValue: b = \"id\",\n    parse: P,\n    resource: T,\n    row: C = !0,\n    source: x,\n    translateChoice: I = !0,\n    validate: v\n  } = re,\n      N = f(re, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"isLoading\", \"isFetching\", \"margin\", \"onBlur\", \"onChange\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]),\n      {\n    allChoices: F,\n    isLoading: E,\n    resource: B,\n    source: k\n  } = kC({\n    choices: t,\n    isFetching: d,\n    isLoading: c,\n    resource: T,\n    source: x\n  });\n  Sm(k === void 0, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\"), Sm(F === void 0, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n  let {\n    field: {\n      onChange: L,\n      onBlur: _,\n      value: H\n    },\n    fieldState: {\n      error: $,\n      invalid: W,\n      isTouched: O\n    },\n    formState: {\n      isSubmitted: D\n    },\n    id: X,\n    isRequired: w\n  } = LC(i({\n    format: s,\n    parse: P,\n    resource: B,\n    source: k,\n    validate: v,\n    onChange: g,\n    onBlur: u\n  }, N)),\n      M = IC((te, de) => {\n    let ne;\n    if (F.every(ie => typeof Fm(ie, b) == \"number\")) try {\n      ne = JSON.parse(te.target.value);\n    } catch {\n      ne = te.target.value;\n    } else ne = te.target.value;\n    L(de ? [...(H || []), ne] : H.filter(ie => ie != ne)), _();\n  }, [F, L, _, b, H]);\n  return E && (F == null ? void 0 : F.length) === 0 ? vt.createElement(ye, i({\n    id: X,\n    label: p,\n    source: k,\n    resource: B,\n    className: Im(\"ra-input\", `ra-input-${k}`, o),\n    isRequired: w\n  }, N), vt.createElement(ke, null)) : vt.createElement(AC, i({\n    component: \"fieldset\",\n    margin: m,\n    error: (O || D) && W,\n    className: Im(\"ra-input\", `ra-input-${k}`, o)\n  }, Em(N)), vt.createElement(FC, {\n    component: \"legend\",\n    className: Bm.label\n  }, vt.createElement(BC, {\n    label: p,\n    source: k,\n    resource: B,\n    isRequired: w\n  })), vt.createElement(EC, {\n    row: C\n  }, F == null ? void 0 : F.map(te => vt.createElement(xm, i({\n    key: Fm(te, b),\n    choice: te,\n    id: X,\n    onChange: M,\n    optionText: y,\n    optionValue: b,\n    translateChoice: I,\n    value: H\n  }, Em(N))))), vt.createElement(NC, null, vt.createElement(Z, {\n    touched: O || D,\n    error: $ == null ? void 0 : $.message,\n    helperText: a\n  })));\n}, \"CheckboxGroupInput\"),\n    Em = n(c => {\n  var d = c,\n      {\n    refetch: e,\n    setFilter: t,\n    setPagination: o,\n    setSort: r,\n    loaded: s,\n    touched: a\n  } = d,\n      p = f(d, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n  return oe(p);\n}, \"sanitizeRestProps\");\nwC.propTypes = {\n  choices: tt.arrayOf(tt.any),\n  className: tt.string,\n  source: tt.string,\n  optionText: tt.oneOfType([tt.string, tt.func, tt.element]),\n  optionValue: tt.string,\n  row: tt.bool,\n  resource: tt.string,\n  translateChoice: tt.bool\n};\nvar Nm = \"RaCheckboxGroupInput\",\n    Bm = {\n  label: `${Nm}-label`\n},\n    AC = vC(SC, {\n  name: Nm,\n  overridesResolver: (e, t) => t.root\n})(_ref40 => {\n  let {\n    theme: e\n  } = _ref40;\n  return {\n    [`& .${Bm.label}`]: {\n      transform: \"translate(0, 8px) scale(0.75)\",\n      transformOrigin: `top ${e.direction === \"ltr\" ? \"left\" : \"right\"}`\n    }\n  };\n});\nl();\nimport * as we from \"react\";\nimport { cloneElement as Cd, useCallback as Ol } from \"react\";\nimport zS from \"clsx\";\nimport { ListContextProvider as WS, useChoicesContext as qS, useInput as jS } from \"ra-core\";\nl();\nl();\nimport * as dr from \"react\";\nimport { cloneElement as lv, memo as pv } from \"react\";\nimport ge from \"prop-types\";\nimport { TableBody as cv } from \"@mui/material\";\nimport Dm from \"clsx\";\nl();\nimport { styled as $C } from \"@mui/material\";\nvar fe = \"RaDatagrid\",\n    A = {\n  table: `${fe}-table`,\n  tableWrapper: `${fe}-tableWrapper`,\n  thead: `${fe}-thead`,\n  tbody: `${fe}-tbody`,\n  headerRow: `${fe}-headerRow`,\n  headerCell: `${fe}-headerCell`,\n  checkbox: `${fe}-checkbox`,\n  row: `${fe}-row`,\n  clickableRow: `${fe}-clickableRow`,\n  rowEven: `${fe}-rowEven`,\n  rowOdd: `${fe}-rowOdd`,\n  rowCell: `${fe}-rowCell`,\n  selectable: `${fe}-selectable`,\n  expandHeader: `${fe}-expandHeader`,\n  expandIconCell: `${fe}-expandIconCell`,\n  expandIcon: `${fe}-expandIcon`,\n  expandable: `${fe}-expandable`,\n  expanded: `${fe}-expanded`,\n  expandedPanel: `${fe}-expandedPanel`\n},\n    Lm = $C(\"div\", {\n  name: fe,\n  overridesResolver: (e, t) => t.root\n})(_ref41 => {\n  let {\n    theme: e\n  } = _ref41;\n  return {\n    [`& .${A.table}`]: {\n      tableLayout: \"auto\"\n    },\n    [`& .${A.tableWrapper}`]: {},\n    [`& .${A.thead}`]: {},\n    [`& .${A.tbody}`]: {},\n    [`& .${A.headerRow}`]: {},\n    [`& .${A.headerCell}`]: {\n      position: \"sticky\",\n      top: 0,\n      zIndex: 2,\n      backgroundColor: e.palette.background.paper,\n      \"&:first-of-type\": {\n        borderTopLeftRadius: e.shape.borderRadius\n      },\n      \"&:last-child\": {\n        borderTopRightRadius: e.shape.borderRadius\n      }\n    },\n    [`& .${A.checkbox}`]: {},\n    [`& .${A.row}`]: {},\n    [`& .${A.clickableRow}`]: {\n      cursor: \"pointer\"\n    },\n    [`& .${A.rowEven}`]: {},\n    [`& .${A.rowOdd}`]: {},\n    [`& .${A.rowCell}`]: {},\n    [`& .${A.expandHeader}`]: {\n      padding: 0,\n      width: e.spacing(6)\n    },\n    [`& .${A.expandIconCell}`]: {\n      width: e.spacing(6)\n    },\n    [`& .${A.expandIcon}`]: {\n      padding: e.spacing(1),\n      transform: \"rotate(-90deg)\",\n      transition: e.transitions.create(\"transform\", {\n        duration: e.transitions.duration.shortest\n      })\n    },\n    [`& .${A.expandIcon}.${A.expanded}`]: {\n      transform: \"rotate(0deg)\"\n    },\n    [`& .${A.expandedPanel}`]: {}\n  };\n});\nl();\nimport ot, { isValidElement as Am, cloneElement as XC, createElement as QC, useState as GC, useEffect as JC, useCallback as cl, memo as KC } from \"react\";\nimport Fe from \"prop-types\";\nimport ml from \"clsx\";\nimport { TableCell as dl, TableRow as $m, Checkbox as YC } from \"@mui/material\";\nimport { RecordContextProvider as ZC, shallowEqual as ev, useExpanded as tv, useResourceContext as ov, useTranslate as rv, useCreatePath as nv, useRecordContext as sv } from \"ra-core\";\nimport { useNavigate as av } from \"react-router-dom\";\nl();\nimport * as Bs from \"react\";\nimport Ls from \"prop-types\";\nimport OC from \"@mui/material/TableCell\";\nimport DC from \"clsx\";\nvar al = Bs.forwardRef((p, a) => {\n  var c = p,\n      {\n    className: e,\n    field: t,\n    record: o,\n    resource: r\n  } = c,\n      s = f(c, [\"className\", \"field\", \"record\", \"resource\"]);\n  return Bs.createElement(OC, i({\n    className: DC(e, t.props.cellClassName),\n    align: t.props.textAlign,\n    ref: a\n  }, s), t);\n});\nal.propTypes = {\n  className: Ls.string,\n  field: Ls.element,\n  record: Ls.object,\n  resource: Ls.string\n};\nal.displayName = \"DatagridCell\";\nvar il = al;\nl();\nimport * as ll from \"react\";\nimport { memo as MC } from \"react\";\nimport VC from \"@mui/material/IconButton\";\nimport _C from \"@mui/icons-material/ExpandMore\";\nimport { useTranslate as HC } from \"ra-core\";\nvar zC = n(r => {\n  var s = r,\n      {\n    expanded: e,\n    expandContentId: t\n  } = s,\n      o = f(s, [\"expanded\", \"expandContentId\"]);\n  let a = HC();\n  return ll.createElement(VC, S(i({\n    \"aria-label\": a(e ? \"ra.action.close\" : \"ra.action.expand\"),\n    \"aria-expanded\": e,\n    \"aria-controls\": t,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    component: \"div\"\n  }, o), {\n    size: \"small\"\n  }), ll.createElement(_C, {\n    fontSize: \"inherit\"\n  }));\n}, \"ExpandRowButton\"),\n    pl = MC(zC);\nl();\nimport { useContext as qC, useMemo as jC } from \"react\";\nl();\nimport { createContext as WC } from \"react\";\nvar km = WC({});\nkm.displayName = \"DatagridContext\";\nvar ks = km;\nimport UC from \"lodash/defaults\";\nvar wm = n(e => {\n  let t = qC(ks);\n  return jC(() => UC({}, e != null ? {\n    isRowExpandable: e.isRowExpandable\n  } : {}, t), [t, e]);\n}, \"useDatagridContext\");\nvar Om = n((e, t, o) => e ? 1 + (o ? 1 : 0) + ot.Children.toArray(t).filter(r => !!r).length : 0, \"computeNbColumns\"),\n    ws = ot.forwardRef((e, t) => {\n  let W = e,\n      {\n    children: o,\n    className: r,\n    expand: s,\n    hasBulkActions: a,\n    hover: p,\n    id: c,\n    onToggleItem: d,\n    record: m,\n    rowClick: u,\n    selected: g,\n    style: y,\n    selectable: b\n  } = W,\n      P = f(W, [\"children\", \"className\", \"expand\", \"hasBulkActions\", \"hover\", \"id\", \"onToggleItem\", \"record\", \"rowClick\", \"selected\", \"style\", \"selectable\"]),\n      T = wm(),\n      C = rv(),\n      x = sv(e),\n      I = (!T || !T.isRowExpandable || T.isRowExpandable(x)) && s,\n      v = ov(e),\n      N = nv(),\n      [F, E] = tv(v, c, T && T.expandSingle),\n      [B, k] = GC(() => Om(I, o, a));\n  JC(() => {\n    let O = Om(I, o, a);\n    O !== B && k(O);\n  }, [I, B, o, a]);\n\n  let L = av(),\n      _ = cl(O => {\n    E(), O.stopPropagation();\n  }, [E]),\n      H = cl(O => {\n    !b || (d(c, O), O.stopPropagation());\n  }, [c, d, b]),\n      $ = cl(async O => {\n    O.persist();\n    let D = typeof u == \"function\" ? await u(c, v, x) : u;\n\n    if (!(D === !1 || D == null)) {\n      if ([\"edit\", \"show\"].includes(D)) {\n        L(N({\n          resource: v,\n          id: c,\n          type: D\n        }));\n        return;\n      }\n\n      if (D === \"expand\") {\n        _(O);\n\n        return;\n      }\n\n      if (D === \"toggleSelection\") {\n        H(O);\n        return;\n      }\n\n      L(D);\n    }\n  }, [u, c, v, x, L, N, _, H]);\n\n  return ot.createElement(ZC, {\n    value: x\n  }, ot.createElement($m, i({\n    ref: t,\n    className: ml(r, {\n      [A.expandable]: I,\n      [A.selectable]: b,\n      [A.clickableRow]: typeof u == \"function\" ? !0 : u\n    }),\n    key: c,\n    style: y,\n    hover: p,\n    onClick: $\n  }, P), s && ot.createElement(dl, {\n    padding: \"none\",\n    className: A.expandIconCell\n  }, I && ot.createElement(pl, {\n    className: ml(A.expandIcon, {\n      [A.expanded]: F\n    }),\n    expanded: F,\n    onClick: _,\n    expandContentId: `${c}-expand`\n  })), a && ot.createElement(dl, {\n    padding: \"checkbox\"\n  }, b && ot.createElement(YC, {\n    \"aria-label\": C(\"ra.action.select_row\", {\n      _: \"Select this row\"\n    }),\n    color: \"primary\",\n    className: `select-item ${A.checkbox}`,\n    checked: g,\n    onClick: H\n  })), ot.Children.map(o, (O, D) => Am(O) ? ot.createElement(il, i({\n    key: `${c}-${O.props.source || D}`,\n    className: ml(`column-${O.props.source}`, A.rowCell),\n    record: x\n  }, {\n    field: O,\n    resource: v\n  })) : null)), I && F && ot.createElement($m, {\n    key: `${c}-expand`,\n    id: `${c}-expand`,\n    className: A.expandedPanel\n  }, ot.createElement(dl, {\n    colSpan: B\n  }, Am(s) ? XC(s, {\n    record: x,\n    resource: v,\n    id: String(c)\n  }) : QC(s, {\n    record: x,\n    resource: v,\n    id: String(c)\n  }))));\n});\nws.propTypes = {\n  children: Fe.node,\n  className: Fe.string,\n  expand: Fe.oneOfType([Fe.element, Fe.elementType]),\n  hasBulkActions: Fe.bool.isRequired,\n  hover: Fe.bool,\n  id: Fe.any,\n  onToggleItem: Fe.func,\n  record: Fe.object,\n  resource: Fe.string,\n  rowClick: Fe.oneOfType([Fe.string, Fe.func]),\n  selected: Fe.bool,\n  style: Fe.object,\n  selectable: Fe.bool\n};\nws.defaultProps = {\n  hasBulkActions: !1,\n  hover: !0,\n  selected: !1,\n  selectable: !0\n};\nvar iv = n((e, t) => {\n  let d = e,\n      {\n    children: o,\n    expand: r\n  } = d,\n      s = f(d, [\"children\", \"expand\"]),\n      m = t,\n      {\n    children: a,\n    expand: p\n  } = m,\n      c = f(m, [\"children\", \"expand\"]);\n  return ev(s, c);\n}, \"areEqual\"),\n    As = KC(ws, iv);\nAs.displayName = \"PureDatagridRow\";\nvar ul = ws;\nvar yn = dr.forwardRef((T, P) => {\n  var C = T,\n      {\n    children: e,\n    className: t,\n    data: o,\n    expand: r,\n    hasBulkActions: s,\n    hover: a,\n    onToggleItem: p,\n    resource: c,\n    row: d,\n    rowClick: m,\n    rowStyle: u,\n    selectedIds: g,\n    isRowSelectable: y\n  } = C,\n      b = f(C, [\"children\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"isRowSelectable\"]);\n  return dr.createElement(cv, i({\n    ref: P,\n    className: Dm(\"datagrid-body\", t, A.tbody)\n  }, b), o.map((x, I) => {\n    var v;\n    return lv(d, {\n      className: Dm(A.row, {\n        [A.rowEven]: I % 2 === 0,\n        [A.rowOdd]: I % 2 !== 0\n      }),\n      expand: r,\n      hasBulkActions: s && !!g,\n      hover: a,\n      id: x.id,\n      key: (v = x.id) != null ? v : `row${I}`,\n      onToggleItem: p,\n      record: x,\n      resource: c,\n      rowClick: m,\n      selectable: !y || y(x),\n      selected: g == null ? void 0 : g.includes(x.id),\n      style: u ? u(x, I) : null\n    }, e);\n  }));\n});\nyn.propTypes = {\n  className: ge.string,\n  children: ge.node,\n  data: ge.arrayOf(ge.object).isRequired,\n  expand: ge.oneOfType([ge.element, ge.elementType]),\n  hasBulkActions: ge.bool.isRequired,\n  hover: ge.bool,\n  onToggleItem: ge.func,\n  resource: ge.string,\n  row: ge.element,\n  rowClick: ge.oneOfType([ge.string, ge.func]),\n  rowStyle: ge.func,\n  selectedIds: ge.arrayOf(ge.any),\n  styles: ge.object,\n  isRowSelectable: ge.func\n};\nyn.defaultProps = {\n  data: [],\n  hasBulkActions: !1,\n  row: dr.createElement(ul, null)\n};\nyn.muiName = \"TableBody\";\nvar bn = pv(yn);\nbn.muiName = \"TableBody\";\nbn.defaultProps = {\n  row: dr.createElement(As, null)\n};\nvar fl = yn;\nl();\nimport * as ur from \"react\";\nimport { styled as mv } from \"@mui/material/styles\";\nimport { memo as dv } from \"react\";\nimport Yt from \"prop-types\";\nimport uv from \"clsx\";\nimport { TableCell as fv, TableSortLabel as gv, Tooltip as yv } from \"@mui/material\";\nimport { FieldTitle as Mm, useTranslate as bv, useResourceContext as Rv } from \"ra-core\";\nvar Vm = n(e => {\n  let m = e,\n      {\n    className: t,\n    field: o,\n    sort: r,\n    updateSort: s,\n    isSorting: a\n  } = m,\n      p = f(m, [\"className\", \"field\", \"sort\", \"updateSort\", \"isSorting\"]),\n      c = Rv(e),\n      d = bv();\n  return ur.createElement(hv, i({\n    className: uv(t, o.props.headerClassName),\n    align: o.props.textAlign,\n    variant: \"head\"\n  }, p), s && o.props.sortable !== !1 && (o.props.sortBy || o.props.source) ? ur.createElement(yv, {\n    title: d(\"ra.action.sort\"),\n    placement: o.props.textAlign === \"right\" ? \"bottom-end\" : \"bottom-start\",\n    enterDelay: 300\n  }, ur.createElement(gv, {\n    active: r.field === (o.props.sortBy || o.props.source),\n    direction: r.order === \"ASC\" ? \"asc\" : \"desc\",\n    \"data-field\": o.props.sortBy || o.props.source,\n    \"data-order\": o.props.sortByOrder || \"ASC\",\n    onClick: s,\n    classes: Hm\n  }, ur.createElement(Mm, {\n    label: o.props.label,\n    source: o.props.source,\n    resource: c\n  }))) : ur.createElement(Mm, {\n    label: o.props.label,\n    source: o.props.source,\n    resource: c\n  }));\n}, \"DatagridHeaderCell\");\nVm.propTypes = {\n  className: Yt.string,\n  field: Yt.element,\n  sort: Yt.shape({\n    field: Yt.string,\n    order: Yt.string\n  }).isRequired,\n  isSorting: Yt.bool,\n  resource: Yt.string,\n  updateSort: Yt.func\n};\nvar gl = dv(Vm, (e, t) => e.updateSort === t.updateSort && e.sort.field === t.sort.field && e.sort.order === t.sort.order && e.isSorting === t.isSorting && e.resource === t.resource),\n    _m = \"RaDatagridHeaderCell\",\n    Hm = {\n  icon: `${_m}-icon`\n},\n    hv = mv(fv, {\n  name: _m,\n  overridesResolver: (e, t) => t.root\n})(_ref42 => {\n  let {\n    theme: e\n  } = _ref42;\n  return {\n    [\"& .MuiTableSortLabel-icon\"]: {\n      display: \"none\"\n    },\n    [\"& .Mui-active .MuiTableSortLabel-icon\"]: {\n      display: \"inline\"\n    }\n  };\n});\nl();\nimport * as xe from \"react\";\nimport { memo as Cv } from \"react\";\nimport Zt from \"prop-types\";\nimport { Table as vv, TableCell as fr, TableHead as Iv, TableRow as Wm, TableBody as Fv, IconButton as Sv, Checkbox as qm } from \"@mui/material\";\nimport Ev from \"@mui/icons-material/ExpandMore\";\nimport Nv from \"clsx\";\nimport { useTimeout as Bv } from \"ra-core\";\nl();\nimport * as zm from \"react\";\nimport { styled as Tv } from \"@mui/material/styles\";\nvar No = n(e => zm.createElement(xv, {\n  className: e.className\n}, \"\\xA0\"), \"Placeholder\"),\n    Pv = \"RaPlaceholder\",\n    xv = Tv(\"span\", {\n  name: Pv,\n  overridesResolver: (e, t) => t.root\n})(_ref43 => {\n  let {\n    theme: e\n  } = _ref43;\n  return {\n    backgroundColor: e.palette.grey[300],\n    display: \"flex\"\n  };\n});\nvar yl = n((e, t) => Array.from({\n  length: e\n}, (o, r) => t(r)), \"times\"),\n    jm = n(_ref44 => {\n  let {\n    className: e,\n    expand: t,\n    hasBulkActions: o,\n    nbChildren: r,\n    nbFakeLines: s = 5,\n    size: a\n  } = _ref44;\n  return Bv(1e3) ? xe.createElement(vv, {\n    className: Nv(A.table, e),\n    size: a\n  }, xe.createElement(Iv, null, xe.createElement(Wm, {\n    className: A.row\n  }, t && xe.createElement(fr, {\n    padding: \"none\",\n    className: A.expandHeader\n  }), o && xe.createElement(fr, {\n    padding: \"checkbox\",\n    className: A.expandIconCell\n  }, xe.createElement(qm, {\n    className: \"select-all\",\n    color: \"primary\",\n    checked: !1\n  })), yl(r, c => xe.createElement(fr, {\n    variant: \"head\",\n    className: A.headerCell,\n    key: c\n  }, xe.createElement(No, null))))), xe.createElement(Fv, null, yl(s, c => xe.createElement(Wm, {\n    key: c,\n    style: {\n      opacity: 1 / (c + 1)\n    }\n  }, t && xe.createElement(fr, {\n    padding: \"none\",\n    className: A.expandIconCell\n  }, xe.createElement(Sv, {\n    className: A.expandIcon,\n    component: \"div\",\n    \"aria-hidden\": \"true\",\n    size: \"large\"\n  }, xe.createElement(Ev, null))), o && xe.createElement(fr, {\n    padding: \"checkbox\",\n    className: A.expandIconCell\n  }, xe.createElement(qm, {\n    className: \"select-all\",\n    color: \"primary\",\n    checked: !1\n  })), yl(r, d => xe.createElement(fr, {\n    className: A.rowCell,\n    key: d\n  }, xe.createElement(No, null))))))) : null;\n}, \"DatagridLoading\");\njm.propTypes = {\n  className: Zt.string,\n  expand: Zt.oneOfType([Zt.element, Zt.elementType]),\n  hasBulkActions: Zt.bool,\n  nbChildren: Zt.number,\n  nbFakeLines: Zt.number,\n  size: Zt.oneOf([\"small\", \"medium\"])\n};\nvar bl = Cv(jm);\nl();\nimport * as rt from \"react\";\nimport { cloneElement as oI, createElement as rI, isValidElement as Jm, useCallback as nI, useRef as sI, useEffect as aI, useMemo as iI } from \"react\";\nimport Q from \"prop-types\";\nimport { sanitizeListRestProps as lI, useListContext as pI } from \"ra-core\";\nimport { Table as cI } from \"@mui/material\";\nimport mI from \"clsx\";\nimport dI from \"lodash/union\";\nimport uI from \"lodash/difference\";\nl();\nimport * as Bo from \"react\";\nimport { Children as Lv, isValidElement as kv, useCallback as Um } from \"react\";\nimport Se from \"prop-types\";\nimport { useListContext as wv, useResourceContext as Av, useTranslate as $v } from \"ra-core\";\nimport { Checkbox as Ov, TableCell as Xm, TableHead as Dv, TableRow as Mv } from \"@mui/material\";\nimport $s from \"clsx\";\nvar Os = n(e => {\n  let {\n    children: t,\n    className: o,\n    hasExpand: r = !1,\n    hasBulkActions: s = !1,\n    isRowSelectable: a\n  } = e,\n      p = Av(e),\n      c = $v(),\n      {\n    sort: d,\n    data: m,\n    onSelect: u,\n    selectedIds: g,\n    setSort: y\n  } = wv(e),\n      b = Um(x => {\n    x.stopPropagation();\n    let I = x.currentTarget.dataset.field,\n        v = d.field === I ? d.order === \"ASC\" ? \"DESC\" : \"ASC\" : x.currentTarget.dataset.order;\n    y({\n      field: I,\n      order: v\n    });\n  }, [d.field, d.order, y]),\n      P = y ? b : null,\n      T = Um(x => u(x.target.checked ? g.concat(m.filter(I => !g.includes(I.id)).filter(I => a ? a(I) : !0).map(I => I.id)) : []), [m, u, a, g]),\n      C = Array.isArray(m) ? a ? m.filter(x => a(x)).map(x => x.id) : m.map(x => x.id) : [];\n  return Bo.createElement(Dv, {\n    className: $s(o, A.thead)\n  }, Bo.createElement(Mv, {\n    className: $s(A.row, A.headerRow)\n  }, r && Bo.createElement(Xm, {\n    padding: \"none\",\n    className: $s(A.headerCell, A.expandHeader)\n  }), s && g && Bo.createElement(Xm, {\n    padding: \"checkbox\",\n    className: A.headerCell\n  }, Bo.createElement(Ov, {\n    \"aria-label\": c(\"ra.action.select_all\", {\n      _: \"Select all\"\n    }),\n    className: \"select-all\",\n    color: \"primary\",\n    checked: g.length > 0 && C.length > 0 && C.every(x => g.includes(x)),\n    onChange: T\n  })), Lv.map(t, (x, I) => kv(x) ? Bo.createElement(gl, {\n    className: $s(A.headerCell, `column-${x.props.source}`),\n    sort: d,\n    field: x,\n    isSorting: d.field === (x.props.sortBy || x.props.source),\n    key: x.props.source || I,\n    resource: p,\n    updateSort: P\n  }) : null)));\n}, \"DatagridHeader\");\nOs.propTypes = {\n  children: Se.node,\n  className: Se.string,\n  sort: Se.exact({\n    field: Se.string,\n    order: Se.string\n  }),\n  data: Se.arrayOf(Se.any),\n  hasExpand: Se.bool,\n  hasBulkActions: Se.bool,\n  isRowSelectable: Se.func,\n  isRowExpandable: Se.func,\n  onSelect: Se.func,\n  onToggleItem: Se.func,\n  resource: Se.string,\n  selectedIds: Se.arrayOf(Se.any),\n  setSort: Se.func\n};\nOs.displayName = \"DatagridHeader\";\nl();\nimport Vv from \"react\";\n\nvar _v = n(_ref45 => {\n  let {\n    children: e,\n    value: t\n  } = _ref45;\n  return Vv.createElement(ks.Provider, {\n    value: t\n  }, e);\n}, \"DatagridContextProvider\"),\n    Qm = _v;\n\nl();\nimport * as eo from \"react\";\nimport { Children as Hv, cloneElement as zv, isValidElement as Wv, useCallback as qv } from \"react\";\nimport Gm from \"prop-types\";\nimport { styled as jv } from \"@mui/material/styles\";\nimport Uv from \"clsx\";\nimport Xv from \"@mui/material/Toolbar\";\nimport Qv from \"@mui/material/Typography\";\nimport { lighten as Gv } from \"@mui/material/styles\";\nimport Jv from \"@mui/material/IconButton\";\nimport Kv from \"@mui/icons-material/Close\";\nimport { useTranslate as Yv, sanitizeListRestProps as Zv, useListContext as eI } from \"ra-core\";\nvar Rl = n(e => {\n  let g = e,\n      {\n    label: t = \"ra.action.bulk_actions\",\n    children: o,\n    className: r\n  } = g,\n      s = f(g, [\"label\", \"children\", \"className\"]),\n      {\n    filterValues: a,\n    resource: p,\n    selectedIds: c = [],\n    onUnselectItems: d\n  } = eI(e),\n      m = Yv(),\n      u = qv(() => {\n    d();\n  }, [d]);\n  return eo.createElement(tI, {\n    className: r\n  }, eo.createElement(Xv, i({\n    \"data-test\": \"bulk-actions-toolbar\",\n    className: Uv(pt.toolbar, {\n      [pt.collapsed]: c.length === 0\n    })\n  }, Zv(s)), eo.createElement(\"div\", {\n    className: pt.title\n  }, eo.createElement(Jv, {\n    className: pt.icon,\n    \"aria-label\": m(\"ra.action.unselect\"),\n    title: m(\"ra.action.unselect\"),\n    onClick: u,\n    size: \"small\"\n  }, eo.createElement(Kv, {\n    fontSize: \"small\"\n  })), eo.createElement(Qv, {\n    color: \"inherit\",\n    variant: \"subtitle1\"\n  }, m(t, {\n    _: t,\n    smart_count: c.length\n  }))), eo.createElement(Pt, {\n    className: pt.topToolbar\n  }, Hv.map(o, y => Wv(y) ? zv(y, {\n    filterValues: a,\n    resource: p,\n    selectedIds: c\n  }) : null))));\n}, \"BulkActionsToolbar\");\nRl.propTypes = {\n  children: Gm.node,\n  label: Gm.string\n};\nvar Lo = \"RaBulkActionsToolbar\",\n    pt = {\n  toolbar: `${Lo}-toolbar`,\n  topToolbar: `${Lo}-topToolbar`,\n  buttons: `${Lo}-buttons`,\n  collapsed: `${Lo}-collapsed`,\n  title: `${Lo}-title`,\n  icon: `${Lo}-icon`\n},\n    tI = jv(\"div\", {\n  name: Lo,\n  overridesResolver: (e, t) => t.root\n})(_ref46 => {\n  let {\n    theme: e\n  } = _ref46;\n  return {\n    position: \"relative\",\n    [`& .${pt.toolbar}`]: {\n      position: \"absolute\",\n      left: 0,\n      right: 0,\n      zIndex: 3,\n      color: e.palette.mode === \"light\" ? e.palette.primary.main : e.palette.text.primary,\n      justifyContent: \"space-between\",\n      backgroundColor: e.palette.mode === \"light\" ? Gv(e.palette.primary.light, .8) : e.palette.primary.dark,\n      minHeight: e.spacing(6),\n      height: e.spacing(6),\n      transform: `translateY(-${e.spacing(6)})`,\n      transition: `${e.transitions.create(\"height\")}, ${e.transitions.create(\"min-height\")}, ${e.transitions.create(\"transform\")}`,\n      borderTopLeftRadius: e.shape.borderRadius,\n      borderTopRightRadius: e.shape.borderRadius\n    },\n    [`& .${pt.topToolbar}`]: {\n      paddingBottom: 0,\n      minHeight: \"auto\"\n    },\n    [`& .${pt.buttons}`]: {},\n    [`& .${pt.collapsed}`]: {\n      minHeight: 0,\n      height: 0,\n      transform: \"translateY(0)\",\n      overflowY: \"hidden\"\n    },\n    [`& .${pt.title}`]: {\n      display: \"flex\",\n      flex: \"0 0 auto\"\n    },\n    [`& .${pt.icon}`]: {\n      marginLeft: \"-0.5em\",\n      marginRight: \"0.5em\"\n    }\n  };\n});\nvar Km = rt.createElement(Ja, null),\n    to = rt.forwardRef((e, t) => {\n  let X = e,\n      {\n    optimized: o = !1,\n    body: r = o ? bn : fl,\n    header: s = Os,\n    children: a,\n    className: p,\n    empty: c,\n    expand: d,\n    bulkActionButtons: m = Km,\n    hover: u,\n    isRowSelectable: g,\n    isRowExpandable: y,\n    resource: b,\n    rowClick: P,\n    rowStyle: T,\n    size: C = \"small\",\n    sx: x,\n    expandSingle: I = !1\n  } = X,\n      v = f(X, [\"optimized\", \"body\", \"header\", \"children\", \"className\", \"empty\", \"expand\", \"bulkActionButtons\", \"hover\", \"isRowSelectable\", \"isRowExpandable\", \"resource\", \"rowClick\", \"rowStyle\", \"size\", \"sx\", \"expandSingle\"]),\n      {\n    sort: N,\n    data: F,\n    isLoading: E,\n    onSelect: B,\n    onToggleItem: k,\n    selectedIds: L,\n    setSort: _,\n    total: H\n  } = pI(e),\n      $ = !!m,\n      W = iI(() => ({\n    isRowExpandable: y,\n    expandSingle: I\n  }), [y, I]),\n      O = sI(null);\n  aI(() => {\n    (!L || L.length === 0) && (O.current = null);\n  }, [JSON.stringify(L)]);\n  let D = nI((w, M) => {\n    let re = F.map(de => de.id),\n        te = re.indexOf(O.current);\n\n    if (O.current = M.target.checked ? w : null, M.shiftKey && te !== -1) {\n      let de = re.indexOf(w),\n          ne = re.slice(Math.min(te, de), Math.max(te, de) + 1),\n          ie = M.target.checked ? dI(L, ne) : uI(L, ne);\n      B(g ? ie.filter(G => g(F.find(le => le.id === G))) : ie);\n    } else k(w);\n  }, [F, g, B, k, L]);\n  return E === !0 ? rt.createElement(bl, {\n    className: p,\n    expand: d,\n    hasBulkActions: $,\n    nbChildren: rt.Children.count(a),\n    size: C\n  }) : F.length === 0 || H === 0 ? c || null : rt.createElement(Qm, {\n    value: W\n  }, rt.createElement(Lm, {\n    sx: x\n  }, m !== !1 ? rt.createElement(Rl, {\n    selectedIds: L\n  }, Jm(m) ? m : Km) : null, rt.createElement(\"div\", {\n    className: A.tableWrapper\n  }, rt.createElement(cI, i({\n    ref: t,\n    className: mI(A.table, p),\n    size: C\n  }, gI(v)), Ym(s, {\n    children: a,\n    sort: N,\n    data: F,\n    hasExpand: !!d,\n    hasBulkActions: $,\n    isRowSelectable: g,\n    onSelect: B,\n    resource: b,\n    selectedIds: L,\n    setSort: _\n  }, a), Ym(r, {\n    expand: d,\n    rowClick: P,\n    data: F,\n    hasBulkActions: $,\n    hover: u,\n    onToggleItem: D,\n    resource: b,\n    rowStyle: T,\n    selectedIds: L,\n    isRowSelectable: g\n  }, a)))));\n}),\n    Ym = n((e, t, o) => Jm(e) ? oI(e, t, o) : rI(e, t, o), \"createOrCloneElement\");\nto.propTypes = {\n  body: Q.oneOfType([Q.element, Q.elementType]),\n  bulkActionButtons: Q.oneOfType([Q.bool, Q.element]),\n  children: Q.node.isRequired,\n  className: Q.string,\n  sort: Q.exact({\n    field: Q.string,\n    order: Q.string\n  }),\n  data: Q.arrayOf(Q.any),\n  empty: Q.element,\n  expand: Q.oneOfType([Q.element, Q.elementType]),\n  header: Q.oneOfType([Q.element, Q.elementType]),\n  hover: Q.bool,\n  isLoading: Q.bool,\n  onSelect: Q.func,\n  onToggleItem: Q.func,\n  resource: Q.string,\n  rowClick: Q.oneOfType([Q.string, Q.func]),\n  rowStyle: Q.func,\n  selectedIds: Q.arrayOf(Q.any),\n  setSort: Q.func,\n  total: Q.number,\n  isRowSelectable: Q.func,\n  isRowExpandable: Q.func,\n  expandSingle: Q.bool\n};\nvar fI = [\"isRequired\", \"setFilter\", \"setPagination\", \"limitChoicesToValue\", \"translateChoice\", \"field\", \"fieldState\", \"formState\"],\n    gI = n(e => Object.keys(lI(e)).filter(t => !fI.includes(t)).reduce((t, o) => S(i({}, t), {\n  [o]: e[o]\n}), {}), \"sanitizeRestProps\");\nto.displayName = \"Datagrid\";\nl();\nimport * as Hs from \"react\";\nimport { Children as TF } from \"react\";\nimport Nl from \"prop-types\";\nl();\nimport * as gr from \"react\";\nimport { useEffect as xl, useCallback as CI, useContext as vI } from \"react\";\nimport wo from \"prop-types\";\nimport { styled as II } from \"@mui/material/styles\";\nimport { useListContext as td, useResourceContext as FI } from \"ra-core\";\nimport { FormProvider as SI, useForm as EI, useFormContext as NI } from \"react-hook-form\";\nimport BI from \"lodash/set\";\nimport LI from \"lodash/unset\";\nimport Rn from \"lodash/get\";\nimport od from \"lodash/cloneDeep\";\nl();\nimport * as ko from \"react\";\nimport { styled as yI } from \"@mui/material/styles\";\nimport hl from \"prop-types\";\nimport bI from \"@mui/material/IconButton\";\nimport RI from \"@mui/icons-material/HighlightOff\";\nimport Zm from \"clsx\";\nimport { useResourceContext as hI, useTranslate as TI } from \"ra-core\";\nvar Tl = n(e => {\n  let {\n    filterElement: t,\n    handleHide: o,\n    className: r\n  } = e,\n      s = hI(e),\n      a = TI();\n  return ko.createElement(PI, {\n    \"data-source\": t.props.source,\n    className: Zm(\"filter-field\", r)\n  }, !t.props.alwaysOn && ko.createElement(bI, {\n    className: Zm(\"hide-filter\", Ds.hideButton),\n    onClick: o,\n    \"data-key\": t.props.source,\n    title: a(\"ra.action.remove_filter\"),\n    size: \"small\"\n  }, ko.createElement(RI, null)), ko.cloneElement(t, {\n    resource: s,\n    record: xI,\n    size: \"small\",\n    helperText: !1,\n    defaultValue: void 0\n  }), ko.createElement(\"div\", {\n    className: Ds.spacer\n  }, \"\\xA0\"));\n}, \"FilterFormInput\");\nTl.propTypes = {\n  filterElement: hl.node,\n  handleHide: hl.func,\n  resource: hl.string\n};\nvar Pl = \"RaFilterFormInput\",\n    Ds = {\n  spacer: `${Pl}-spacer`,\n  hideButton: `${Pl}-hideButton`\n},\n    PI = yI(\"div\", {\n  name: Pl,\n  overridesResolver: (e, t) => t.root\n})(_ref47 => {\n  let {\n    theme: e\n  } = _ref47;\n  return {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    pointerEvents: \"auto\",\n    [`& .${Ds.spacer}`]: {\n      width: e.spacing(2)\n    },\n    [`& .${Ds.hideButton}`]: {\n      marginBottom: e.spacing(1)\n    }\n  };\n}),\n    xI = {};\nl();\nimport * as ed from \"react\";\nvar nt = ed.createContext(void 0);\nvar yr = n(e => {\n  let u = e,\n      {\n    defaultValues: t,\n    filters: o\n  } = u,\n      r = f(u, [\"defaultValues\", \"filters\"]),\n      {\n    setFilters: s,\n    displayedFilters: a,\n    filterValues: p\n  } = td(e),\n      c = vI(nt) || o,\n      d = AI(t || p, c),\n      m = EI({\n    defaultValues: d\n  });\n  return xl(() => {\n    let g = DI(m.getValues(), p);\n    m.reset(g);\n  }, [p, m]), xl(() => {\n    let g = m.watch(async (y, _ref48) => {\n      let {\n        name: b,\n        type: P\n      } = _ref48;\n      if (await m.trigger()) if (Rn(y, b) === \"\") {\n        let C = od(y);\n        LI(C, b), s(C, a);\n      } else s(y, a);\n    });\n    return () => g.unsubscribe();\n  }, [a, m, s]), gr.createElement(SI, i({}, m), gr.createElement(rd, i({\n    onSubmit: $I,\n    filters: c\n  }, r)));\n}, \"FilterForm\"),\n    rd = n(e => {\n  let u = e,\n      {\n    className: t,\n    filters: o\n  } = u,\n      r = f(u, [\"className\", \"filters\"]),\n      s = FI(e),\n      a = NI(),\n      {\n    displayedFilters: p = {},\n    hideFilter: c\n  } = td(e);\n  xl(() => {\n    o.forEach(g => {\n      if (g.props.alwaysOn && g.props.defaultValue) throw new Error(\"Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.\");\n    });\n  }, [o]);\n  let d = n(() => {\n    let g = a.getValues();\n    return o.filter(y => {\n      let b = Rn(g, y.props.source);\n      return y.props.alwaysOn || p[y.props.source] || b !== \"\" && typeof b != \"undefined\";\n    });\n  }, \"getShownFilters\"),\n      m = CI(g => c(g.currentTarget.dataset.key), [c]);\n  return gr.createElement(OI, S(i({\n    className: t\n  }, wI(r)), {\n    onSubmit: kI\n  }), d().map(g => gr.createElement(Tl, {\n    key: g.props.source,\n    filterElement: g,\n    handleHide: m,\n    resource: s\n  })), gr.createElement(\"div\", {\n    className: sd.clearFix\n  }));\n}, \"FilterFormBase\"),\n    kI = n(e => (e.preventDefault(), !1), \"handleSubmit\");\nrd.propTypes = {\n  resource: wo.string,\n  filters: wo.arrayOf(wo.node).isRequired,\n  displayedFilters: wo.object,\n  hideFilter: wo.func,\n  initialValues: wo.object,\n  className: wo.string\n};\nvar wI = n(c => {\n  var d = c,\n      {\n    displayedFilters: e,\n    filterValues: t,\n    hasCreate: o,\n    hideFilter: r,\n    setFilters: s,\n    resource: a\n  } = d,\n      p = f(d, [\"displayedFilters\", \"filterValues\", \"hasCreate\", \"hideFilter\", \"setFilters\", \"resource\"]);\n  return p;\n}, \"sanitizeRestProps\"),\n    AI = n((e, t) => i(i({}, t.filter(o => o.props.alwaysOn && o.props.defaultValue).reduce((o, r) => BI(i({}, o), r.props.source, r.props.defaultValue), {})), e), \"mergeInitialValuesWithDefaultValues\"),\n    $I = n(() => {}, \"handleFormSubmit\"),\n    nd = \"RaFilterForm\",\n    sd = {\n  clearFix: `${nd}-clearFix`\n},\n    OI = II(\"form\", {\n  name: nd,\n  overridesResolver: (e, t) => t.root\n})(_ref49 => {\n  let {\n    theme: e\n  } = _ref49;\n  return {\n    marginTop: e.spacing(-.5),\n    marginBottom: e.spacing(.5),\n    minHeight: e.spacing(8),\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\",\n    pointerEvents: \"none\",\n    [`& .${sd.clearFix}`]: {\n      clear: \"right\"\n    },\n    \"& .MuiFormHelperText-root\": {\n      display: \"none\"\n    }\n  };\n}),\n    DI = n((e, t) => {\n  var o;\n  return Object.keys(e).reduce((r, s) => (r[s] = ad(e, s, t), r), (o = od(t)) != null ? o : {});\n}, \"getFilterFormValues\"),\n    ad = n((e, t, o) => e[t] === void 0 || e[t] === null ? \"\" : Array.isArray(e[t]) ? Rn(o, t, \"\") : e[t] instanceof Date ? Rn(o, t, \"\") : typeof e[t] == \"object\" ? Object.keys(e[t]).reduce((r, s) => {\n  var a;\n  return r[s] = ad(e[t], s, (a = (o || {})[t]) != null ? a : {}), r;\n}, {}) : Rn(o, t, \"\"), \"getInputValue\");\nl();\nimport * as ct from \"react\";\nimport { useState as Il, useCallback as Fl, useRef as aF, useContext as iF } from \"react\";\nimport Ao from \"prop-types\";\nimport { Menu as lF, MenuItem as Sl, styled as pF } from \"@mui/material\";\nimport cF from \"@mui/icons-material/FilterList\";\nimport mF from \"lodash/get\";\nimport El from \"lodash/isEqual\";\nimport { useListContext as dF, useResourceContext as uF, useTranslate as fF } from \"ra-core\";\nimport { stringify as gF } from \"query-string\";\nimport { useNavigate as yF } from \"react-router\";\nl();\nimport * as Cl from \"react\";\nimport { forwardRef as MI, useCallback as VI } from \"react\";\nimport Ms from \"prop-types\";\nimport _I from \"@mui/material/MenuItem\";\nimport { FieldTitle as HI, useResourceContext as zI } from \"ra-core\";\nvar vl = MI((e, t) => {\n  let {\n    filter: o,\n    onShow: r,\n    autoFocus: s\n  } = e,\n      a = zI(e),\n      p = VI(() => {\n    r({\n      source: o.props.source,\n      defaultValue: o.props.defaultValue\n    });\n  }, [o.props.defaultValue, o.props.source, r]);\n  return Cl.createElement(_I, {\n    className: \"new-filter-item\",\n    \"data-key\": o.props.source,\n    \"data-default-value\": o.props.defaultValue,\n    key: o.props.source,\n    onClick: p,\n    autoFocus: s,\n    ref: t,\n    disabled: o.props.disabled\n  }, Cl.createElement(HI, {\n    label: o.props.label,\n    source: o.props.source,\n    resource: a\n  }));\n});\nvl.propTypes = {\n  filter: Ms.element.isRequired,\n  onShow: Ms.func.isRequired,\n  resource: Ms.string,\n  autoFocus: Ms.bool\n};\nl();\nimport { useStore as WI } from \"ra-core\";\nvar oo = n(e => WI(`${e}.savedQueries`, []), \"useSavedQueries\"),\n    ro = n(e => Array.isArray(e) ? e.filter(t => id(t)) : [], \"extractValidSavedQueries\"),\n    IG = n(e => {\n  if (Array.isArray(e) && e.every(t => id(t))) return !0;\n}, \"areValidSavedQueries\"),\n    id = n(e => {\n  var t, o;\n  return !!(e.label && typeof e.label == \"string\" && e.value && typeof Array.isArray(e.value.displayedFilters) && typeof e.value.perPage == \"number\" && typeof ((t = e.value.sort) == null ? void 0 : t.field) == \"string\" && typeof ((o = e.value.sort) == null ? void 0 : o.order) == \"string\" && typeof e.value.filter == \"object\");\n}, \"isValidSavedQuery\");\nl();\nimport * as _t from \"react\";\nimport { useState as qI } from \"react\";\nimport { useListContext as jI, useTranslate as UI } from \"ra-core\";\nimport { Button as ld, Dialog as XI, DialogActions as QI, DialogContent as GI, DialogTitle as JI, TextField as KI } from \"@mui/material\";\nvar Vs = n(_ref50 => {\n  let {\n    open: e,\n    onClose: t\n  } = _ref50;\n  let o = UI(),\n      {\n    resource: r,\n    filterValues: s,\n    displayedFilters: a,\n    sort: p,\n    perPage: c\n  } = jI(),\n      [d, m] = oo(r),\n      [u, g] = qI(\"\"),\n      y = n(T => {\n    g(T.target.value);\n  }, \"handleQueryNameChange\"),\n      b = n(T => {\n    T.preventDefault(), P();\n  }, \"handleFormSubmit\"),\n      P = n(() => {\n    let T = {\n      label: u,\n      value: {\n        filter: s,\n        sort: p,\n        perPage: c,\n        displayedFilters: a\n      }\n    },\n        C = ro(d);\n    m(C.concat(T)), g(\"\"), t();\n  }, \"addQuery\");\n  return _t.createElement(XI, {\n    open: e,\n    onClose: t,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, _t.createElement(JI, {\n    id: \"form-dialog-title\"\n  }, o(\"ra.saved_queries.new_dialog_title\", {\n    _: \"Save current query as\"\n  })), _t.createElement(GI, null, _t.createElement(\"form\", {\n    onSubmit: b\n  }, _t.createElement(KI, {\n    autoFocus: !0,\n    margin: \"dense\",\n    id: \"name\",\n    label: o(\"ra.saved_queries.query_name\", {\n      _: \"Query name\"\n    }),\n    fullWidth: !0,\n    value: u,\n    onChange: y\n  }))), _t.createElement(QI, null, _t.createElement(ld, {\n    onClick: t\n  }, o(\"ra.action.cancel\")), _t.createElement(ld, {\n    onClick: P,\n    color: \"primary\"\n  }, o(\"ra.action.save\"))));\n}, \"AddSavedQueryDialog\");\nl();\nimport * as no from \"react\";\nimport YI from \"lodash/isEqual\";\nimport { useListContext as ZI, useTranslate as eF } from \"ra-core\";\nimport { Button as pd, Dialog as tF, DialogActions as oF, DialogContent as rF, DialogContentText as nF, DialogTitle as sF } from \"@mui/material\";\n\nvar _s = n(_ref51 => {\n  let {\n    open: e,\n    onClose: t\n  } = _ref51;\n  let o = eF(),\n      {\n    resource: r,\n    filterValues: s,\n    sort: a,\n    perPage: p,\n    displayedFilters: c\n  } = ZI(),\n      [d, m] = oo(r),\n      u = n(() => {\n    let g = {\n      filter: s,\n      sort: a,\n      perPage: p,\n      displayedFilters: c\n    },\n        y = ro(d),\n        b = y.findIndex(P => YI(P.value, g));\n    m([...y.slice(0, b), ...y.slice(b + 1)]), t();\n  }, \"removeQuery\");\n  return no.createElement(tF, {\n    open: e,\n    onClose: t,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, no.createElement(sF, {\n    id: \"alert-dialog-title\"\n  }, o(\"ra.saved_queries.remove_dialog_title\", {\n    _: \"Remove saved query?\"\n  })), no.createElement(rF, null, no.createElement(nF, null, o(\"ra.saved_queries.remove_message\", {\n    _: \"Are you sure you want to remove that item from your list of saved queries?\"\n  }))), no.createElement(oF, null, no.createElement(pd, {\n    onClick: t\n  }, o(\"ra.action.cancel\")), no.createElement(pd, {\n    onClick: u,\n    color: \"primary\",\n    autoFocus: !0\n  }, o(\"ra.action.confirm\"))));\n}, \"RemoveSavedQueryDialog\");\n\nvar $o = n(e => {\n  let X = e,\n      {\n    filters: t,\n    className: o\n  } = X,\n      r = f(X, [\"filters\", \"className\"]),\n      s = iF(nt) || t,\n      a = uF(e),\n      p = fF(),\n      [c] = oo(a),\n      d = yF(),\n      {\n    displayedFilters: m = {},\n    filterValues: u,\n    perPage: g,\n    showFilter: y,\n    sort: b\n  } = dF(e),\n      P = !El(u, {}),\n      T = ro(c),\n      C = T.some(w => El(w.value, {\n    filter: u,\n    sort: b,\n    perPage: g,\n    displayedFilters: m\n  })),\n      [x, I] = Il(!1),\n      v = aF();\n  if (s === void 0) throw new Error(\"FilterButton requires filters prop to be set\");\n\n  let N = s.filter(w => !w.props.alwaysOn && !m[w.props.source] && typeof mF(u, w.props.source) == \"undefined\"),\n      F = Fl(w => {\n    w.preventDefault(), I(!0), v.current = w.currentTarget;\n  }, [v, I]),\n      E = Fl(() => {\n    I(!1);\n  }, [I]),\n      B = Fl(_ref52 => {\n    let {\n      source: w,\n      defaultValue: M\n    } = _ref52;\n    y(w, M === \"\" ? void 0 : M), I(!1);\n  }, [y, I]),\n      [k, L] = Il(!1),\n      _ = n(() => {\n    L(!1);\n  }, \"hideAddSavedQueryDialog\"),\n      H = n(() => {\n    I(!1), L(!0);\n  }, \"showAddSavedQueryDialog\"),\n      [$, W] = Il(!1),\n      O = n(() => {\n    W(!1);\n  }, \"hideRemoveSavedQueryDialog\"),\n      D = n(() => {\n    I(!1), W(!0);\n  }, \"showRemoveSavedQueryDialog\");\n\n  return ct.createElement(hF, i({\n    className: o\n  }, bF(r)), ct.createElement(j, {\n    className: \"add-filter\",\n    label: \"ra.action.add_filter\",\n    \"aria-haspopup\": \"true\",\n    onClick: F\n  }, ct.createElement(cF, null)), ct.createElement(lF, {\n    open: x,\n    anchorEl: v.current,\n    onClose: E\n  }, N.map((w, M) => ct.createElement(vl, {\n    key: w.props.source,\n    filter: w,\n    resource: a,\n    onShow: B,\n    autoFocus: M === 0\n  })), T.map((w, M) => El(w.value, {\n    filter: u,\n    sort: b,\n    perPage: g,\n    displayedFilters: m\n  }) ? ct.createElement(Sl, {\n    onClick: D,\n    key: M\n  }, p(\"ra.saved_queries.remove_label_with_name\", {\n    _: 'Remove query \"%{name}\"',\n    name: w.label\n  })) : ct.createElement(Sl, {\n    onClick: () => {\n      d({\n        search: gF({\n          filter: JSON.stringify(w.value.filter),\n          sort: w.value.sort.field,\n          order: w.value.sort.order,\n          page: 1,\n          perPage: w.value.perPage,\n          displayedFilters: JSON.stringify(w.value.displayedFilters)\n        })\n      }), I(!1);\n    },\n    key: M\n  }, w.label)), P && !C ? ct.createElement(Sl, {\n    onClick: H\n  }, p(\"ra.saved_queries.new_label\", {\n    _: \"Save current query...\"\n  })) : null), ct.createElement(Vs, {\n    open: k,\n    onClose: _\n  }), ct.createElement(_s, {\n    open: $,\n    onClose: O\n  }));\n}, \"FilterButton\"),\n    bF = n(s => {\n  var a = s,\n      {\n    displayedFilters: e = null,\n    filterValues: t = null,\n    showFilter: o = null\n  } = a,\n      r = f(a, [\"displayedFilters\", \"filterValues\", \"showFilter\"]);\n  return r;\n}, \"sanitizeRestProps\");\n$o.propTypes = {\n  resource: Ao.string,\n  filters: Ao.arrayOf(Ao.node),\n  displayedFilters: Ao.object,\n  filterValues: Ao.object,\n  showFilter: Ao.func,\n  className: Ao.string\n};\nvar RF = \"RaFilterButton\",\n    hF = pF(\"div\", {\n  name: RF,\n  overridesResolver: (e, t) => t.root\n})(_ref53 => {\n  let {\n    theme: e\n  } = _ref53;\n  return {\n    display: \"inline-block\"\n  };\n});\nvar PF = n(e => {\n  let {\n    children: t\n  } = e,\n      o = n(() => Hs.createElement($o, {\n    className: md.button\n  }), \"renderButton\"),\n      r = n(() => Hs.createElement(yr, {\n    className: md.form\n  }), \"renderForm\");\n  return Hs.createElement(nt.Provider, {\n    value: TF.toArray(t)\n  }, e.context === \"button\" ? o() : r());\n}, \"Filter\");\nPF.propTypes = {\n  children: Nl.node,\n  classes: Nl.object,\n  context: Nl.oneOf([\"form\", \"button\"])\n};\nvar cd = \"RaFilter\",\n    md = {\n  button: `${cd}-button`,\n  form: `${cd}-form`\n};\nl();\nimport * as br from \"react\";\nimport { Box as Bl, List as xF, Typography as CF } from \"@mui/material\";\nimport { useTranslate as vF } from \"ra-core\";\nvar dd = n(e => {\n  let p = e,\n      {\n    label: t,\n    icon: o,\n    children: r\n  } = p,\n      s = f(p, [\"label\", \"icon\", \"children\"]),\n      a = vF();\n  return br.createElement(Bl, i({}, s), br.createElement(Bl, {\n    mt: 2,\n    display: \"flex\",\n    alignItems: \"center\"\n  }, br.createElement(Bl, {\n    mr: 1\n  }, o), br.createElement(CF, {\n    variant: \"overline\"\n  }, a(t))), br.createElement(xF, {\n    dense: !0,\n    disablePadding: !0\n  }, r));\n}, \"FilterList\");\nl();\nimport * as Oo from \"react\";\nimport { styled as IF } from \"@mui/material/styles\";\nimport { memo as FF, isValidElement as SF } from \"react\";\nimport { IconButton as EF, ListItem as NF, ListItemButton as BF, ListItemText as LF, ListItemSecondaryAction as kF } from \"@mui/material\";\nimport wF from \"@mui/icons-material/CancelOutlined\";\nimport { useTranslate as AF, useListFilterContext as $F, shallowEqual as OF } from \"ra-core\";\nimport DF from \"lodash/matches\";\nimport MF from \"lodash/pickBy\";\n\nvar VF = n((e, t) => e.label === t.label && OF(e.value, t.value), \"arePropsEqual\"),\n    v5 = FF(e => {\n  let g = e,\n      {\n    label: t,\n    value: o\n  } = g,\n      r = f(g, [\"label\", \"value\"]),\n      {\n    filterValues: s,\n    setFilters: a\n  } = $F(),\n      p = AF(),\n      c = DF(MF(o, y => typeof y != \"undefined\"))(s),\n      d = n(() => {\n    a(i(i({}, s), o), null, !1);\n  }, \"addFilter\"),\n      m = n(() => {\n    let y = Object.keys(o),\n        b = Object.keys(s).reduce((P, T) => y.includes(T) ? P : S(i({}, P), {\n      [T]: s[T]\n    }), {});\n    a(b, null, !1);\n  }, \"removeFilter\"),\n      u = n(() => c ? m() : d(), \"toggleFilter\");\n  return Oo.createElement(_F, i({\n    onClick: u,\n    selected: c,\n    disablePadding: !0\n  }, r), Oo.createElement(BF, {\n    disableGutters: !0,\n    className: zs.listItemButton\n  }, Oo.createElement(LF, {\n    primary: SF(t) ? t : p(t, {\n      _: t\n    }),\n    className: zs.listItemText,\n    \"data-selected\": c ? \"true\" : \"false\"\n  }), c && Oo.createElement(kF, null, Oo.createElement(EF, {\n    size: \"small\",\n    onClick: u\n  }, Oo.createElement(wF, null)))));\n}, VF),\n    Ll = \"RaFilterListItem\",\n    zs = {\n  listItemButton: `${Ll}-listItemButton`,\n  listItemText: `${Ll}-listItemText`\n},\n    _F = IF(NF, {\n  name: Ll,\n  overridesResolver: (e, t) => t.root\n})(_ref54 => {\n  let {\n    theme: e\n  } = _ref54;\n  return {\n    [`& .${zs.listItemButton}`]: {\n      paddingRight: \"2em\",\n      paddingLeft: \"2em\"\n    },\n    [`& .${zs.listItemText}`]: {\n      margin: 0\n    }\n  };\n});\n\nl();\nimport * as hn from \"react\";\nimport { memo as HF, useMemo as zF } from \"react\";\nimport { InputAdornment as WF } from \"@mui/material\";\nimport qF from \"@mui/icons-material/Search\";\nimport { Form as jF, useTranslate as UF, useListFilterContext as XF } from \"ra-core\";\nvar k5 = HF(e => {\n  let g = e,\n      {\n    source: t = \"q\",\n    variant: o = \"filled\"\n  } = g,\n      r = f(g, [\"source\", \"variant\"]),\n      {\n    filterValues: s,\n    setFilters: a\n  } = XF(),\n      p = UF(),\n      c = n(y => {\n    if (y.target) a(S(i({}, s), {\n      [t]: y.target.value\n    }), null);else {\n      let b = s,\n          {\n        [t]: P\n      } = b,\n          T = f(b, [rc(t)]);\n      a(T, null);\n    }\n  }, \"handleChange\"),\n      d = zF(() => ({\n    [t]: s[t]\n  }), [s, t]),\n      m = n(() => {}, \"onSubmit\"),\n      u = p(\"ra.action.search\");\n  return hn.createElement(jF, {\n    defaultValues: d,\n    onSubmit: m\n  }, hn.createElement(Ee, i(i({\n    resettable: !0,\n    helperText: !1,\n    source: t,\n    InputProps: {\n      endAdornment: hn.createElement(WF, {\n        position: \"end\"\n      }, hn.createElement(qF, {\n        color: \"disabled\"\n      }))\n    },\n    onChange: c,\n    size: \"small\"\n  }, o === \"outlined\" ? {\n    variant: \"outlined\",\n    label: u\n  } : {\n    placeholder: u,\n    label: !1,\n    hiddenLabel: !0\n  }), r)));\n});\nl();\nimport * as Do from \"react\";\nimport { useState as QF } from \"react\";\nimport { IconButton as GF } from \"@mui/material\";\nimport JF from \"@mui/icons-material/AddCircleOutline\";\nimport { useTranslate as KF } from \"ra-core\";\nvar ud = n(e => {\n  let [t, o] = QF(!1),\n      r = n(() => {\n    o(!0);\n  }, \"handleOpen\"),\n      s = n(() => {\n    o(!1);\n  }, \"handleClose\"),\n      a = KF();\n  return Do.createElement(Do.Fragment, null, Do.createElement(GF, i({\n    \"aria-label\": a(\"ra.saved_queries.new_label\", {\n      _: \"Save current query...\"\n    }),\n    size: \"small\",\n    onClick: r\n  }, e), Do.createElement(JF, null)), Do.createElement(Vs, {\n    open: t,\n    onClose: s\n  }));\n}, \"AddSavedQueryIconButton\");\nl();\nimport * as Mo from \"react\";\nimport { useState as YF } from \"react\";\nimport { IconButton as ZF } from \"@mui/material\";\nimport eS from \"@mui/icons-material/RemoveCircleOutline\";\nimport { useTranslate as tS } from \"ra-core\";\nvar fd = n(e => {\n  let [t, o] = YF(!1),\n      r = n(() => {\n    o(!1);\n  }, \"handleConfirmationClose\"),\n      s = n(() => {\n    o(!0);\n  }, \"handleRemoveQueryClick\"),\n      a = tS();\n  return Mo.createElement(Mo.Fragment, null, Mo.createElement(ZF, i({\n    \"aria-label\": a(\"ra.saved_queries.remove_label\", {\n      _: \"Remove saved query\"\n    }),\n    size: \"small\",\n    onClick: s\n  }, e), Mo.createElement(eS, null)), Mo.createElement(_s, {\n    open: t,\n    onClose: r\n  }));\n}, \"RemoveSavedQueryIconButton\");\nl();\nimport * as so from \"react\";\nimport { styled as fS, Tooltip as gS } from \"@mui/material\";\nimport yS from \"@mui/icons-material/BookmarkBorder\";\nimport bS from \"@mui/icons-material/HelpOutline\";\nimport { useListContext as RS, useTranslate as hS } from \"ra-core\";\nimport Rd from \"lodash/isEqual\";\nl();\nimport * as Vo from \"react\";\nimport { memo as oS } from \"react\";\nimport { IconButton as rS, ListItem as nS, ListItemButton as sS, ListItemText as aS, ListItemSecondaryAction as iS, styled as lS } from \"@mui/material\";\nimport pS from \"@mui/icons-material/CancelOutlined\";\nimport gd from \"lodash/isEqual\";\nimport { useNavigate as cS } from \"react-router-dom\";\nimport { stringify as yd } from \"query-string\";\nimport { useListContext as mS } from \"ra-core\";\nvar dS = n((e, t) => e.label === t.label && gd(e.value, t.value), \"arePropsEqual\"),\n    bd = oS(e => {\n  let {\n    className: t,\n    label: o,\n    sx: r,\n    value: s\n  } = e,\n      {\n    filterValues: a,\n    sort: p,\n    perPage: c,\n    displayedFilters: d\n  } = mS(),\n      m = cS(),\n      u = gd(s, {\n    filter: a,\n    sort: p,\n    perPage: c,\n    displayedFilters: d\n  }),\n      g = n(() => {\n    m({\n      search: yd({\n        filter: JSON.stringify(s.filter),\n        sort: s.sort.field,\n        order: s.sort.order,\n        page: 1,\n        perPage: s.perPage,\n        displayedFilters: s.displayedFilters\n      })\n    });\n  }, \"addFilter\"),\n      y = n(() => {\n    m({\n      search: yd({\n        filter: JSON.stringify({})\n      })\n    });\n  }, \"removeFilter\"),\n      b = n(() => u ? y() : g(), \"toggleFilter\");\n  return Vo.createElement(uS, {\n    onClick: b,\n    selected: u,\n    className: t,\n    sx: r,\n    disablePadding: !0\n  }, Vo.createElement(sS, {\n    disableGutters: !0,\n    className: Ws.listItemButton\n  }, Vo.createElement(aS, {\n    primary: o,\n    className: Ws.listItemText\n  }), u && Vo.createElement(iS, null, Vo.createElement(rS, {\n    size: \"small\",\n    onClick: b\n  }, Vo.createElement(pS, null)))));\n}, dS),\n    kl = \"RaSavedQueryFilterListItem\",\n    Ws = {\n  listItemButton: `${kl}-listItemButton`,\n  listItemText: `${kl}-listItemText`\n},\n    uS = lS(nS, {\n  name: kl,\n  overridesResolver: (e, t) => t.root\n})(() => ({\n  [`& .${Ws.listItemButton}`]: {\n    paddingRight: \"2em\",\n    paddingLeft: \"2em\"\n  },\n  [`& .${Ws.listItemText}`]: {\n    margin: 0\n  }\n}));\nvar y6 = n(_ref55 => {\n  let {\n    icon: e = PS\n  } = _ref55;\n  let t = hS(),\n      {\n    resource: o,\n    filterValues: r,\n    displayedFilters: s,\n    sort: a,\n    perPage: p\n  } = RS(),\n      [c] = oo(o),\n      d = ro(c),\n      m = d.some(g => Rd(g.value, {\n    filter: r,\n    sort: a,\n    perPage: p,\n    displayedFilters: s\n  })),\n      u = !Rd(r, {});\n  return so.createElement(TS, {\n    label: \"ra.saved_queries.label\",\n    icon: e\n  }, m ? so.createElement(fd, {\n    className: Pn.floatingIcon\n  }) : u ? so.createElement(ud, {\n    className: Pn.floatingIcon\n  }) : so.createElement(gS, {\n    title: t(\"ra.saved_queries.help\"),\n    className: Pn.floatingTooltip\n  }, so.createElement(bS, null)), d.map((g, y) => so.createElement(bd, {\n    label: g.label,\n    value: g.value,\n    key: y\n  })));\n}, \"SavedQueriesList\"),\n    Tn = \"RaSavedQueriesList\",\n    Pn = {\n  floatingIcon: `${Tn}-floatingIcon`,\n  floatingTooltip: `${Tn}-floatingTooltip`,\n  titleContainer: `${Tn}-titleContainer`,\n  titleIcon: `${Tn}-titleIcon`\n},\n    TS = fS(dd, {\n  name: Tn,\n  overridesResolver: (e, t) => t.root\n})(_ref56 => {\n  let {\n    theme: e\n  } = _ref56;\n  return {\n    [`& .${Pn.floatingIcon}`]: {\n      position: \"absolute\",\n      top: \"-1.8em\",\n      right: 0\n    },\n    [`& .${Pn.floatingTooltip}`]: {\n      position: \"absolute\",\n      top: \"-1.2em\",\n      right: 3,\n      color: e.palette.action.disabled\n    }\n  };\n}),\n    PS = so.createElement(yS, null);\nl();\nimport * as xn from \"react\";\nimport { useCallback as js, useMemo as kS, memo as wS } from \"react\";\nimport $l from \"prop-types\";\nimport { TablePagination as Pd, Toolbar as AS, useMediaQuery as $S } from \"@mui/material\";\nimport { useTranslate as OS, useListPaginationContext as DS, sanitizeListRestProps as xd, ComponentPropType as MS } from \"ra-core\";\nl();\nimport * as qs from \"react\";\nimport { memo as xS } from \"react\";\nimport { styled as CS } from \"@mui/material/styles\";\nimport { Pagination as vS } from \"@mui/material\";\nimport Rr from \"prop-types\";\nimport { useTranslate as IS } from \"ra-core\";\nvar wl = xS(e => {\n  let g = e,\n      {\n    page: t,\n    rowsPerPage: o,\n    count: r,\n    onPageChange: s,\n    size: a = \"small\",\n    className: p\n  } = g,\n      c = f(g, [\"page\", \"rowsPerPage\", \"count\", \"onPageChange\", \"size\", \"className\"]),\n      d = IS(),\n      m = Math.ceil(r / o) || 1;\n  if (m === 1) return qs.createElement(hd, {\n    className: p\n  });\n  let u = n((y, b, P) => y === \"page\" ? P ? d(\"ra.navigation.current_page\", {\n    page: b,\n    _: `page ${b}`\n  }) : d(\"ra.navigation.page\", {\n    page: b,\n    _: `Go to page ${b}`\n  }) : d(`ra.navigation.${y}`, {\n    _: `Go to ${y} page`\n  }), \"getItemAriaLabel\");\n  return qs.createElement(hd, {\n    className: p\n  }, qs.createElement(vS, S(i({\n    size: a,\n    count: m,\n    page: t + 1,\n    onChange: (y, b) => s(y, b - 1)\n  }, SS(c)), {\n    getItemAriaLabel: u\n  })));\n});\nwl.propTypes = {\n  count: Rr.number.isRequired,\n  onPageChange: Rr.func.isRequired,\n  page: Rr.number.isRequired,\n  rowsPerPage: Rr.number.isRequired,\n  color: Rr.oneOf([\"primary\", \"secondary\", \"standard\"]),\n  size: Rr.oneOf([\"small\", \"medium\", \"large\"])\n};\nvar FS = \"RaPaginationActions\",\n    hd = CS(\"div\", {\n  name: FS,\n  overridesResolver: (e, t) => t.root\n})(_ref57 => {\n  let {\n    theme: e\n  } = _ref57;\n  return {\n    flexShrink: 0,\n    ml: 4\n  };\n}),\n    SS = n(r => {\n  var s = r,\n      {\n    nextIconButtonProps: e,\n    backIconButtonProps: t\n  } = s,\n      o = f(s, [\"nextIconButtonProps\", \"backIconButtonProps\"]);\n  return o;\n}, \"sanitizeRestProps\");\nl();\nimport * as Al from \"react\";\nimport { memo as ES } from \"react\";\nimport NS from \"@mui/material/CardContent\";\nimport BS from \"@mui/material/Typography\";\nimport { useTranslate as LS } from \"ra-core\";\nvar Td = ES(() => {\n  let e = LS();\n  return Al.createElement(NS, null, Al.createElement(BS, {\n    variant: \"body2\"\n  }, e(\"ra.navigation.no_results\")));\n});\nvar Cn = wS(e => {\n  let N = e,\n      {\n    rowsPerPageOptions: t = _S,\n    actions: o,\n    limit: r = VS\n  } = N,\n      s = f(N, [\"rowsPerPageOptions\", \"actions\", \"limit\"]),\n      {\n    isLoading: a,\n    hasNextPage: p,\n    page: c,\n    perPage: d,\n    total: m,\n    setPage: u,\n    setPerPage: g\n  } = DS(e),\n      y = OS(),\n      b = $S(F => F.breakpoints.down(\"md\")),\n      P = kS(() => m != null ? Math.ceil(m / d) : void 0, [d, m]),\n      T = js((F, E) => {\n    if (F && F.stopPropagation(), E < 0 || E > P - 1) throw new Error(y(\"ra.navigation.page_out_of_boundaries\", {\n      page: E + 1\n    }));\n    u(E + 1);\n  }, [P, u, y]),\n      C = js(F => {\n    g(F.target.value);\n  }, [g]),\n      x = js(_ref58 => {\n    let {\n      from: F,\n      to: E,\n      count: B\n    } = _ref58;\n    return B === -1 && p ? y(\"ra.navigation.partial_page_range_info\", {\n      offsetBegin: F,\n      offsetEnd: E,\n      _: \"%{from}-%{to} of more than %{to}\"\n    }) : y(\"ra.navigation.page_range_info\", {\n      offsetBegin: F,\n      offsetEnd: E,\n      total: B === -1 ? E : B,\n      _: \"%{from}-%{to} of %{count === -1 ? to : count}\"\n    });\n  }, [y, p]),\n      I = js(F => y(`ra.navigation.${F}`, {\n    _: `Go to ${F} page`\n  }), [y]);\n  if (a) return xn.createElement(AS, {\n    variant: \"dense\"\n  });\n  if (m === 0 || c < 1 || m != null && c > P) return r;\n  if (b) return xn.createElement(Pd, i({\n    count: m == null ? -1 : m,\n    rowsPerPage: d,\n    page: c - 1,\n    onPageChange: T,\n    rowsPerPageOptions: HS,\n    component: \"span\",\n    labelDisplayedRows: x\n  }, xd(s)));\n  let v = o || (!a && m != null ? wl : void 0);\n  return xn.createElement(Pd, i({\n    count: m == null ? -1 : m,\n    rowsPerPage: d,\n    page: c - 1,\n    onPageChange: T,\n    onRowsPerPageChange: C,\n    ActionsComponent: v,\n    nextIconButtonProps: {\n      disabled: !p\n    },\n    component: \"span\",\n    labelRowsPerPage: y(\"ra.navigation.page_rows_per_page\"),\n    labelDisplayedRows: x,\n    getItemAriaLabel: I,\n    rowsPerPageOptions: t\n  }, xd(s)));\n});\nCn.propTypes = {\n  actions: MS,\n  limit: $l.element,\n  rowsPerPageOptions: $l.arrayOf($l.number)\n};\nvar VS = xn.createElement(Td, null),\n    _S = [5, 10, 25],\n    HS = [];\nvar US = we.createElement(Cn, null),\n    r4 = n(e => {\n  var E;\n  let N = e,\n      {\n    choices: t,\n    className: o,\n    pagination: r = US,\n    filters: s,\n    source: a,\n    resource: p\n  } = N,\n      c = f(N, [\"choices\", \"className\", \"pagination\", \"filters\", \"source\", \"resource\"]),\n      F = qS({\n    choices: t,\n    resource: p,\n    source: a\n  }),\n      {\n    allChoices: d,\n    availableChoices: m,\n    selectedChoices: u,\n    source: g\n  } = F,\n      y = f(F, [\"allChoices\", \"availableChoices\", \"selectedChoices\", \"source\"]),\n      {\n    field: b,\n    fieldState: P,\n    formState: T\n  } = jS(S(i(i({}, e), y), {\n    source: g\n  })),\n      C = Ol(B => {\n    b.onChange(B);\n  }, [b]),\n      x = Ol(B => {\n    b.value.includes(B) ? b.onChange(b.value.filter(k => k !== B)) : b.onChange([...b.value, B]);\n  }, [b]),\n      I = Ol(() => {\n    b.onChange([]);\n  }, [b]),\n      v = we.useMemo(() => S(i({}, y), {\n    data: m,\n    onSelect: C,\n    onToggleItem: x,\n    onUnselectItems: I,\n    selectedIds: b.value\n  }), [m, y, b, C, x, I]);\n  return we.createElement(\"div\", {\n    className: zS(\"ra-input\", `ra-input-${g}`, o)\n  }, we.createElement(WS, {\n    value: v\n  }, s ? Array.isArray(s) ? we.createElement(nt.Provider, {\n    value: s\n  }, we.createElement(we.Fragment, null, we.createElement(yr, null), we.createElement($o, null))) : we.createElement(we.Fragment, null, Cd(s, {\n    context: \"form\"\n  }), Cd(s, {\n    context: \"button\"\n  })) : null, we.createElement(to, i({}, c)), r !== !1 && r, we.createElement(Z, {\n    touched: P.isTouched || T.isSubmitted,\n    error: (E = P.error) == null ? void 0 : E.message\n  })));\n}, \"DatagridInput\");\nl();\nimport * as Us from \"react\";\nimport vn from \"prop-types\";\nimport XS from \"clsx\";\nimport QS from \"@mui/material/TextField\";\nimport { useInput as GS, FieldTitle as JS } from \"ra-core\";\nvar Dl = n(T => {\n  var C = T,\n      {\n    className: e,\n    defaultValue: t,\n    format: o = ZS,\n    label: r,\n    name: s,\n    source: a,\n    resource: p,\n    helperText: c,\n    margin: d = \"dense\",\n    onBlur: m,\n    onChange: u,\n    parse: g,\n    validate: y,\n    variant: b = \"filled\"\n  } = C,\n      P = f(C, [\"className\", \"defaultValue\", \"format\", \"label\", \"name\", \"source\", \"resource\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"parse\", \"validate\", \"variant\"]);\n  let {\n    field: x,\n    fieldState: I,\n    formState: v,\n    id: N,\n    isRequired: F\n  } = GS(i({\n    defaultValue: t,\n    name: s,\n    format: o,\n    parse: g,\n    onBlur: m,\n    onChange: u,\n    resource: p,\n    source: a,\n    validate: y\n  }, P)),\n      {\n    error: E,\n    invalid: B,\n    isTouched: k\n  } = I,\n      {\n    isSubmitted: L\n  } = v;\n  return Us.createElement(QS, i(S(i({\n    id: N\n  }, x), {\n    className: XS(\"ra-input\", `ra-input-${a}`, e),\n    type: \"date\",\n    size: \"small\",\n    variant: b,\n    margin: d,\n    error: (k || L) && B,\n    helperText: Us.createElement(Z, {\n      touched: k || L,\n      error: E == null ? void 0 : E.message,\n      helperText: c\n    }),\n    label: Us.createElement(JS, {\n      label: r,\n      source: a,\n      resource: p,\n      isRequired: F\n    }),\n    InputLabelProps: YS\n  }), oe(P)));\n}, \"DateInput\");\nDl.propTypes = {\n  label: vn.oneOfType([vn.string, vn.bool]),\n  resource: vn.string,\n  source: vn.string\n};\nvar vd = n(e => {\n  if (!(e instanceof Date) || isNaN(e.getDate())) return \"\";\n  let t = \"00\",\n      o = e.getFullYear().toString(),\n      r = (e.getMonth() + 1).toString(),\n      s = e.getDate().toString();\n  return `${o}-${(t + r).slice(-2)}-${(t + s).slice(-2)}`;\n}, \"convertDateToString\"),\n    KS = /^\\d{4}-\\d{2}-\\d{2}$/,\n    YS = {\n  shrink: !0\n},\n    ZS = n(e => e == null || e === \"\" ? \"\" : e instanceof Date ? vd(e) : KS.test(e) ? e : vd(new Date(e)), \"getStringFromDate\");\nl();\nimport * as Xs from \"react\";\nimport In from \"prop-types\";\nimport eE from \"clsx\";\nimport tE from \"@mui/material/TextField\";\nimport { useInput as oE, FieldTitle as rE } from \"ra-core\";\nvar nE = n(e => new Date(e), \"parseDateTime\"),\n    sE = n(P => {\n  var T = P,\n      {\n    className: e,\n    defaultValue: t,\n    format: o = pE,\n    label: r,\n    helperText: s,\n    margin: a = \"dense\",\n    onBlur: p,\n    onChange: c,\n    source: d,\n    resource: m,\n    parse: u = nE,\n    validate: g,\n    variant: y = \"filled\"\n  } = T,\n      b = f(T, [\"className\", \"defaultValue\", \"format\", \"label\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"source\", \"resource\", \"parse\", \"validate\", \"variant\"]);\n  let {\n    field: C,\n    fieldState: x,\n    formState: I,\n    id: v,\n    isRequired: N\n  } = oE(i({\n    defaultValue: t,\n    format: o,\n    parse: u,\n    onBlur: p,\n    onChange: c,\n    resource: m,\n    source: d,\n    validate: g\n  }, b)),\n      {\n    error: F,\n    invalid: E,\n    isTouched: B\n  } = x,\n      {\n    isSubmitted: k\n  } = I;\n  return Xs.createElement(tE, i(S(i({\n    id: v\n  }, C), {\n    className: eE(\"ra-input\", `ra-input-${d}`, e),\n    type: \"datetime-local\",\n    size: \"small\",\n    variant: y,\n    margin: a,\n    error: (B || k) && E,\n    helperText: Xs.createElement(Z, {\n      touched: B || k,\n      error: F == null ? void 0 : F.message,\n      helperText: s\n    }),\n    label: Xs.createElement(rE, {\n      label: r,\n      source: d,\n      resource: m,\n      isRequired: N\n    }),\n    InputLabelProps: lE\n  }), oe(b)));\n}, \"DateTimeInput\");\nsE.propTypes = {\n  label: In.oneOfType([In.string, In.bool]),\n  resource: In.string,\n  source: In.string\n};\nvar Id = n(function () {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n  return t => (\"0\".repeat(e) + t).slice(-e);\n}, \"leftPad\"),\n    aE = Id(4),\n    Qs = Id(2),\n    Fd = n(e => {\n  if (!(e instanceof Date) || isNaN(e.getDate())) return \"\";\n  let t = aE(e.getFullYear()),\n      o = Qs(e.getMonth() + 1),\n      r = Qs(e.getDate()),\n      s = Qs(e.getHours()),\n      a = Qs(e.getMinutes());\n  return `${t}-${o}-${r}T${s}:${a}`;\n}, \"convertDateToString\"),\n    iE = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/,\n    lE = {\n  shrink: !0\n},\n    pE = n(e => e == null || e === \"\" ? \"\" : e instanceof Date ? Fd(e) : iE.test(e) ? e : Fd(new Date(e)), \"formatDateTime\");\nl();\nimport mt, { Children as Vl, cloneElement as yE, isValidElement as bE } from \"react\";\nimport { styled as RE } from \"@mui/material/styles\";\nimport be from \"prop-types\";\nimport hE from \"clsx\";\nimport { useDropzone as TE } from \"react-dropzone\";\nimport PE from \"@mui/material/FormHelperText\";\nimport { useInput as xE, useTranslate as CE, shallowEqual as vE } from \"ra-core\";\nl();\nimport * as Gs from \"react\";\nimport { styled as cE } from \"@mui/material/styles\";\nimport { useEffect as mE } from \"react\";\nimport Js from \"prop-types\";\nimport dE from \"@mui/icons-material/RemoveCircle\";\nimport uE from \"@mui/material/IconButton\";\nimport { useTranslate as fE } from \"ra-core\";\nvar Ks = n(e => {\n  let c = e,\n      {\n    children: t,\n    className: o,\n    onRemove: r,\n    file: s\n  } = c,\n      a = f(c, [\"children\", \"className\", \"onRemove\", \"file\"]),\n      p = fE();\n  return mE(() => () => {\n    let d = s.rawFile ? s.rawFile.preview : s.preview;\n    d && window.URL.revokeObjectURL(d);\n  }, [s]), Gs.createElement(gE, i({\n    className: o\n  }, a), Gs.createElement(uE, {\n    className: Ys.removeButton,\n    onClick: r,\n    \"aria-label\": p(\"ra.action.delete\"),\n    title: p(\"ra.action.delete\"),\n    size: \"large\"\n  }, Gs.createElement(dE, {\n    className: Ys.removeIcon\n  })), t);\n}, \"FileInputPreview\");\nKs.propTypes = {\n  children: Js.element.isRequired,\n  className: Js.string,\n  file: Js.object,\n  onRemove: Js.func.isRequired\n};\nKs.defaultProps = {\n  file: void 0\n};\nvar Ml = \"RaFileInputPreview\",\n    Ys = {\n  removeButton: `${Ml}-removeButton`,\n  removeIcon: `${Ml}-removeIcon`\n},\n    gE = cE(\"div\", {\n  name: Ml,\n  overridesResolver: (e, t) => t.root\n})(_ref59 => {\n  let {\n    theme: e\n  } = _ref59;\n  return {\n    [`& .${Ys.removeButton}`]: {},\n    [`& .${Ys.removeIcon}`]: {\n      color: e.palette.error.main\n    }\n  };\n});\n\nvar _l = n(e => {\n  let ie = e,\n      {\n    accept: t,\n    children: o,\n    className: r,\n    format: s,\n    helperText: a,\n    inputProps: p,\n    label: c,\n    labelMultiple: d = \"ra.input.file.upload_several\",\n    labelSingle: m = \"ra.input.file.upload_single\",\n    maxSize: u,\n    minSize: g,\n    multiple: y = !1,\n    onDrop: b,\n    onRemove: P,\n    parse: T,\n    placeholder: C,\n    resource: x,\n    source: I,\n    validate: v,\n    validateFileRemoval: N\n  } = ie,\n      F = f(ie, [\"accept\", \"children\", \"className\", \"format\", \"helperText\", \"inputProps\", \"label\", \"labelMultiple\", \"labelSingle\", \"maxSize\", \"minSize\", \"multiple\", \"onDrop\", \"onRemove\", \"parse\", \"placeholder\", \"resource\", \"source\", \"validate\", \"validateFileRemoval\"]),\n      E = CE(),\n      B = n(G => {\n    if (!(G instanceof File)) return G;\n    let {\n      source: le,\n      title: He\n    } = Vl.only(o).props,\n        pe = URL.createObjectURL(G),\n        Bt = {\n      rawFile: G,\n      [le]: pe\n    };\n    return He && (Bt[He] = G.name), Bt;\n  }, \"transformFile\"),\n      k = n(G => G ? Array.isArray(G) ? G.map(B) : B(G) : y ? [] : null, \"transformFiles\"),\n      {\n    id: L,\n    field: {\n      onChange: _,\n      value: H\n    },\n    fieldState: $,\n    formState: {\n      isSubmitted: W\n    },\n    isRequired: O\n  } = xE(i({\n    format: s || k,\n    parse: T || k,\n    source: I,\n    validate: v\n  }, F)),\n      {\n    isTouched: D,\n    error: X\n  } = $,\n      w = H ? Array.isArray(H) ? H : [H] : [],\n      M = n((G, le, He) => {\n    let pe = y ? [...w, ...G] : [...G];\n    _(y ? pe : pe[0]), b && b(G, le, He);\n  }, \"onDrop\"),\n      re = n(G => async () => {\n    if (N) try {\n      await N(G);\n    } catch {\n      return;\n    }\n\n    if (y) {\n      let le = w.filter(He => !vE(He, G));\n\n      _(le);\n    } else _(null);\n\n    P && P(G);\n  }, \"onRemove\"),\n      te = o && bE(Vl.only(o)) ? Vl.only(o) : void 0,\n      {\n    getRootProps: de,\n    getInputProps: ne\n  } = TE(i({\n    accept: t,\n    maxSize: u,\n    minSize: g,\n    multiple: y,\n    onDrop: M\n  }, F));\n  return mt.createElement(IE, i({\n    id: L,\n    label: c,\n    className: hE(\"ra-input\", `ra-input-${I}`, r),\n    source: I,\n    resource: x,\n    isRequired: O\n  }, oe(F)), mt.createElement(mt.Fragment, null, mt.createElement(\"div\", i({}, de({\n    className: It.dropZone,\n    \"data-testid\": \"dropzone\"\n  })), mt.createElement(\"input\", i({\n    id: L\n  }, ne(i({}, p)))), C || (y ? mt.createElement(\"p\", null, E(d)) : mt.createElement(\"p\", null, E(m)))), mt.createElement(PE, null, mt.createElement(Z, {\n    touched: D || W,\n    error: X == null ? void 0 : X.message,\n    helperText: a\n  })), o && mt.createElement(\"div\", {\n    className: \"previews\"\n  }, w.map((G, le) => mt.createElement(Ks, {\n    key: le,\n    file: G,\n    onRemove: re(G),\n    className: It.removeButton\n  }, yE(te, {\n    record: G,\n    className: It.preview\n  }))))));\n}, \"FileInput\");\n\n_l.propTypes = {\n  accept: be.oneOfType([be.string, be.arrayOf(be.string)]),\n  children: be.element,\n  className: be.string,\n  id: be.string,\n  isRequired: be.bool,\n  label: be.string,\n  labelMultiple: be.string,\n  labelSingle: be.string,\n  maxSize: be.number,\n  minSize: be.number,\n  multiple: be.bool,\n  validateFileRemoval: be.func,\n  options: be.object,\n  resource: be.string,\n  source: be.string,\n  placeholder: be.node\n};\nvar Zs = \"RaFileInput\",\n    It = {\n  dropZone: `${Zs}-dropZone`,\n  preview: `${Zs}-preview`,\n  removeButton: `${Zs}-removeButton`\n},\n    IE = RE(ye, {\n  name: Zs,\n  overridesResolver: (e, t) => t.root\n})(_ref60 => {\n  let {\n    theme: e\n  } = _ref60;\n  return {\n    width: \"100%\",\n    [`& .${It.dropZone}`]: {\n      background: e.palette.background.default,\n      cursor: \"pointer\",\n      padding: e.spacing(1),\n      textAlign: \"center\",\n      color: e.palette.getContrastText(e.palette.background.default)\n    },\n    [`& .${It.preview}`]: {},\n    [`& .${It.removeButton}`]: {}\n  };\n});\nl();\nimport * as Sd from \"react\";\nimport { styled as FE } from \"@mui/material/styles\";\nvar X4 = n(e => Sd.createElement(EE, i({\n  labelMultiple: \"ra.input.image.upload_several\",\n  labelSingle: \"ra.input.image.upload_single\"\n}, e)), \"ImageInput\"),\n    SE = \"RaImageInput\",\n    EE = FE(_l, {\n  name: SE,\n  overridesResolver: (e, t) => t.root\n})(_ref61 => {\n  let {\n    theme: e\n  } = _ref61;\n  return {\n    width: \"100%\",\n    [`& .${It.dropZone}`]: {\n      background: e.palette.background.default,\n      cursor: \"pointer\",\n      padding: e.spacing(1),\n      textAlign: \"center\",\n      color: e.palette.getContrastText(e.palette.background.default)\n    },\n    [`& .${It.preview}`]: {\n      display: \"inline-block\"\n    },\n    [`& .${It.removeButton}`]: {\n      display: \"inline-block\",\n      position: \"relative\",\n      float: \"left\",\n      \"& button\": {\n        position: \"absolute\",\n        top: e.spacing(1),\n        right: e.spacing(1),\n        minWidth: e.spacing(2),\n        opacity: 0\n      },\n      \"&:hover button\": {\n        opacity: 1\n      }\n    }\n  };\n});\nl();\nimport * as _o from \"react\";\nimport { styled as NE } from \"@mui/material/styles\";\nimport Ht from \"prop-types\";\nimport BE from \"@mui/material/TextField\";\nimport Hl from \"@mui/material/MenuItem\";\nimport LE from \"clsx\";\nimport { useInput as kE, useTranslate as wE, FieldTitle as AE } from \"ra-core\";\nvar $E = n(e => {\n  let L = e,\n      {\n    className: t,\n    format: o = ME,\n    helperText: r,\n    label: s,\n    margin: a = \"dense\",\n    onBlur: p,\n    onChange: c,\n    parse: d = DE,\n    resource: m,\n    source: u,\n    validate: g,\n    variant: y = \"filled\",\n    nullLabel: b = \"ra.boolean.null\",\n    falseLabel: P = \"ra.boolean.false\",\n    trueLabel: T = \"ra.boolean.true\"\n  } = L,\n      C = f(L, [\"className\", \"format\", \"helperText\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"parse\", \"resource\", \"source\", \"validate\", \"variant\", \"nullLabel\", \"falseLabel\", \"trueLabel\"]),\n      x = wE(),\n      {\n    field: I,\n    fieldState: {\n      error: v,\n      invalid: N,\n      isTouched: F\n    },\n    formState: {\n      isSubmitted: E\n    },\n    id: B,\n    isRequired: k\n  } = kE(i({\n    format: o,\n    parse: d,\n    onBlur: p,\n    onChange: c,\n    resource: m,\n    source: u,\n    validate: g\n  }, C));\n  return _o.createElement(OE, i(S(i({\n    id: B,\n    size: \"small\"\n  }, I), {\n    className: LE(\"ra-input\", `ra-input-${u}`, Nd.input, t),\n    select: !0,\n    margin: a,\n    label: _o.createElement(AE, {\n      label: s,\n      source: u,\n      resource: m,\n      isRequired: k\n    }),\n    error: (F || E) && N,\n    helperText: _o.createElement(Z, {\n      touched: F || E,\n      error: v == null ? void 0 : v.message,\n      helperText: r\n    }),\n    variant: y\n  }), oe(C)), _o.createElement(Hl, {\n    value: \"\"\n  }, x(b)), _o.createElement(Hl, {\n    value: \"false\"\n  }, x(P)), _o.createElement(Hl, {\n    value: \"true\"\n  }, x(T)));\n}, \"NullableBooleanInput\");\n$E.propTypes = {\n  label: Ht.oneOfType([Ht.string, Ht.bool]),\n  options: Ht.object,\n  resource: Ht.string,\n  source: Ht.string,\n  nullLabel: Ht.string,\n  falseLabel: Ht.string,\n  trueLabel: Ht.string\n};\nvar Ed = \"RaNullableBooleanInput\",\n    Nd = {\n  input: `${Ed}-input`\n},\n    OE = NE(BE, {\n  name: Ed,\n  overridesResolver: (e, t) => t.root\n})(_ref62 => {\n  let {\n    theme: e,\n    fullWidth: t\n  } = _ref62;\n  return {\n    [`&.${Nd.input}`]: {\n      width: t ? \"100%\" : e.spacing(16)\n    }\n  };\n}),\n    DE = n(e => e === \"true\" ? !0 : e === \"false\" ? !1 : null, \"getBooleanFromString\"),\n    ME = n(e => e === !0 ? \"true\" : e === !1 ? \"false\" : \"\", \"getStringFromBoolean\");\nl();\nimport * as ea from \"react\";\nimport zt from \"prop-types\";\nimport VE from \"clsx\";\nimport _E from \"@mui/material/TextField\";\nimport { useInput as HE, FieldTitle as zE } from \"ra-core\";\nvar ta = n(I => {\n  var v = I,\n      {\n    className: e,\n    defaultValue: t = \"\",\n    format: o = qE,\n    helperText: r,\n    label: s,\n    margin: a = \"dense\",\n    onBlur: p,\n    onChange: c,\n    parse: d = WE,\n    resource: m,\n    source: u,\n    step: g,\n    min: y,\n    max: b,\n    validate: P,\n    variant: T = \"filled\",\n    inputProps: C\n  } = v,\n      x = f(v, [\"className\", \"defaultValue\", \"format\", \"helperText\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"parse\", \"resource\", \"source\", \"step\", \"min\", \"max\", \"validate\", \"variant\", \"inputProps\"]);\n  let {\n    field: N,\n    fieldState: {\n      error: F,\n      invalid: E,\n      isTouched: B\n    },\n    formState: {\n      isSubmitted: k\n    },\n    id: L,\n    isRequired: _\n  } = HE(i({\n    defaultValue: t,\n    format: o,\n    onBlur: p,\n    onChange: c,\n    parse: d,\n    resource: m,\n    source: u,\n    validate: P\n  }, x)),\n      H = S(i({}, C), {\n    step: g,\n    min: y,\n    max: b\n  });\n  return ea.createElement(_E, i(S(i({\n    id: L\n  }, N), {\n    className: VE(\"ra-input\", `ra-input-${u}`, e),\n    type: \"number\",\n    size: \"small\",\n    variant: T,\n    error: (B || k) && E,\n    helperText: ea.createElement(Z, {\n      touched: B || k,\n      error: F == null ? void 0 : F.message,\n      helperText: r\n    }),\n    label: ea.createElement(zE, {\n      label: s,\n      source: u,\n      resource: m,\n      isRequired: _\n    }),\n    margin: a,\n    inputProps: H\n  }), oe(x)));\n}, \"NumberInput\");\nta.propTypes = {\n  label: zt.oneOfType([zt.string, zt.bool]),\n  options: zt.object,\n  resource: zt.string,\n  source: zt.string,\n  step: zt.oneOfType([zt.string, zt.number])\n};\nta.defaultProps = {\n  options: {},\n  step: \"any\",\n  textAlign: \"right\"\n};\nvar WE = n(e => {\n  let t = parseFloat(e);\n  return isNaN(t) ? null : t;\n}, \"convertStringToNumber\"),\n    qE = n(e => e === null ? \"\" : e.toString(), \"convertNumberToString\");\nl();\nimport * as xr from \"react\";\nimport { useState as eN } from \"react\";\nimport { useTranslate as tN } from \"ra-core\";\nimport { InputAdornment as oN, IconButton as rN } from \"@mui/material\";\nimport nN from \"@mui/icons-material/Visibility\";\nimport sN from \"@mui/icons-material/VisibilityOff\";\nl();\nimport * as oa from \"react\";\nimport Ho from \"prop-types\";\nimport KE from \"clsx\";\nimport { useInput as YE, FieldTitle as ZE } from \"ra-core\";\nl();\nimport * as Ft from \"react\";\nimport { forwardRef as jE, useCallback as zl } from \"react\";\nimport { styled as UE } from \"@mui/material/styles\";\nimport ao from \"prop-types\";\nimport Bd from \"clsx\";\nimport { InputAdornment as Wl, IconButton as Ld, TextField as XE } from \"@mui/material\";\nimport kd from \"@mui/icons-material/Clear\";\nimport { useTranslate as QE } from \"ra-core\";\nvar hr = jE((e, t) => {\n  let _ = e,\n      {\n    clearAlwaysVisible: o,\n    InputProps: r,\n    value: s,\n    resettable: a,\n    disabled: p,\n    variant: c = \"filled\",\n    margin: d = \"dense\",\n    className: m\n  } = _,\n      u = f(_, [\"clearAlwaysVisible\", \"InputProps\", \"value\", \"resettable\", \"disabled\", \"variant\", \"margin\", \"className\"]),\n      g = QE(),\n      {\n    onChange: y,\n    onFocus: b,\n    onBlur: P\n  } = e,\n      T = zl($ => {\n    $.preventDefault(), y(\"\");\n  }, [y]),\n      C = zl($ => {\n    b && b($);\n  }, [b]),\n      x = zl($ => {\n    P && P($);\n  }, [P]),\n      {\n    clearButton: I,\n    clearIcon: v,\n    inputAdornedEnd: N,\n    selectAdornment: F,\n    visibleClearIcon: E\n  } = Pr,\n      H = r || {},\n      {\n    endAdornment: B\n  } = H,\n      k = f(H, [\"endAdornment\"]);\n  if (o && B) throw new Error(\"ResettableTextField cannot display both an endAdornment and a clear button always visible\");\n  let L = n(() => a ? s ? Ft.createElement(Wl, {\n    position: \"end\",\n    classes: {\n      root: e.select ? F : null\n    }\n  }, Ft.createElement(Ld, {\n    className: I,\n    \"aria-label\": g(\"ra.action.clear_input_value\"),\n    title: g(\"ra.action.clear_input_value\"),\n    disableRipple: !0,\n    onClick: T,\n    onMouseDown: GE,\n    disabled: p,\n    size: \"large\"\n  }, Ft.createElement(kd, {\n    className: Bd(v, {\n      [E]: o || s\n    })\n  }))) : o ? Ft.createElement(Wl, {\n    position: \"end\",\n    classes: {\n      root: e.select ? F : null\n    }\n  }, Ft.createElement(Ld, {\n    className: I,\n    \"aria-label\": g(\"ra.action.clear_input_value\"),\n    title: g(\"ra.action.clear_input_value\"),\n    disableRipple: !0,\n    disabled: !0,\n    size: \"large\"\n  }, Ft.createElement(kd, {\n    className: Bd(v, E)\n  }))) : B || Ft.createElement(Wl, {\n    position: \"end\",\n    classes: {\n      root: e.select ? F : null\n    }\n  }, Ft.createElement(\"span\", {\n    className: I\n  }, \"\\xA0\")) : B, \"getEndAdornment\");\n  return Ft.createElement(JE, S(i({\n    value: s,\n    InputProps: i({\n      classes: e.select && c === \"filled\" ? {\n        adornedEnd: N\n      } : {},\n      endAdornment: L()\n    }, k),\n    disabled: p,\n    variant: c,\n    margin: d,\n    className: m,\n    size: \"small\"\n  }, u), {\n    onFocus: C,\n    onBlur: x,\n    inputRef: t\n  }));\n});\nhr.displayName = \"ResettableTextField\";\nvar GE = n(e => {\n  e.preventDefault();\n}, \"handleMouseDownClearButton\");\nhr.propTypes = {\n  clearAlwaysVisible: ao.bool,\n  disabled: ao.bool,\n  InputProps: ao.object,\n  onBlur: ao.func,\n  onChange: ao.func.isRequired,\n  onFocus: ao.func,\n  resettable: ao.bool,\n  value: ao.any\n};\nvar Tr = \"RaResettableTextField\",\n    Pr = {\n  clearIcon: `${Tr}-clearIcon`,\n  visibleClearIcon: `${Tr}-visibleClearIcon`,\n  clearButton: `${Tr}-clearButton`,\n  selectAdornment: `${Tr}-selectAdornment`,\n  inputAdornedEnd: `${Tr}-inputAdornedEnd`\n},\n    ql = {\n  [`& .${Pr.clearIcon}`]: {\n    height: 16,\n    width: 0\n  },\n  [`& .${Pr.visibleClearIcon}`]: {\n    width: 16\n  },\n  [`& .${Pr.clearButton}`]: {\n    height: 24,\n    width: 24,\n    padding: 0\n  },\n  [`& .${Pr.selectAdornment}`]: {\n    position: \"absolute\",\n    right: 24\n  },\n  [`& .${Pr.inputAdornedEnd}`]: {\n    paddingRight: 0\n  }\n},\n    JE = UE(XE, {\n  name: Tr,\n  overridesResolver: (e, t) => t.root\n})(ql);\nvar Ee = n(e => {\n  let N = e,\n      {\n    className: t,\n    defaultValue: o = \"\",\n    label: r,\n    format: s,\n    helperText: a,\n    onBlur: p,\n    onChange: c,\n    parse: d,\n    resource: m,\n    source: u,\n    validate: g\n  } = N,\n      y = f(N, [\"className\", \"defaultValue\", \"label\", \"format\", \"helperText\", \"onBlur\", \"onChange\", \"parse\", \"resource\", \"source\", \"validate\"]),\n      {\n    field: b,\n    fieldState: {\n      error: P,\n      invalid: T,\n      isTouched: C\n    },\n    formState: {\n      isSubmitted: x\n    },\n    id: I,\n    isRequired: v\n  } = YE(i({\n    defaultValue: o,\n    format: s,\n    parse: d,\n    resource: m,\n    source: u,\n    type: \"text\",\n    validate: g,\n    onBlur: p,\n    onChange: c\n  }, y));\n  return oa.createElement(hr, i(S(i({\n    id: I\n  }, b), {\n    className: KE(\"ra-input\", `ra-input-${u}`, t),\n    label: r !== \"\" && r !== !1 && oa.createElement(ZE, {\n      label: r,\n      source: u,\n      resource: m,\n      isRequired: v\n    }),\n    error: (C || x) && T,\n    helperText: oa.createElement(Z, {\n      touched: C || x,\n      error: P == null ? void 0 : P.message,\n      helperText: a\n    })\n  }), oe(y)));\n}, \"TextInput\");\nEe.propTypes = {\n  className: Ho.string,\n  label: Ho.oneOfType([Ho.string, Ho.bool]),\n  options: Ho.object,\n  resource: Ho.string,\n  source: Ho.string\n};\nEe.defaultProps = {\n  options: {}\n};\nvar DJ = n(e => {\n  let c = e,\n      {\n    initiallyVisible: t = !1\n  } = c,\n      o = f(c, [\"initiallyVisible\"]),\n      [r, s] = eN(t),\n      a = tN(),\n      p = n(() => {\n    s(!r);\n  }, \"handleClick\");\n  return xr.createElement(Ee, i({\n    type: r ? \"text\" : \"password\",\n    size: \"small\",\n    InputProps: {\n      endAdornment: xr.createElement(oN, {\n        position: \"end\"\n      }, xr.createElement(rN, {\n        \"aria-label\": a(r ? \"ra.input.password.toggle_visible\" : \"ra.input.password.toggle_hidden\"),\n        onClick: p,\n        size: \"large\"\n      }, r ? xr.createElement(nN, null) : xr.createElement(sN, null)))\n    }\n  }, o));\n}, \"PasswordInput\");\nl();\nimport * as St from \"react\";\nimport { styled as pN } from \"@mui/material/styles\";\nimport Ve from \"prop-types\";\nimport Ad from \"clsx\";\nimport { FormControl as cN, FormHelperText as mN, FormLabel as dN, RadioGroup as uN } from \"@mui/material\";\nimport fN from \"lodash/get\";\nimport { useInput as gN, FieldTitle as yN, warning as $d, useChoicesContext as bN } from \"ra-core\";\nl();\nimport * as jl from \"react\";\nimport aN from \"@mui/material/FormControlLabel\";\nimport iN from \"@mui/material/Radio\";\nimport { useChoices as lN } from \"ra-core\";\nvar wd = n(_ref63 => {\n  let {\n    choice: e,\n    optionText: t,\n    optionValue: o,\n    source: r,\n    translateChoice: s\n  } = _ref63;\n  let {\n    getChoiceText: a,\n    getChoiceValue: p\n  } = lN({\n    optionText: t,\n    optionValue: o,\n    translateChoice: s\n  }),\n      c = a(e),\n      d = p(e),\n      m = `${r}_${d}`;\n  return jl.createElement(aN, {\n    label: c,\n    htmlFor: m,\n    value: d,\n    control: jl.createElement(iN, {\n      id: m,\n      color: \"primary\"\n    })\n  });\n}, \"RadioButtonGroupInputItem\");\nvar Od = n(e => {\n  let w = e,\n      {\n    choices: t,\n    className: o,\n    format: r,\n    helperText: s,\n    isFetching: a,\n    isLoading: p,\n    label: c,\n    margin: d = \"dense\",\n    onBlur: m,\n    onChange: u,\n    optionText: g,\n    optionValue: y,\n    parse: b,\n    resource: P,\n    row: T,\n    source: C,\n    translateChoice: x,\n    validate: I\n  } = w,\n      v = f(w, [\"choices\", \"className\", \"format\", \"helperText\", \"isFetching\", \"isLoading\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]),\n      {\n    allChoices: N,\n    isLoading: F,\n    resource: E,\n    source: B\n  } = bN({\n    choices: t,\n    isFetching: a,\n    isLoading: p,\n    resource: P,\n    source: C\n  });\n  $d(B === void 0, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the source prop\"), $d(N === void 0, \"If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the choices prop\");\n  let {\n    id: k,\n    isRequired: L,\n    fieldState: _,\n    field: H,\n    formState: $\n  } = gN(i({\n    format: r,\n    onBlur: m,\n    onChange: u,\n    parse: b,\n    resource: E,\n    source: B,\n    validate: I\n  }, v)),\n      {\n    error: W,\n    invalid: O,\n    isTouched: D\n  } = _,\n      {\n    isSubmitted: X\n  } = $;\n  return F ? St.createElement(ye, {\n    htmlFor: k,\n    label: c,\n    source: B,\n    resource: E,\n    className: Ad(\"ra-input\", `ra-input-${B}`, o),\n    isRequired: L\n  }, St.createElement(ke, null)) : St.createElement(RN, i({\n    component: \"fieldset\",\n    className: Ad(\"ra-input\", `ra-input-${B}`, o),\n    margin: d,\n    error: (D || X) && O\n  }, Dd(v)), St.createElement(dN, {\n    component: \"legend\",\n    className: Vd.label\n  }, St.createElement(yN, {\n    label: c,\n    source: B,\n    resource: E,\n    isRequired: L\n  })), St.createElement(uN, i(i({\n    id: k,\n    row: T\n  }, H), Dd(v)), N.map(M => St.createElement(wd, {\n    key: fN(M, y),\n    choice: M,\n    optionText: g,\n    optionValue: y,\n    source: B,\n    translateChoice: x\n  }))), St.createElement(mN, null, St.createElement(Z, {\n    touched: D || X,\n    error: W == null ? void 0 : W.message,\n    helperText: s\n  })));\n}, \"RadioButtonGroupInput\");\nOd.propTypes = {\n  choices: Ve.arrayOf(Ve.any),\n  label: Ve.oneOfType([Ve.string, Ve.bool]),\n  options: Ve.object,\n  optionText: Ve.oneOfType([Ve.string, Ve.func, Ve.element]),\n  optionValue: Ve.string,\n  resource: Ve.string,\n  source: Ve.string,\n  translateChoice: Ve.bool\n};\nOd.defaultProps = {\n  options: {},\n  optionText: \"name\",\n  optionValue: \"id\",\n  row: !0,\n  translateChoice: !0\n};\nvar Dd = n(D => {\n  var X = D,\n      {\n    afterSubmit: e,\n    allowNull: t,\n    beforeSubmit: o,\n    choices: r,\n    className: s,\n    crudGetMatching: a,\n    crudGetOne: p,\n    data: c,\n    filter: d,\n    filterToQuery: m,\n    formatOnBlur: u,\n    isEqual: g,\n    limitChoicesToValue: y,\n    multiple: b,\n    name: P,\n    pagination: T,\n    perPage: C,\n    ref: x,\n    reference: I,\n    refetch: v,\n    render: N,\n    setFilter: F,\n    setPagination: E,\n    setSort: B,\n    sort: k,\n    subscription: L,\n    type: _,\n    validateFields: H,\n    validation: $,\n    value: W\n  } = X,\n      O = f(X, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"choices\", \"className\", \"crudGetMatching\", \"crudGetOne\", \"data\", \"filter\", \"filterToQuery\", \"formatOnBlur\", \"isEqual\", \"limitChoicesToValue\", \"multiple\", \"name\", \"pagination\", \"perPage\", \"ref\", \"reference\", \"refetch\", \"render\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"subscription\", \"type\", \"validateFields\", \"validation\", \"value\"]);\n  return oe(O);\n}, \"sanitizeRestProps\"),\n    Md = \"RaRadioButtonGroupInput\",\n    Vd = {\n  label: `${Md}-label`\n},\n    RN = pN(cN, {\n  name: Md,\n  overridesResolver: (e, t) => t.root\n})(_ref64 => {\n  let {\n    theme: e\n  } = _ref64;\n  return {\n    [`& .${Vd.label}`]: {\n      transform: \"translate(0, 5px) scale(0.75)\",\n      transformOrigin: `top ${e.direction === \"ltr\" ? \"left\" : \"right\"}`\n    }\n  };\n});\nl();\nimport * as Cr from \"react\";\nimport dt from \"prop-types\";\nimport { useReferenceArrayInputController as TN, ResourceContextProvider as PN, ChoicesContextProvider as xN } from \"ra-core\";\nl();\nimport * as _d from \"react\";\nimport Fn from \"prop-types\";\nimport hN from \"@mui/material/TextField\";\nvar Sn = n(_ref65 => {\n  let {\n    label: e,\n    error: t\n  } = _ref65;\n  return _d.createElement(hN, {\n    error: !0,\n    disabled: !0,\n    label: e,\n    value: t == null ? void 0 : t.message,\n    margin: \"normal\"\n  });\n}, \"ReferenceError\");\nSn.propTypes = {\n  error: Fn.object.isRequired,\n  label: Fn.oneOfType([Fn.string, Fn.element, Fn.bool])\n};\nvar ra = n(e => {\n  let {\n    children: t,\n    label: o,\n    reference: r\n  } = e;\n  if (Cr.Children.count(t) !== 1) throw new Error(\"<ReferenceArrayInput> only accepts a single child (like <Datagrid>)\");\n  let s = TN(e);\n  return s.error ? Cr.createElement(Sn, {\n    label: o,\n    error: s.error\n  }) : Cr.createElement(PN, {\n    value: r\n  }, Cr.createElement(xN, {\n    value: s\n  }, t));\n}, \"ReferenceArrayInput\");\nra.propTypes = {\n  children: dt.element.isRequired,\n  filter: dt.object,\n  label: dt.string,\n  page: dt.number,\n  perPage: dt.number,\n  reference: dt.string.isRequired,\n  resource: dt.string,\n  sort: dt.shape({\n    field: dt.string,\n    order: dt.oneOf([\"ASC\", \"DESC\"])\n  }),\n  source: dt.string\n};\nra.defaultProps = {\n  filter: {},\n  page: 1,\n  perPage: 25,\n  sort: {\n    field: \"id\",\n    order: \"DESC\"\n  }\n};\nl();\nimport Ul, { Children as CN } from \"react\";\nimport st from \"prop-types\";\nimport { ChoicesContextProvider as vN, useReferenceInputController as IN, ResourceContextProvider as FN } from \"ra-core\";\nvar na = n(e => {\n  let {\n    children: t,\n    label: o,\n    reference: r\n  } = e,\n      s = IN(e);\n  if (CN.count(t) !== 1) throw new Error(\"<ReferenceInput> only accepts a single child\");\n  return s.error ? Ul.createElement(Sn, {\n    label: o,\n    error: s.error\n  }) : Ul.createElement(FN, {\n    value: r\n  }, Ul.createElement(vN, {\n    value: s\n  }, t));\n}, \"ReferenceInput\");\nna.propTypes = {\n  children: st.element.isRequired,\n  filter: st.object,\n  label: st.string,\n  page: st.number,\n  perPage: st.number,\n  record: st.object,\n  reference: st.string.isRequired,\n  resource: st.string,\n  sort: st.shape({\n    field: st.string,\n    order: st.oneOf([\"ASC\", \"DESC\"])\n  }),\n  source: st.string\n};\nna.defaultProps = {\n  filter: {},\n  page: 1,\n  perPage: 25,\n  sort: {\n    field: \"id\",\n    order: \"DESC\"\n  }\n};\nl();\nimport * as sa from \"react\";\nimport { styled as SN } from \"@mui/material/styles\";\nimport EN from \"@mui/icons-material/Search\";\nimport { InputAdornment as NN } from \"@mui/material\";\nimport { useTranslate as BN } from \"ra-core\";\nvar C3 = n(e => {\n  let t = BN();\n  if (e.label) throw new Error(\"<SearchInput> isn't designed to be used with a label prop. Use <TextInput> if you need a label.\");\n  return sa.createElement(kN, i({\n    hiddenLabel: !0,\n    label: \"\",\n    resettable: !0,\n    placeholder: t(\"ra.action.search\"),\n    InputProps: {\n      endAdornment: sa.createElement(NN, {\n        position: \"end\"\n      }, sa.createElement(EN, {\n        color: \"disabled\"\n      }))\n    },\n    size: \"small\"\n  }, e));\n}, \"SearchInput\"),\n    LN = \"RaSearchInput\",\n    kN = SN(Ee, {\n  name: LN,\n  overridesResolver: (e, t) => t.root\n})({\n  marginTop: 0\n});\nl();\nimport * as $e from \"react\";\nimport { styled as wN } from \"@mui/material/styles\";\nimport { useCallback as Xl, useRef as AN } from \"react\";\nimport Ne from \"prop-types\";\nimport Hd from \"clsx\";\nimport { Select as $N, MenuItem as ON, InputLabel as DN, FormHelperText as MN, FormControl as VN, Chip as _N } from \"@mui/material\";\nimport { FieldTitle as HN, useInput as zN, useChoicesContext as WN, useChoices as qN } from \"ra-core\";\nvar zd = n(e => {\n  let fo = e,\n      {\n    choices: t,\n    className: o,\n    create: r,\n    createLabel: s,\n    createValue: a,\n    disableValue: p,\n    format: c,\n    helperText: d,\n    label: m,\n    isFetching: u,\n    isLoading: g,\n    margin: y = \"dense\",\n    onBlur: b,\n    onChange: P,\n    onCreate: T,\n    optionText: C,\n    optionValue: x,\n    parse: I,\n    resource: v,\n    source: N,\n    translateChoice: F,\n    validate: E,\n    variant: B = \"filled\"\n  } = fo,\n      k = f(fo, [\"choices\", \"className\", \"create\", \"createLabel\", \"createValue\", \"disableValue\", \"format\", \"helperText\", \"label\", \"isFetching\", \"isLoading\", \"margin\", \"onBlur\", \"onChange\", \"onCreate\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\", \"variant\"]),\n      L = AN(null),\n      {\n    allChoices: _,\n    isLoading: H,\n    source: $,\n    resource: W\n  } = WN({\n    choices: t,\n    isLoading: g,\n    isFetching: u,\n    resource: v,\n    source: N\n  }),\n      {\n    getChoiceText: O,\n    getChoiceValue: D,\n    getDisableValue: X\n  } = qN({\n    optionText: C,\n    optionValue: x,\n    disableValue: p,\n    translateChoice: F\n  }),\n      {\n    field: w,\n    isRequired: M,\n    fieldState: {\n      error: re,\n      invalid: te,\n      isTouched: de\n    },\n    formState: {\n      isSubmitted: ne\n    }\n  } = zN(i({\n    format: c,\n    onBlur: b,\n    onChange: P,\n    parse: I,\n    resource: W,\n    source: $,\n    validate: E\n  }, k)),\n      ie = Xl(q => {\n    var ze;\n    ((ze = q == null ? void 0 : q.target) == null ? void 0 : ze.value) != null ? w.onChange(q.target.value) : w.onChange([...(w.value || []), D(q)]);\n  }, [w, D]),\n      {\n    getCreateItem: G,\n    handleChange: le,\n    createElement: He\n  } = cr({\n    create: r,\n    createLabel: s,\n    createValue: a,\n    handleChange: ie,\n    onCreate: T,\n    optionText: C\n  }),\n      pe = r || T ? G() : null,\n      Bt = r || T ? [...(_ || []), pe] : _ || [],\n      it = Xl(q => !!pe && (q == null ? void 0 : q.id) === pe.id && typeof C == \"function\" ? pe.name : O(q), [pe, O, C]),\n      Yr = Xl(q => q ? $e.createElement(ON, {\n    key: D(q),\n    value: D(q),\n    disabled: X(q)\n  }, it(!!pe && (q == null ? void 0 : q.id) === pe.id ? pe : q)) : null, [D, X, it, pe]);\n  return H ? $e.createElement(ye, {\n    label: m,\n    source: $,\n    resource: W,\n    className: Hd(\"ra-input\", `ra-input-${$}`, o),\n    isRequired: M\n  }, $e.createElement(ke, null)) : $e.createElement($e.Fragment, null, $e.createElement(UN, i({\n    margin: y,\n    className: Hd(\"ra-input\", `ra-input-${$}`, o),\n    error: (de || ne) && te,\n    variant: B\n  }, jN(k)), $e.createElement(DN, {\n    ref: L,\n    id: `${m}-outlined-label`,\n    error: (de || ne) && te\n  }, $e.createElement(HN, {\n    label: m,\n    source: $,\n    resource: W,\n    isRequired: M\n  })), $e.createElement($N, S(i({\n    autoWidth: !0,\n    labelId: `${m}-outlined-label`,\n    multiple: !0,\n    error: (de || ne) && te,\n    renderValue: q => $e.createElement(\"div\", {\n      className: aa.chips\n    }, q.map(ze => (_ || []).find(yt => D(yt) === ze)).filter(ze => !!ze).map(ze => $e.createElement(_N, {\n      key: D(ze),\n      label: it(ze),\n      className: aa.chip,\n      size: \"small\"\n    }))),\n    \"data-testid\": \"selectArray\",\n    size: \"small\"\n  }, w), {\n    onChange: le,\n    value: w.value || []\n  }), Bt.map(Yr)), $e.createElement(MN, {\n    error: de && !!re\n  }, $e.createElement(Z, {\n    touched: de || ne,\n    error: re == null ? void 0 : re.message,\n    helperText: d\n  }))), He);\n}, \"SelectArrayInput\");\nzd.propTypes = {\n  choices: Ne.arrayOf(Ne.object),\n  className: Ne.string,\n  children: Ne.node,\n  label: Ne.oneOfType([Ne.string, Ne.bool]),\n  options: Ne.object,\n  optionText: Ne.oneOfType([Ne.string, Ne.func, Ne.element]).isRequired,\n  optionValue: Ne.string.isRequired,\n  disableValue: Ne.string,\n  resource: Ne.string,\n  source: Ne.string,\n  translateChoice: Ne.bool\n};\nzd.defaultProps = {\n  options: {},\n  optionText: \"name\",\n  optionValue: \"id\",\n  disableValue: \"disabled\",\n  translateChoice: !0\n};\nvar jN = n(G => {\n  var le = G,\n      {\n    alwaysOn: e,\n    choices: t,\n    classNamInputWithOptionsPropse: o,\n    componenInputWithOptionsPropst: r,\n    crudGetMInputWithOptionsPropsatching: s,\n    crudGetOInputWithOptionsPropsne: a,\n    defaultValue: p,\n    disableValue: c,\n    emptyText: d,\n    enableGetChoices: m,\n    filter: u,\n    filterToQuery: g,\n    formClassName: y,\n    initializeForm: b,\n    initialValue: P,\n    input: T,\n    isRequired: C,\n    label: x,\n    limitChoicesToValue: I,\n    loaded: v,\n    locale: N,\n    meta: F,\n    onChange: E,\n    options: B,\n    optionValue: k,\n    optionText: L,\n    perPage: _,\n    record: H,\n    reference: $,\n    resource: W,\n    setFilter: O,\n    setPagination: D,\n    setSort: X,\n    sort: w,\n    source: M,\n    textAlign: re,\n    translate: te,\n    translateChoice: de,\n    validation: ne\n  } = le,\n      ie = f(le, [\"alwaysOn\", \"choices\", \"classNamInputWithOptionsPropse\", \"componenInputWithOptionsPropst\", \"crudGetMInputWithOptionsPropsatching\", \"crudGetOInputWithOptionsPropsne\", \"defaultValue\", \"disableValue\", \"emptyText\", \"enableGetChoices\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"initialValue\", \"input\", \"isRequired\", \"label\", \"limitChoicesToValue\", \"loaded\", \"locale\", \"meta\", \"onChange\", \"options\", \"optionValue\", \"optionText\", \"perPage\", \"record\", \"reference\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n  return ie;\n}, \"sanitizeRestProps\"),\n    Ql = \"RaSelectArrayInput\",\n    aa = {\n  chips: `${Ql}-chips`,\n  chip: `${Ql}-chip`\n},\n    UN = wN(VN, {\n  name: Ql,\n  overridesResolver: (e, t) => t.root\n})(_ref66 => {\n  let {\n    theme: e\n  } = _ref66;\n  return {\n    minWidth: e.spacing(20),\n    [`& .${aa.chips}`]: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    [`& .${aa.chip}`]: {\n      marginTop: e.spacing(.5),\n      marginRight: e.spacing(.5)\n    }\n  };\n});\nl();\nimport * as Qe from \"react\";\nimport { useCallback as ia } from \"react\";\nimport ce from \"prop-types\";\nimport Wd from \"clsx\";\nimport qd from \"@mui/material/MenuItem\";\nimport { styled as XN } from \"@mui/material/styles\";\nimport { useChoicesContext as QN, useInput as GN, FieldTitle as JN, useTranslate as KN, useChoices as YN } from \"ra-core\";\nvar En = n(e => {\n  let go = e,\n      {\n    choices: t,\n    className: o,\n    create: r,\n    createLabel: s,\n    createValue: a,\n    defaultValue: p = \"\",\n    disableValue: c,\n    emptyText: d,\n    emptyValue: m,\n    format: u,\n    filter: g,\n    helperText: y,\n    isFetching: b,\n    isLoading: P,\n    label: T,\n    margin: C = \"dense\",\n    onBlur: x,\n    onChange: I,\n    onCreate: v,\n    optionText: N,\n    optionValue: F,\n    parse: E,\n    resource: B,\n    source: k,\n    translateChoice: L,\n    validate: _\n  } = go,\n      H = f(go, [\"choices\", \"className\", \"create\", \"createLabel\", \"createValue\", \"defaultValue\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"filter\", \"helperText\", \"isFetching\", \"isLoading\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"onCreate\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]),\n      $ = KN(),\n      {\n    allChoices: W,\n    isLoading: O,\n    source: D,\n    resource: X\n  } = QN({\n    choices: t,\n    isLoading: P,\n    isFetching: b,\n    resource: B,\n    source: k\n  }),\n      {\n    getChoiceText: w,\n    getChoiceValue: M,\n    getDisableValue: re\n  } = YN({\n    optionText: N,\n    optionValue: F,\n    disableValue: c,\n    translateChoice: L\n  }),\n      {\n    field: te,\n    fieldState: de,\n    id: ne,\n    isRequired: ie,\n    formState: {\n      isSubmitted: G\n    }\n  } = GN(i({\n    defaultValue: p,\n    format: u,\n    parse: E,\n    onBlur: x,\n    onChange: I,\n    resource: X,\n    source: D,\n    validate: _\n  }, H)),\n      {\n    error: le,\n    invalid: He,\n    isTouched: pe\n  } = de,\n      Bt = ia(() => Qe.isValidElement(d) ? d : d === \"\" ? \"\\u2003\" : $(d, {\n    _: d\n  }), [d, $]),\n      it = ia(Te => w(Te), [w]),\n      Yr = ia(async Te => {\n    var De;\n    ((De = Te == null ? void 0 : Te.target) == null ? void 0 : De.value) != null ? te.onChange(Te.target.value) : te.onChange(M(Te));\n  }, [te, M]),\n      {\n    getCreateItem: fo,\n    handleChange: q,\n    createElement: ze\n  } = cr({\n    create: r,\n    createLabel: s,\n    createValue: a,\n    handleChange: Yr,\n    onCreate: v,\n    optionText: N\n  }),\n      yt = r || v ? fo() : null,\n      Zr = r || v ? [...W, yt] : W,\n      Jo = ia(Te => Te ? Qe.createElement(qd, {\n    key: M(Te),\n    value: M(Te),\n    disabled: re(Te)\n  }, it(!!yt && (Te == null ? void 0 : Te.id) === yt.id ? yt : Te)) : null, [M, re, it, yt]);\n  return O ? Qe.createElement(ye, {\n    label: T,\n    source: D,\n    resource: X,\n    className: Wd(\"ra-input\", `ra-input-${D}`, o),\n    isRequired: ie\n  }, Qe.createElement(ke, null)) : Qe.createElement(Qe.Fragment, null, Qe.createElement(tB, i(S(i({\n    id: ne\n  }, te), {\n    className: Wd(\"ra-input\", `ra-input-${D}`, o),\n    onChange: q,\n    select: !0,\n    label: T !== \"\" && T !== !1 && Qe.createElement(JN, {\n      label: T,\n      source: D,\n      resource: X,\n      isRequired: ie\n    }),\n    clearAlwaysVisible: !0,\n    error: (pe || G) && He,\n    helperText: Qe.createElement(Z, {\n      touched: pe || G,\n      error: le == null ? void 0 : le.message,\n      helperText: y\n    }),\n    margin: C\n  }), ZN(H)), Qe.createElement(qd, {\n    value: m,\n    key: \"null\",\n    \"aria-label\": $(\"ra.action.clear_input_value\"),\n    title: $(\"ra.action.clear_input_value\")\n  }, Bt()), Zr.map(Jo)), ze);\n}, \"SelectInput\");\nEn.propTypes = {\n  emptyText: ce.oneOfType([ce.string, ce.element]),\n  emptyValue: ce.any,\n  choices: ce.arrayOf(ce.object),\n  className: ce.string,\n  label: ce.oneOfType([ce.string, ce.bool]),\n  options: ce.object,\n  optionText: ce.oneOfType([ce.string, ce.func, ce.element]).isRequired,\n  optionValue: ce.string.isRequired,\n  disableValue: ce.string,\n  resettable: ce.bool,\n  resource: ce.string,\n  source: ce.string,\n  translateChoice: ce.bool\n};\nEn.defaultProps = {\n  emptyText: \"\",\n  emptyValue: \"\",\n  options: {},\n  optionText: \"name\",\n  optionValue: \"id\",\n  translateChoice: !0,\n  disableValue: \"disabled\"\n};\nvar ZN = n(M => {\n  var re = M,\n      {\n    afterSubmit: e,\n    allowNull: t,\n    beforeSubmit: o,\n    choices: r,\n    className: s,\n    crudGetMatching: a,\n    crudGetOne: p,\n    data: c,\n    field: d,\n    fieldState: m,\n    formState: u,\n    filter: g,\n    filterToQuery: y,\n    formatOnBlur: b,\n    isEqual: P,\n    limitChoicesToValue: T,\n    multiple: C,\n    name: x,\n    pagination: I,\n    perPage: v,\n    ref: N,\n    reference: F,\n    refetch: E,\n    render: B,\n    setFilter: k,\n    setPagination: L,\n    setSort: _,\n    sort: H,\n    subscription: $,\n    type: W,\n    validateFields: O,\n    validation: D,\n    value: X\n  } = re,\n      w = f(re, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"choices\", \"className\", \"crudGetMatching\", \"crudGetOne\", \"data\", \"field\", \"fieldState\", \"formState\", \"filter\", \"filterToQuery\", \"formatOnBlur\", \"isEqual\", \"limitChoicesToValue\", \"multiple\", \"name\", \"pagination\", \"perPage\", \"ref\", \"reference\", \"refetch\", \"render\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"subscription\", \"type\", \"validateFields\", \"validation\", \"value\"]);\n  return oe(w);\n}, \"sanitizeRestProps\"),\n    eB = \"RaSelectInput\",\n    tB = XN(hr, {\n  name: eB,\n  overridesResolver: (e, t) => t.root\n})(_ref67 => {\n  let {\n    theme: e\n  } = _ref67;\n  return S(i({}, ql), {\n    minWidth: e.spacing(20)\n  });\n});\nl();\nimport * as Nn from \"react\";\nimport { styled as xB } from \"@mui/material/styles\";\nimport { TranslatableContextProvider as CB, useTranslatable as vB } from \"ra-core\";\nl();\nimport * as pa from \"react\";\nimport { styled as cB } from \"@mui/material/styles\";\nimport { AppBar as mB, Tabs as dB } from \"@mui/material\";\nimport { useTranslatableContext as uB } from \"ra-core\";\nl();\nimport oB from \"react\";\nimport { styled as rB } from \"@mui/material/styles\";\nimport nB from \"@mui/material/Tab\";\nimport { useFormGroup as sB, useTranslate as aB } from \"ra-core\";\nimport { capitalize as iB } from \"inflection\";\nimport lB from \"clsx\";\nvar jd = n(e => {\n  let c = e,\n      {\n    groupKey: t = \"\",\n    locale: o\n  } = c,\n      r = f(c, [\"groupKey\", \"locale\"]),\n      {\n    isValid: s,\n    isTouched: a\n  } = sB(`${t}${o}`),\n      p = aB();\n  return oB.createElement(pB, i({\n    id: `translatable-header-${t}${o}`,\n    label: p(`ra.locales.${o}`, {\n      _: iB(o)\n    }),\n    className: lB(la.root, {\n      [la.error]: !s && a\n    })\n  }, r));\n}, \"TranslatableInputsTab\"),\n    Gl = \"RaTranslatableInputsTab\",\n    la = {\n  root: `${Gl}-root`,\n  error: `${Gl}-error`\n},\n    pB = rB(nB, {\n  name: Gl\n})(_ref68 => {\n  let {\n    theme: e\n  } = _ref68;\n  return {\n    [`&.${la.root}`]: {\n      fontSize: \"0.8em\",\n      minHeight: e.spacing(3),\n      minWidth: e.spacing(6)\n    },\n    [`&.${la.error}`]: {\n      color: e.palette.error.main\n    }\n  };\n});\nvar Ud = n(e => {\n  let {\n    groupKey: t,\n    TabsProps: o\n  } = e,\n      {\n    locales: r,\n    selectLocale: s,\n    selectedLocale: a\n  } = uB(),\n      p = n((c, d) => {\n    s(d);\n  }, \"handleChange\");\n  return pa.createElement(fB, {\n    color: \"default\",\n    position: \"static\",\n    className: ca.root\n  }, pa.createElement(dB, i({\n    value: a,\n    onChange: p,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    className: ca.tabs\n  }, o), r.map(c => pa.createElement(jd, {\n    key: c,\n    value: c,\n    locale: c,\n    groupKey: t\n  }))));\n}, \"TranslatableInputsTabs\"),\n    Jl = \"RaTranslatableInputsTabs\",\n    ca = {\n  root: `${Jl}-root`,\n  tabs: `${Jl}-tabs`\n},\n    fB = cB(mB, {\n  name: Jl\n})(_ref69 => {\n  let {\n    theme: e\n  } = _ref69;\n  return {\n    [`&.${ca.root}`]: {\n      boxShadow: \"none\",\n      borderRadius: 0,\n      borderTopLeftRadius: e.shape.borderRadius,\n      borderTopRightRadius: e.shape.borderRadius,\n      border: `1px solid ${e.palette.divider}`\n    },\n    [`& .${ca.tabs}`]: {\n      minHeight: e.spacing(3)\n    }\n  };\n});\nl();\nimport * as Kl from \"react\";\nimport { styled as gB } from \"@mui/material/styles\";\nimport { Children as yB, cloneElement as bB, isValidElement as RB } from \"react\";\nimport { FormGroupContextProvider as hB, useTranslatableContext as TB } from \"ra-core\";\nvar Xd = n(e => {\n  let u = e,\n      {\n    children: t,\n    groupKey: o = \"\",\n    locale: r,\n    margin: s,\n    variant: a\n  } = u,\n      p = f(u, [\"children\", \"groupKey\", \"locale\", \"margin\", \"variant\"]),\n      {\n    selectedLocale: c,\n    getLabel: d,\n    getSource: m\n  } = TB();\n  return Kl.createElement(hB, {\n    name: `${o}${r}`\n  }, Kl.createElement(PB, i({\n    role: \"tabpanel\",\n    hidden: c !== r,\n    id: `translatable-content-${o}${r}`,\n    \"aria-labelledby\": `translatable-header-${o}${r}`,\n    className: Gd.root\n  }, p), yB.map(t, g => RB(g) ? bB(g, S(i({}, g.props), {\n    label: d(g.props.source, g.props.label),\n    source: m(g.props.source, r)\n  })) : null)));\n}, \"TranslatableInputsTabContent\"),\n    Qd = \"RaTranslatableInputsTabContent\",\n    Gd = {\n  root: `${Qd}-root`\n},\n    PB = gB(\"div\", {\n  name: Qd\n})(_ref70 => {\n  let {\n    theme: e\n  } = _ref70;\n  return {\n    [`&.${Gd.root}`]: {\n      flexGrow: 1,\n      paddingLeft: e.spacing(2),\n      paddingRight: e.spacing(2),\n      paddingTop: e.spacing(1),\n      paddingBottom: e.spacing(1),\n      borderRadius: 0,\n      borderBottomLeftRadius: e.shape.borderRadius,\n      borderBottomRightRadius: e.shape.borderRadius,\n      border: `1px solid ${e.palette.divider}`,\n      borderTop: 0\n    }\n  };\n});\nvar FK = n(e => {\n  let {\n    className: t,\n    defaultLocale: o,\n    locales: r,\n    groupKey: s = \"\",\n    selector: a = Nn.createElement(Ud, {\n      groupKey: s\n    }),\n    children: p,\n    variant: c,\n    margin: d\n  } = e,\n      m = vB({\n    defaultLocale: o,\n    locales: r\n  });\n  return Nn.createElement(FB, {\n    className: t\n  }, Nn.createElement(CB, {\n    value: m\n  }, a, r.map(u => Nn.createElement(Xd, {\n    key: u,\n    locale: u,\n    groupKey: s,\n    variant: c,\n    margin: d\n  }, p))));\n}, \"TranslatableInputs\"),\n    IB = \"RaTranslatableInputs\",\n    FB = xB(\"div\", {\n  name: IB,\n  overridesResolver: (e, t) => t.root\n})(_ref71 => {\n  let {\n    theme: e\n  } = _ref71;\n  return {\n    flexGrow: 1,\n    marginTop: e.spacing(1),\n    marginBottom: e.spacing(.5)\n  };\n});\nvar Yl = n(e => {\n  let {\n    redirectTo: t,\n    className: o\n  } = e,\n      [r, s] = OB(!1),\n      a = AB(),\n      p = wB(),\n      c = $B();\n  return zo.createElement(DB, {\n    onSubmit: n(m => {\n      s(!0), a(m, t).then(() => {\n        s(!1);\n      }).catch(u => {\n        s(!1), c(typeof u == \"string\" ? u : typeof u == \"undefined\" || !u.message ? \"ra.auth.sign_in_error\" : u.message, {\n          type: \"warning\",\n          messageArgs: {\n            _: typeof u == \"string\" ? u : u && u.message ? u.message : void 0\n          }\n        });\n      });\n    }, \"submit\"),\n    mode: \"onChange\",\n    noValidate: !0,\n    className: o\n  }, zo.createElement(BB, {\n    className: vr.content\n  }, zo.createElement(Ee, {\n    autoFocus: !0,\n    source: \"username\",\n    label: p(\"ra.auth.username\"),\n    validate: Jd(),\n    fullWidth: !0\n  }), zo.createElement(Ee, {\n    source: \"password\",\n    label: p(\"ra.auth.password\"),\n    type: \"password\",\n    autoComplete: \"current-password\",\n    validate: Jd(),\n    fullWidth: !0\n  }), zo.createElement(NB, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    disabled: r,\n    fullWidth: !0,\n    className: vr.button\n  }, r ? zo.createElement(LB, {\n    className: vr.icon,\n    size: 19,\n    thickness: 3\n  }) : p(\"ra.auth.sign_in\"))));\n}, \"LoginForm\"),\n    ma = \"RaLoginForm\",\n    vr = {\n  content: `${ma}-content`,\n  button: `${ma}-button`,\n  icon: `${ma}-icon`\n},\n    DB = SB(kB, {\n  name: ma,\n  overridesResolver: (e, t) => t.root\n})(_ref72 => {\n  let {\n    theme: e\n  } = _ref72;\n  return {\n    [`& .${vr.content}`]: {\n      width: 300\n    },\n    [`& .${vr.button}`]: {\n      marginTop: e.spacing(2)\n    },\n    [`& .${vr.icon}`]: {\n      margin: e.spacing(.3)\n    }\n  };\n});\nYl.propTypes = {\n  redirectTo: EB.string\n};\nvar da = n(e => {\n  let u = e,\n      {\n    children: t,\n    backgroundImage: o\n  } = u,\n      r = f(u, [\"children\", \"backgroundImage\"]),\n      s = MB(),\n      a = !1,\n      p = qB(),\n      c = WB();\n  Kd(() => {\n    p({}, !1).then(() => {\n      c(\"/\");\n    }).catch(() => {});\n  }, [p, c]);\n  let d = n(() => {\n    !a && s.current && (s.current.style.backgroundImage = `url(${o})`, a = !0);\n  }, \"updateBackgroundImage\"),\n      m = n(() => {\n    if (o) {\n      let g = new Image();\n      g.onload = d, g.src = o;\n    }\n  }, \"lazyLoadBackgroundImage\");\n  return Kd(() => {\n    a || m();\n  }), Wo.createElement(jB, S(i({}, r), {\n    ref: s\n  }), Wo.createElement(VB, {\n    className: Ir.card\n  }, Wo.createElement(\"div\", {\n    className: Ir.avatar\n  }, Wo.createElement(_B, {\n    className: Ir.icon\n  }, Wo.createElement(zB, null))), t));\n}, \"Login\"),\n    ua = \"RaLogin\",\n    Ir = {\n  card: `${ua}-card`,\n  avatar: `${ua}-avatar`,\n  icon: `${ua}-icon`\n},\n    jB = HB(\"div\", {\n  name: ua,\n  overridesResolver: (e, t) => t.root\n})(_ref73 => {\n  let {\n    theme: e\n  } = _ref73;\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    height: \"1px\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundImage: \"radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)\",\n    [`& .${Ir.card}`]: {\n      minWidth: 300,\n      marginTop: \"6em\"\n    },\n    [`& .${Ir.avatar}`]: {\n      margin: \"1em\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    [`& .${Ir.icon}`]: {\n      backgroundColor: e.palette.secondary[500]\n    }\n  };\n});\nda.propTypes = {\n  backgroundImage: Zl.string,\n  children: Zl.node,\n  className: Zl.string\n};\nda.defaultProps = {\n  children: Wo.createElement(Yl, null)\n};\nl();\nvar Yd = {\n  palette: {\n    background: {\n      default: \"#fafafb\"\n    },\n    secondary: {\n      light: \"#6ec6ff\",\n      main: \"#2196f3\",\n      dark: \"#0069c0\",\n      contrastText: \"#fff\"\n    }\n  },\n  typography: {\n    h6: {\n      fontWeight: 400\n    }\n  },\n  sidebar: {\n    width: 240,\n    closedWidth: 50\n  },\n  components: {\n    MuiButtonBase: {\n      defaultProps: {\n        disableRipple: !0\n      },\n      styleOverrides: {\n        root: {\n          \"&:hover:active::after\": {\n            content: '\"\"',\n            display: \"block\",\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"currentColor\",\n            opacity: .3,\n            borderRadius: \"inherit\"\n          },\n          \"&:focus::after\": {\n            content: '\"\"',\n            display: \"block\",\n            width: \"100%\",\n            height: \"100%\",\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            backgroundColor: \"currentColor\",\n            opacity: .3,\n            borderRadius: \"inherit\"\n          }\n        }\n      }\n    },\n    MuiFilledInput: {\n      styleOverrides: {\n        root: {\n          backgroundColor: \"rgba(0, 0, 0, 0.04)\",\n          \"&$disabled\": {\n            backgroundColor: \"rgba(0, 0, 0, 0.04)\"\n          }\n        }\n      }\n    }\n  }\n};\nl();\nimport * as ga from \"react\";\nimport me from \"prop-types\";\nimport { CreateContextProvider as KB, ResourceContextProvider as YB, useCheckMinimumRequiredProps as ZB, useCreateController as eL } from \"ra-core\";\nl();\nimport * as Bn from \"react\";\nimport Ce from \"prop-types\";\nimport { Card as UB } from \"@mui/material\";\nimport { styled as XB } from \"@mui/material/styles\";\nimport { useCreateContext as QB } from \"ra-core\";\nimport Zd from \"clsx\";\nvar ep = n(e => {\n  let m = e,\n      {\n    actions: t,\n    aside: o,\n    children: r,\n    className: s,\n    component: a = UB,\n    title: p\n  } = m,\n      c = f(m, [\"actions\", \"aside\", \"children\", \"className\", \"component\", \"title\"]),\n      {\n    defaultTitle: d\n  } = QB(e);\n  return Bn.createElement(JB, i({\n    className: Zd(\"create-page\", s)\n  }, GB(c)), Bn.createElement(Ue, {\n    title: p,\n    defaultTitle: d\n  }), t, Bn.createElement(\"div\", {\n    className: Zd(Fr.main, {\n      [Fr.noActions]: !t\n    })\n  }, Bn.createElement(a, {\n    className: Fr.card\n  }, r), o));\n}, \"CreateView\");\nep.propTypes = {\n  actions: Ce.oneOfType([Ce.element, Ce.bool]),\n  aside: Ce.element,\n  children: Ce.element,\n  className: Ce.string,\n  defaultTitle: Ce.any,\n  hasList: Ce.bool,\n  hasShow: Ce.bool,\n  mutationOptions: Ce.object,\n  record: Ce.object,\n  redirect: Ce.oneOfType([Ce.string, Ce.bool, Ce.func]),\n  resource: Ce.string,\n  save: Ce.func,\n  title: Ce.node\n};\nvar GB = n(x => {\n  var I = x,\n      {\n    defaultTitle: e = null,\n    hasCreate: t = null,\n    hasEdit: o = null,\n    hasList: r = null,\n    hasShow: s = null,\n    history: a = null,\n    isFetching: p = null,\n    isLoading: c = null,\n    location: d = null,\n    match: m = null,\n    mutationOptions: u = null,\n    options: g = null,\n    permissions: y = null,\n    save: b = null,\n    saving: P = null,\n    transform: T = null\n  } = I,\n      C = f(I, [\"defaultTitle\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"history\", \"isFetching\", \"isLoading\", \"location\", \"match\", \"mutationOptions\", \"options\", \"permissions\", \"save\", \"saving\", \"transform\"]);\n  return C;\n}, \"sanitizeRestProps\"),\n    fa = \"RaCreate\",\n    Fr = {\n  main: `${fa}-main`,\n  noActions: `${fa}-noActions`,\n  card: `${fa}-card`\n},\n    JB = XB(\"div\", {\n  name: fa,\n  overridesResolver: (e, t) => t.root\n})(_ref74 => {\n  let {\n    theme: e\n  } = _ref74;\n  return {\n    [`& .${Fr.main}`]: {\n      display: \"flex\"\n    },\n    [`& .${Fr.noActions}`]: {\n      [e.breakpoints.up(\"sm\")]: {\n        marginTop: \"1em\"\n      }\n    },\n    [`& .${Fr.card}`]: {\n      flex: \"1 1 auto\"\n    }\n  };\n});\nvar tL = n(e => {\n  ZB(\"Create\", [\"children\"], e);\n  let t = eL(e),\n      o = ga.createElement(KB, {\n    value: t\n  }, ga.createElement(ep, i(i({}, e), t)));\n  return e.resource ? ga.createElement(YB, {\n    value: e.resource\n  }, o) : o;\n}, \"Create\");\ntL.propTypes = {\n  actions: me.oneOfType([me.element, me.bool]),\n  aside: me.element,\n  children: me.element,\n  className: me.string,\n  disableAuthentication: me.bool,\n  hasCreate: me.bool,\n  hasEdit: me.bool,\n  hasShow: me.bool,\n  redirect: me.oneOfType([me.string, me.bool, me.func]),\n  resource: me.string,\n  title: me.node,\n  record: me.object,\n  hasList: me.bool,\n  mutationOptions: me.object,\n  transform: me.func,\n  sx: me.any\n};\nl();\nimport * as tp from \"react\";\nimport Sr from \"prop-types\";\nimport { useResourceDefinition as oL } from \"ra-core\";\nvar rL = n(o => {\n  var r = o,\n      {\n    className: e\n  } = r,\n      t = f(r, [\"className\"]);\n  let {\n    hasList: s\n  } = oL(t);\n  return tp.createElement(Pt, i({\n    className: e\n  }, nL(t)), s && tp.createElement(ui, null));\n}, \"CreateActions\"),\n    nL = n(s => {\n  var a = s,\n      {\n    className: e = null,\n    hasList: t = null,\n    resource: o = null\n  } = a,\n      r = f(a, [\"className\", \"hasList\", \"resource\"]);\n  return r;\n}, \"sanitizeRestProps\");\nrL.propTypes = {\n  className: Sr.string,\n  hasCreate: Sr.bool,\n  hasEdit: Sr.bool,\n  hasShow: Sr.bool,\n  hasList: Sr.bool,\n  resource: Sr.string\n};\nl();\nimport * as ba from \"react\";\nimport se from \"prop-types\";\nimport { EditContextProvider as yL, ResourceContextProvider as bL, useCheckMinimumRequiredProps as RL, useEditController as hL } from \"ra-core\";\nl();\nimport * as jo from \"react\";\nimport { styled as lL } from \"@mui/material/styles\";\nimport Re from \"prop-types\";\nimport { Card as pL, CardContent as cL } from \"@mui/material\";\nimport eu from \"clsx\";\nimport { ComponentPropType as mL, useEditContext as dL, useResourceDefinition as uL } from \"ra-core\";\nl();\nimport * as op from \"react\";\nimport qo from \"prop-types\";\nimport { useEditContext as sL, useResourceDefinition as aL } from \"ra-core\";\nvar rp = n(o => {\n  var r = o,\n      {\n    className: e\n  } = r,\n      t = f(r, [\"className\"]);\n  let {\n    record: s\n  } = sL(t),\n      {\n    hasShow: a\n  } = aL(t);\n  return op.createElement(Pt, i({\n    className: e\n  }, iL(t)), a && op.createElement(ja, {\n    record: s\n  }));\n}, \"EditActions\"),\n    iL = n(a => {\n  var p = a,\n      {\n    hasCreate: e = null,\n    hasEdit: t = null,\n    hasShow: o = null,\n    hasList: r = null\n  } = p,\n      s = f(p, [\"hasCreate\", \"hasEdit\", \"hasShow\", \"hasList\"]);\n  return s;\n}, \"sanitizeRestProps\");\nrp.propTypes = {\n  className: qo.string,\n  data: qo.object,\n  hasCreate: qo.bool,\n  hasEdit: qo.bool,\n  hasShow: qo.bool,\n  hasList: qo.bool,\n  resource: qo.string\n};\nvar Er = n(e => {\n  let b = e,\n      {\n    actions: t,\n    aside: o,\n    children: r,\n    className: s,\n    component: a = pL,\n    title: p,\n    mutationMode: c\n  } = b,\n      d = f(b, [\"actions\", \"aside\", \"children\", \"className\", \"component\", \"title\", \"mutationMode\"]),\n      {\n    hasShow: m\n  } = uL(),\n      {\n    defaultTitle: u,\n    record: g\n  } = dL(e),\n      y = typeof t == \"undefined\" && m ? jo.createElement(rp, null) : t;\n  return r ? jo.createElement(gL, i({\n    className: eu(\"edit-page\", s)\n  }, fL(d)), jo.createElement(Ue, {\n    title: p,\n    defaultTitle: u\n  }), y, jo.createElement(\"div\", {\n    className: eu(Nr.main, {\n      [Nr.noActions]: !y\n    })\n  }, jo.createElement(a, {\n    className: Nr.card\n  }, g ? r : jo.createElement(cL, null, \"\\xA0\")), o)) : null;\n}, \"EditView\");\nEr.propTypes = {\n  actions: Re.oneOfType([Re.element, Re.bool]),\n  aside: Re.element,\n  children: Re.element,\n  className: Re.string,\n  component: mL,\n  defaultTitle: Re.any,\n  hasList: Re.bool,\n  hasShow: Re.bool,\n  mutationMode: Re.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  mutationOptions: Re.object,\n  record: Re.object,\n  redirect: Re.oneOfType([Re.string, Re.bool, Re.func]),\n  resource: Re.string,\n  save: Re.func,\n  title: Re.node\n};\nvar fL = n(F => {\n  var E = F,\n      {\n    defaultTitle: e = null,\n    hasCreate: t = null,\n    hasEdit: o = null,\n    hasList: r = null,\n    hasShow: s = null,\n    history: a = null,\n    id: p = null,\n    isFetching: c = null,\n    isLoading: d = null,\n    location: m = null,\n    match: u = null,\n    options: g = null,\n    queryOptions: y = null,\n    mutationOptions: b = null,\n    permissions: P = null,\n    refetch: T = null,\n    resource: C = null,\n    save: x = null,\n    saving: I = null,\n    transform: v = null\n  } = E,\n      N = f(E, [\"defaultTitle\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"history\", \"id\", \"isFetching\", \"isLoading\", \"location\", \"match\", \"options\", \"queryOptions\", \"mutationOptions\", \"permissions\", \"refetch\", \"resource\", \"save\", \"saving\", \"transform\"]);\n  return N;\n}, \"sanitizeRestProps\"),\n    ya = \"RaEdit\",\n    Nr = {\n  main: `${ya}-main`,\n  noActions: `${ya}-noActions`,\n  card: `${ya}-card`\n},\n    gL = lL(\"div\", {\n  name: ya,\n  overridesResolver: (e, t) => t.root\n})({\n  [`& .${Nr.main}`]: {\n    display: \"flex\",\n    alignItems: \"flex-start\"\n  },\n  [`& .${Nr.noActions}`]: {\n    marginTop: \"1em\"\n  },\n  [`& .${Nr.card}`]: {\n    flex: \"1 1 auto\"\n  }\n});\nvar TL = n(e => {\n  RL(\"Edit\", [\"children\"], e);\n  let t = hL(e),\n      o = ba.createElement(yL, {\n    value: t\n  }, ba.createElement(Er, i(i({}, e), t)));\n  return e.resource ? ba.createElement(bL, {\n    value: e.resource\n  }, o) : o;\n}, \"Edit\");\nTL.propTypes = {\n  actions: se.oneOfType([se.element, se.bool]),\n  aside: se.element,\n  children: se.node,\n  className: se.string,\n  disableAuthentication: se.bool,\n  hasCreate: se.bool,\n  hasEdit: se.bool,\n  hasShow: se.bool,\n  hasList: se.bool,\n  id: se.any,\n  mutationMode: se.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  mutationOptions: se.object,\n  queryOptions: se.object,\n  redirect: se.oneOfType([se.string, se.bool, se.func]),\n  resource: se.string,\n  title: se.node,\n  transform: se.func,\n  sx: se.any\n};\nl();\nimport * as wn from \"react\";\nl();\nimport * as lp from \"react\";\nimport { Children as su, isValidElement as au } from \"react\";\nimport Ge from \"prop-types\";\nimport { Form as KL } from \"ra-core\";\nimport YL from \"lodash/get\";\nl();\nimport * as ut from \"react\";\nimport { Children as kL, cloneElement as wL, isValidElement as AL, useState as $L } from \"react\";\nimport Wt from \"prop-types\";\nimport OL from \"clsx\";\nimport { Routes as DL, Route as ML, matchPath as VL, useResolvedPath as _L, useLocation as HL } from \"react-router-dom\";\nimport { CardContent as zL, Divider as WL } from \"@mui/material\";\nimport { styled as qL } from \"@mui/material/styles\";\nimport { useResourceContext as jL } from \"ra-core\";\nl();\nimport * as Ln from \"react\";\nimport { styled as PL } from \"@mui/material/styles\";\nimport { Children as xL } from \"react\";\nimport Ra from \"prop-types\";\nimport { Toolbar as CL, useMediaQuery as vL } from \"@mui/material\";\nimport IL from \"clsx\";\nvar kn = n(e => {\n  let p = e,\n      {\n    children: t,\n    className: o,\n    resource: r\n  } = p,\n      s = f(p, [\"children\", \"className\", \"resource\"]),\n      a = vL(c => c.breakpoints.down(\"sm\"));\n  return Ln.createElement(FL, i({\n    className: IL({\n      [Br.mobileToolbar]: a,\n      [Br.desktopToolbar]: !a\n    }, o),\n    role: \"toolbar\"\n  }, s), xL.count(t) === 0 ? Ln.createElement(\"div\", {\n    className: Br.defaultToolbar\n  }, Ln.createElement(Ri, null), Ln.createElement(ai, {\n    resource: r\n  })) : t);\n}, \"Toolbar\");\nkn.propTypes = {\n  children: Ra.node,\n  className: Ra.string,\n  record: Ra.any,\n  resource: Ra.string\n};\nvar ha = \"RaToolbar\",\n    Br = {\n  desktopToolbar: `${ha}-desktopToolbar`,\n  mobileToolbar: `${ha}-mobileToolbar`,\n  defaultToolbar: `${ha}-defaultToolbar`\n},\n    FL = PL(CL, {\n  name: ha,\n  overridesResolver: (e, t) => t.root\n})(_ref75 => {\n  let {\n    theme: e\n  } = _ref75;\n  return {\n    backgroundColor: e.palette.mode === \"light\" ? e.palette.grey[100] : e.palette.grey[900],\n    [`&.${Br.desktopToolbar}`]: {},\n    [`&.${Br.mobileToolbar}`]: {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      padding: \"16px\",\n      width: \"100%\",\n      boxSizing: \"border-box\",\n      flexShrink: 0,\n      zIndex: 2\n    },\n    [`& .${Br.defaultToolbar}`]: {\n      flex: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  };\n});\nl();\nimport * as tu from \"react\";\nimport { Children as SL, cloneElement as EL, isValidElement as NL } from \"react\";\nimport Ta from \"prop-types\";\nimport BL from \"@mui/material/Tabs\";\nimport { useParams as LL } from \"react-router-dom\";\nvar np = n(e => {\n  let d = e,\n      {\n    children: t,\n    url: o,\n    syncWithLocation: r,\n    value: s\n  } = d,\n      a = f(d, [\"children\", \"url\", \"syncWithLocation\", \"value\"]),\n      c = LL()[\"*\"];\n  return tu.createElement(BL, i({\n    value: r ? c : s,\n    indicatorColor: \"primary\"\n  }, a), SL.map(t, (m, u) => {\n    if (!NL(m)) return null;\n    let g = sp(m, u);\n    return EL(m, {\n      intent: \"header\",\n      value: r ? g : u,\n      syncWithLocation: r\n    });\n  }));\n}, \"TabbedFormTabs\");\nnp.propTypes = {\n  children: Ta.node,\n  url: Ta.string,\n  tabsWithErrors: Ta.arrayOf(Ta.string)\n};\nvar sp = n((e, t) => e.props.path != null ? e.props.path : t > 0 ? t.toString() : \"\", \"getTabbedFormTabFullPath\");\nvar ap = n(e => {\n  let {\n    children: t,\n    className: o,\n    component: r = XL,\n    formRootPathname: s,\n    syncWithLocation: a = !0,\n    tabs: p = UL,\n    toolbar: c = QL\n  } = e,\n      d = HL(),\n      m = _L(\"\"),\n      u = jL(e),\n      [g, y] = $L(0),\n      b = n((T, C) => {\n    a || y(C);\n  }, \"handleTabChange\"),\n      P = n(() => wL(p, {\n    onChange: b,\n    syncWithLocation: a,\n    url: s,\n    value: g\n  }, t), \"renderTabHeaders\");\n\n  return ut.createElement(GL, {\n    className: OL(\"tabbed-form\", o)\n  }, a ? ut.createElement(DL, null, ut.createElement(ML, {\n    path: \"/*\",\n    element: P()\n  })) : P(), ut.createElement(WL, null), ut.createElement(r, null, kL.map(t, (T, C) => {\n    if (!T) return null;\n    let x = sp(T, C),\n        I = a ? !VL(`${m.pathname}/${x}`, d.pathname) : g !== C;\n    return AL(T) ? ut.cloneElement(T, {\n      intent: \"content\",\n      resource: u,\n      hidden: I,\n      value: a ? x : C\n    }) : null;\n  })), c);\n}, \"TabbedFormView\");\nap.propTypes = {\n  children: Wt.node,\n  className: Wt.string,\n  location: Wt.object,\n  match: Wt.object,\n  resource: Wt.string,\n  tabs: Wt.element,\n  toolbar: Wt.element,\n  validate: Wt.func,\n  value: Wt.number\n};\nvar UL = ut.createElement(np, null),\n    XL = n(_ref76 => {\n  let {\n    children: e\n  } = _ref76;\n  return ut.createElement(zL, null, e);\n}, \"DefaultComponent\"),\n    QL = ut.createElement(kn, null),\n    ou = \"RaTabbedForm\",\n    ip = {\n  errorTabButton: `${ou}-errorTabButton`\n},\n    GL = qL(\"div\", {\n  name: ou,\n  overridesResolver: (e, t) => t.root\n})(_ref77 => {\n  let {\n    theme: e\n  } = _ref77;\n  return {\n    [`& .MuiTab-root.${ip.errorTabButton}`]: {\n      color: e.palette.error.main\n    }\n  };\n});\nl();\nimport { matchPath as ru, useLocation as JL } from \"react-router-dom\";\nvar nu = n(() => {\n  let e = JL(),\n      t = ru(\":resource/create/*\", e.pathname),\n      o = ru(\":resource/:id/*\", e.pathname);\n  return t ? t.pathnameBase : o ? o.pathnameBase : \"\";\n}, \"useFormRootPath\");\nvar ZL = n(e => {\n  let t = nu();\n  return lp.createElement(KL, i({\n    formRootPathname: t\n  }, e), lp.createElement(ap, i({\n    formRootPathname: t\n  }, e)));\n}, \"TabbedForm\");\nZL.propTypes = {\n  children: Ge.node,\n  defaultValues: Ge.oneOfType([Ge.object, Ge.func]),\n  formRootPathname: Ge.string,\n  mutationMode: Ge.oneOf([\"pessimistic\", \"optimistic\", \"undoable\"]),\n  record: Ge.object,\n  redirect: Ge.oneOfType([Ge.string, Ge.bool, Ge.func]),\n  saving: Ge.bool,\n  validate: Ge.func\n};\nvar I7 = n((e, t) => (console.warn(\"Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/EditTutorial.html#grouping-inputs\"), su.toArray(e).reduce((o, r) => au(r) && su.toArray(r.props.children).some(a => au(a) && YL(t, a.props.source)) ? [...o, r.props.label] : o, [])), \"findTabsWithErrors\");\nl();\nimport * as Pa from \"react\";\nimport _e from \"prop-types\";\nimport { FormGroupContextProvider as lk } from \"ra-core\";\nimport { Stack as pk } from \"@mui/material\";\nl();\nimport * as iu from \"react\";\nimport { isValidElement as ek } from \"react\";\nimport Be from \"prop-types\";\nimport { Link as tk, useLocation as ok } from \"react-router-dom\";\nimport { Tab as rk } from \"@mui/material\";\nimport nk from \"clsx\";\nimport { useTranslate as sk, useFormGroup as ak } from \"ra-core\";\nimport { useFormState as ik } from \"react-hook-form\";\nvar pp = n(c => {\n  var d = c,\n      {\n    label: e,\n    value: t,\n    icon: o,\n    className: r,\n    onChange: s,\n    syncWithLocation: a\n  } = d,\n      p = f(d, [\"label\", \"value\", \"icon\", \"className\", \"onChange\", \"syncWithLocation\"]);\n  let m = sk(),\n      u = ok(),\n      {\n    isSubmitted: g\n  } = ik(),\n      y = ak(t.toString()),\n      b = {\n    component: tk,\n    to: S(i({}, u), {\n      pathname: t\n    })\n  };\n  return iu.createElement(rk, i(S(i({\n    label: ek(e) ? e : m(e, {\n      _: e\n    }),\n    value: t,\n    icon: o,\n    className: nk(\"form-tab\", r, {\n      [ip.errorTabButton]: !y.isValid && (y.isTouched || g),\n      error: !y.isValid && (y.isTouched || g)\n    })\n  }, a ? b : {}), {\n    id: `tabheader-${t}`,\n    \"aria-controls\": `tabpanel-${t}`,\n    onChange: s\n  }), p));\n}, \"FormTabHeader\");\npp.propTypes = {\n  className: Be.string,\n  contentClassName: Be.string,\n  children: Be.node,\n  intent: Be.oneOf([\"header\", \"content\"]),\n  hidden: Be.bool,\n  icon: Be.element,\n  label: Be.oneOfType([Be.string, Be.element]).isRequired,\n  margin: Be.oneOf([\"none\", \"dense\", \"normal\"]),\n  path: Be.string,\n  record: Be.object,\n  resource: Be.string,\n  value: Be.oneOfType([Be.string, Be.number]),\n  variant: Be.oneOf([\"standard\", \"outlined\", \"filled\"])\n};\nvar lu = n(e => {\n  let C = e,\n      {\n    className: t,\n    contentClassName: o,\n    children: r,\n    hidden: s,\n    icon: a,\n    intent: p,\n    label: c,\n    onChange: d,\n    path: m,\n    resource: u,\n    syncWithLocation: g,\n    value: y\n  } = C,\n      b = f(C, [\"className\", \"contentClassName\", \"children\", \"hidden\", \"icon\", \"intent\", \"label\", \"onChange\", \"path\", \"resource\", \"syncWithLocation\", \"value\"]);\n  return p === \"header\" ? n(() => Pa.createElement(pp, {\n    label: c,\n    value: y,\n    icon: a,\n    className: t,\n    syncWithLocation: g,\n    onChange: d\n  }), \"renderHeader\")() : n(() => Pa.createElement(lk, {\n    name: y.toString()\n  }, Pa.createElement(pk, i({\n    alignItems: \"flex-start\",\n    style: s ? ck : null,\n    className: o,\n    id: `tabpanel-${y}`,\n    \"aria-labelledby\": `tabheader-${y}`,\n    \"aria-hidden\": s || void 0\n  }, b), r)), \"renderContent\")();\n}, \"FormTab\");\nlu.propTypes = {\n  className: _e.string,\n  contentClassName: _e.string,\n  children: _e.node,\n  intent: _e.oneOf([\"header\", \"content\"]),\n  hidden: _e.bool,\n  icon: _e.element,\n  label: _e.oneOfType([_e.string, _e.element]).isRequired,\n  path: _e.string,\n  resource: _e.string,\n  value: _e.oneOfType([_e.string, _e.number])\n};\nlu.displayName = \"FormTab\";\nvar ck = {\n  display: \"none\"\n};\nl();\nimport * as Lr from \"react\";\nimport Je from \"prop-types\";\nimport { Form as mk } from \"ra-core\";\nimport { Stack as dk, CardContent as uk } from \"@mui/material\";\nvar cp = n(e => {\n  let c = e,\n      {\n    children: t,\n    className: o,\n    component: r = fk,\n    sx: s,\n    toolbar: a = gk\n  } = c,\n      p = f(c, [\"children\", \"className\", \"component\", \"sx\", \"toolbar\"]);\n  return Lr.createElement(mk, i({}, p), Lr.createElement(r, {\n    className: o,\n    sx: s\n  }, Lr.createElement(dk, i({\n    alignItems: \"flex-start\"\n  }, yk(e)), t)), a);\n}, \"SimpleForm\");\ncp.propTypes = {\n  children: Je.node,\n  defaultValues: Je.oneOfType([Je.object, Je.func]),\n  record: Je.object,\n  redirect: Je.oneOfType([Je.string, Je.bool, Je.func]),\n  toolbar: Je.oneOfType([Je.element, Je.oneOf([!1])]),\n  validate: Je.func\n};\nvar fk = n(_ref78 => {\n  let {\n    children: e,\n    sx: t,\n    className: o\n  } = _ref78;\n  return Lr.createElement(uk, {\n    sx: t,\n    className: o\n  }, e);\n}, \"DefaultComponent\"),\n    gk = Lr.createElement(kn, null),\n    yk = n(P => {\n  var T = P,\n      {\n    children: e,\n    className: t,\n    component: o,\n    defaultValues: r,\n    onSubmit: s,\n    record: a,\n    resource: p,\n    reValidateMode: c,\n    sx: d,\n    toolbar: m,\n    validate: u,\n    resolver: g,\n    warnWhenUnsavedChanges: y\n  } = T,\n      b = f(T, [\"children\", \"className\", \"component\", \"defaultValues\", \"onSubmit\", \"record\", \"resource\", \"reValidateMode\", \"sx\", \"toolbar\", \"validate\", \"resolver\", \"warnWhenUnsavedChanges\"]);\n  return b;\n}, \"sanitizeRestProps\");\nvar mp = {\n  form: {\n    component: cp,\n    representation: (e, t) => `        <SimpleForm>\n${t.map(o => `            ${o.getRepresentation()}`).join(`\n`)}\n        </SimpleForm>`\n  },\n  array: {\n    component: o => {\n      var r = o,\n          {\n        children: e\n      } = r,\n          t = f(r, [\"children\"]);\n      return wn.createElement(Ji, i({}, t), wn.createElement(Es, null, e));\n    },\n    representation: (e, t) => `<ArrayInput source=\"${e.source}\"><SimpleFormIterator>${t.map(o => o.getRepresentation()).join(`\n`)}</SimpleFormIterator></ArrayInput>`\n  },\n  boolean: {\n    component: Ns,\n    representation: e => `<BooleanInput source=\"${e.source}\" />`\n  },\n  date: {\n    component: Dl,\n    representation: e => `<DateInput source=\"${e.source}\" />`\n  },\n  email: {\n    component: Ee,\n    representation: e => `<TextInput source=\"${e.source}\" />`\n  },\n  id: {\n    component: Ee,\n    representation: e => `<TextInput source=\"${e.source}\" />`\n  },\n  number: {\n    component: ta,\n    representation: e => `<NumberInput source=\"${e.source}\" />`\n  },\n  reference: {\n    component: na,\n    representation: (e, t) => `<ReferenceInput source=\"${e.source}\" reference=\"${e.reference}\">${t.getRepresentation()}</ReferenceInput>`\n  },\n  referenceChild: {\n    component: e => wn.createElement(En, i({\n      optionText: \"id\"\n    }, e)),\n    representation: () => '<SelectInput optionText=\"id\" />'\n  },\n  referenceArray: {\n    component: ra,\n    representation: e => `<ReferenceArrayInput source=\"${e.source}\" reference=\"${e.reference}\"><TextInput source=\"id\" /></ReferenceArrayInput>`\n  },\n  referenceArrayChild: {\n    component: e => wn.createElement(En, i({\n      optionText: \"id\"\n    }, e)),\n    representation: () => '<SelectInput optionText=\"id\" />'\n  },\n  richText: {\n    component: Ee,\n    representation: e => `<TextInput source=\"${e.source}\" />`\n  },\n  string: {\n    component: Ee,\n    representation: e => `<TextInput source=\"${e.source}\" />`\n  },\n  url: {\n    component: Ee,\n    representation: e => `<TextInput source=\"${e.source}\" />`\n  }\n};\nl();\nimport * as xa from \"react\";\nimport { useEffect as bk, useState as Rk } from \"react\";\nimport pu from \"inflection\";\nimport { useEditController as hk, EditContextProvider as Tk, InferredElement as Pk, useResourceContext as xk, useEditContext as Ck, getElementsFromRecords as vk } from \"ra-core\";\nvar cu = n(e => {\n  let t = xk(e),\n      {\n    record: o\n  } = Ck(),\n      [r, s] = Rk(null);\n  return bk(() => {\n    if (o && !r) {\n      let a = vk([o], mp),\n          p = new Pk(mp.form, null, a);\n      process.env.NODE_ENV !== \"production\" && console.log(`Guessed Edit:\n\nexport const ${pu.capitalize(pu.singularize(t))}Edit = () => (\n    <Edit>\n${p.getRepresentation()}\n    </Edit>\n);`), s(p.getElement());\n    }\n  }, [o, r, t]), xa.createElement(Er, i({}, e), r);\n}, \"EditViewGuesser\");\ncu.propTypes = Er.propTypes;\nvar i8 = n(e => {\n  let t = hk(e);\n  return xa.createElement(Tk, {\n    value: t\n  }, xa.createElement(cu, i({}, e)));\n}, \"EditGuesser\");\nl();\nimport * as va from \"react\";\nimport ft from \"prop-types\";\nimport { ShowBase as Ak, ResourceContextProvider as $k } from \"ra-core\";\nl();\nimport * as kr from \"react\";\nimport Uo from \"prop-types\";\nimport { Card as Sk } from \"@mui/material\";\nimport { styled as Ek } from \"@mui/material/styles\";\nimport du from \"clsx\";\nimport { useShowContext as Nk, useResourceDefinition as Bk } from \"ra-core\";\nl();\nimport * as dp from \"react\";\nimport mu from \"prop-types\";\nimport { useResourceDefinition as Ik, useRecordContext as Fk } from \"ra-core\";\nvar up = n(e => {\n  let t = Fk(e),\n      {\n    hasEdit: o\n  } = Ik();\n  return o ? dp.createElement(Pt, {\n    className: e.className\n  }, dp.createElement(li, {\n    record: t\n  })) : null;\n}, \"ShowActions\");\nup.propTypes = {\n  className: mu.string,\n  record: mu.any\n};\nvar Lk = kr.createElement(up, null),\n    wr = n(e => {\n  let b = e,\n      {\n    actions: t,\n    aside: o,\n    children: r,\n    className: s,\n    component: a = Sk,\n    emptyWhileLoading: p = !1,\n    title: c\n  } = b,\n      d = f(b, [\"actions\", \"aside\", \"children\", \"className\", \"component\", \"emptyWhileLoading\", \"title\"]),\n      {\n    defaultTitle: m,\n    record: u\n  } = Nk(e),\n      {\n    hasEdit: g\n  } = Bk(e),\n      y = typeof t == \"undefined\" && g ? Lk : t;\n  return !r || !u && p ? null : kr.createElement(wk, i({\n    className: du(\"show-page\", s)\n  }, kk(d)), kr.createElement(Ue, {\n    title: c,\n    defaultTitle: m\n  }), y !== !1 && y, kr.createElement(\"div\", {\n    className: du(Ar.main, {\n      [Ar.noActions]: !y\n    })\n  }, kr.createElement(a, {\n    className: Ar.card\n  }, r), o));\n}, \"ShowView\");\nwr.propTypes = {\n  actions: Uo.oneOfType([Uo.element, Uo.bool]),\n  children: Uo.node,\n  className: Uo.string,\n  emptyWhileLoading: Uo.bool,\n  title: Uo.any\n};\nvar kk = n(T => {\n  var C = T,\n      {\n    defaultTitle: e = null,\n    hasCreate: t = null,\n    hasEdit: o = null,\n    hasList: r = null,\n    hasShow: s = null,\n    history: a = null,\n    id: p = null,\n    isLoading: c = null,\n    isFetching: d = null,\n    location: m = null,\n    match: u = null,\n    options: g = null,\n    refetch: y = null,\n    permissions: b = null\n  } = C,\n      P = f(C, [\"defaultTitle\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"history\", \"id\", \"isLoading\", \"isFetching\", \"location\", \"match\", \"options\", \"refetch\", \"permissions\"]);\n  return P;\n}, \"sanitizeRestProps\"),\n    Ca = \"RaShow\",\n    Ar = {\n  main: `${Ca}-main`,\n  noActions: `${Ca}-noActions`,\n  card: `${Ca}-card`\n},\n    wk = Ek(\"div\", {\n  name: Ca,\n  overridesResolver: (e, t) => t.root\n})(_ref79 => {\n  let {\n    theme: e\n  } = _ref79;\n  return {\n    [`& .${Ar.main}`]: {\n      display: \"flex\"\n    },\n    [`& .${Ar.noActions}`]: {\n      marginTop: \"1em\"\n    },\n    [`& .${Ar.card}`]: {\n      flex: \"1 1 auto\"\n    }\n  };\n});\nvar Ok = n(s => {\n  var a = s,\n      {\n    id: e,\n    resource: t,\n    queryOptions: o\n  } = a,\n      r = f(a, [\"id\", \"resource\", \"queryOptions\"]);\n  return va.createElement($k, {\n    value: t\n  }, va.createElement(Ak, {\n    id: e,\n    queryOptions: o\n  }, va.createElement(wr, i({}, r))));\n}, \"Show\");\nOk.propTypes = {\n  actions: ft.oneOfType([ft.element, ft.bool]),\n  children: ft.node.isRequired,\n  className: ft.string,\n  disableAuthentication: ft.bool,\n  emptyWhileLoading: ft.bool,\n  component: ft.elementType,\n  resource: ft.string,\n  title: ft.node,\n  sx: ft.any\n};\nl();\nimport * as jr from \"react\";\nl();\nimport * as uu from \"react\";\nimport { useEffect as Dk, useState as Mk, memo as Vk } from \"react\";\nimport _k from \"lodash/get\";\nimport { ListContextProvider as Hk, useRecordContext as zk } from \"ra-core\";\nl();\nimport Ke from \"prop-types\";\nvar z = {\n  sortBy: Ke.string,\n  sortByOrder: Ke.oneOf([\"ASC\", \"DESC\"]),\n  source: Ke.string,\n  label: Ke.oneOfType([Ke.string, Ke.element, Ke.bool]),\n  sortable: Ke.bool,\n  className: Ke.string,\n  cellClassName: Ke.string,\n  headerClassName: Ke.string,\n  textAlign: Ke.oneOf([\"inherit\", \"left\", \"center\", \"right\", \"justify\"]),\n  emptyText: Ke.string\n};\nvar $r = Vk(e => {\n  let {\n    children: t,\n    resource: o,\n    source: r\n  } = e,\n      s = zk(e),\n      [a, p] = Mk(fu);\n  return Dk(() => {\n    let c = _k(s, r) || fu;\n    p(c);\n  }, [s, r]), uu.createElement(Hk, {\n    value: {\n      data: a,\n      selectedIds: [],\n      sort: {\n        field: null,\n        order: null\n      },\n      displayedFilters: null,\n      filterValues: null,\n      hasCreate: null,\n      hideFilter: null,\n      isFetching: !1,\n      isLoading: !1,\n      onSelect: null,\n      onToggleItem: null,\n      onUnselectItems: null,\n      page: null,\n      perPage: null,\n      resource: o,\n      setFilters: null,\n      setPage: null,\n      setPerPage: null,\n      setSort: null,\n      showFilter: null,\n      total: a.length\n    }\n  }, t);\n});\n$r.propTypes = i({}, z);\n$r.displayName = \"ArrayField\";\nvar fu = [];\nl();\nimport * as Or from \"react\";\nimport { styled as Wk } from \"@mui/material/styles\";\nimport { memo as qk } from \"react\";\nimport An from \"prop-types\";\nimport jk from \"lodash/get\";\nimport Uk from \"@mui/icons-material/Done\";\nimport Xk from \"@mui/icons-material/Clear\";\nimport { Tooltip as Qk, Typography as fp } from \"@mui/material\";\nimport { useTranslate as Gk, useRecordContext as Jk } from \"ra-core\";\nl();\nvar U = n(N => {\n  var F = N,\n      {\n    cellClassName: e,\n    className: t,\n    emptyText: o,\n    formClassName: r,\n    fullWidth: s,\n    headerClassName: a,\n    label: p,\n    linkType: c,\n    link: d,\n    locale: m,\n    record: u,\n    refetch: g,\n    resource: y,\n    sortable: b,\n    sortBy: P,\n    sortByOrder: T,\n    source: C,\n    textAlign: x,\n    translateChoice: I\n  } = F,\n      v = f(F, [\"cellClassName\", \"className\", \"emptyText\", \"formClassName\", \"fullWidth\", \"headerClassName\", \"label\", \"linkType\", \"link\", \"locale\", \"record\", \"refetch\", \"resource\", \"sortable\", \"sortBy\", \"sortByOrder\", \"source\", \"textAlign\", \"translateChoice\"]);\n  return v;\n}, \"sanitizeFieldRestProps\");\nvar Dr = qk(e => {\n  let T = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    valueLabelTrue: s,\n    valueLabelFalse: a,\n    TrueIcon: p = Uk,\n    FalseIcon: c = Xk,\n    looseValue: d = !1\n  } = T,\n      m = f(T, [\"className\", \"emptyText\", \"source\", \"valueLabelTrue\", \"valueLabelFalse\", \"TrueIcon\", \"FalseIcon\", \"looseValue\"]),\n      u = Jk(e),\n      g = Gk(),\n      y = jk(u, r),\n      b = y === !0 || d && y,\n      P = y ? s : a;\n  return P || (P = b ? \"ra.boolean.true\" : \"ra.boolean.false\"), d || y === !1 || y === !0 ? Or.createElement(Yk, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(m)), Or.createElement(Qk, {\n    title: g(P, {\n      _: P\n    })\n  }, b ? Or.createElement(p, {\n    \"data-testid\": \"true\",\n    fontSize: \"small\"\n  }) : Or.createElement(c, {\n    \"data-testid\": \"false\",\n    fontSize: \"small\"\n  }))) : Or.createElement(fp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(m)), o);\n});\nDr.propTypes = S(i(i({}, fp.propTypes), z), {\n  valueLabelFalse: An.string,\n  valueLabelTrue: An.string,\n  TrueIcon: An.elementType,\n  FalseIcon: An.elementType,\n  looseValue: An.bool\n});\nDr.displayName = \"BooleanField\";\nvar Kk = \"RaBooleanField\",\n    Yk = Wk(fp, {\n  name: Kk,\n  overridesResolver: (e, t) => t.root\n})({\n  display: \"inline-flex\",\n  verticalAlign: \"middle\",\n  lineHeight: 0\n});\nl();\nimport * as gp from \"react\";\nimport { styled as Zk } from \"@mui/material/styles\";\nimport { memo as ew } from \"react\";\nimport tw from \"lodash/get\";\nimport ow from \"@mui/material/Chip\";\nimport rw from \"@mui/material/Typography\";\nimport nw from \"clsx\";\nimport { useRecordContext as sw } from \"ra-core\";\nvar $n = ew(e => {\n  let c = e,\n      {\n    className: t,\n    source: o,\n    emptyText: r\n  } = c,\n      s = f(c, [\"className\", \"source\", \"emptyText\"]),\n      a = sw(e),\n      p = tw(a, o);\n  return p == null && r ? gp.createElement(rw, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(s)), r) : gp.createElement(aw, i({\n    className: nw(yu.chip, t),\n    label: p\n  }, U(s)));\n});\n$n.propTypes = i(i({}, $n.propTypes), z);\n$n.displayName = \"ChipField\";\nvar gu = \"RaChipField\",\n    yu = {\n  chip: `${gu}-chip`\n},\n    aw = Zk(ow, {\n  name: gu,\n  overridesResolver: (e, t) => t.root\n})({\n  [`&.${yu.chip}`]: {\n    margin: 4,\n    cursor: \"inherit\"\n  }\n});\nl();\nimport * as yp from \"react\";\nimport { memo as iw } from \"react\";\nimport Mr from \"prop-types\";\nimport lw from \"lodash/get\";\nimport { Typography as bp } from \"@mui/material\";\nimport { useRecordContext as pw } from \"ra-core\";\nvar Vr = iw(e => {\n  let b = e,\n      {\n    className: t,\n    emptyText: o,\n    locales: r,\n    options: s,\n    showTime: a = !1,\n    source: p\n  } = b,\n      c = f(b, [\"className\", \"emptyText\", \"locales\", \"options\", \"showTime\", \"source\"]),\n      d = pw(e);\n  if (!d) return null;\n  let m = lw(d, p);\n  if (m == null || m === \"\") return o ? yp.createElement(bp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(c)), o) : null;\n  let u = m instanceof Date ? m : new Date(m),\n      g = s;\n  typeof m == \"string\" && m.length <= 10 && !a && !s && (g = {\n    timeZone: \"UTC\"\n  });\n  let y = a ? bu ? u.toLocaleString(r, s) : u.toLocaleString() : bu ? u.toLocaleDateString(r, g) : u.toLocaleDateString();\n  return yp.createElement(bp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(c)), y);\n});\nVr.propTypes = S(i(i({}, bp.propTypes), z), {\n  locales: Mr.oneOfType([Mr.string, Mr.arrayOf(Mr.string)]),\n  options: Mr.object,\n  showTime: Mr.bool\n});\nVr.displayName = \"DateField\";\n\nvar bu = (() => {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e instanceof RangeError;\n  }\n\n  return !1;\n})();\n\nl();\nimport * as Rp from \"react\";\nimport { memo as cw } from \"react\";\nimport mw from \"lodash/get\";\nimport dw from \"@mui/material/Typography\";\nimport { Link as uw } from \"@mui/material\";\nimport { useRecordContext as fw } from \"ra-core\";\n\nvar _r = cw(e => {\n  let c = e,\n      {\n    className: t,\n    source: o,\n    emptyText: r\n  } = c,\n      s = f(c, [\"className\", \"source\", \"emptyText\"]),\n      a = fw(e),\n      p = mw(a, o);\n  return p == null ? r ? Rp.createElement(dw, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(s)), r) : null : Rp.createElement(uw, i({\n    className: t,\n    href: `mailto:${p}`,\n    onClick: gw,\n    variant: \"body2\"\n  }, U(s)), p);\n});\n\n_r.propTypes = z;\n_r.displayName = \"EmailField\";\nvar gw = n(e => e.stopPropagation(), \"stopPropagation\");\nl();\nimport * as io from \"react\";\nimport { styled as Ru } from \"@mui/material/styles\";\nimport lo from \"prop-types\";\nimport Ia from \"lodash/get\";\nimport yw from \"@mui/material/Typography\";\nimport { useRecordContext as bw } from \"ra-core\";\nvar Rw = n(e => {\n  let P = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    title: s,\n    src: a,\n    target: p,\n    download: c,\n    ping: d,\n    rel: m\n  } = P,\n      u = f(P, [\"className\", \"emptyText\", \"source\", \"title\", \"src\", \"target\", \"download\", \"ping\", \"rel\"]),\n      g = bw(e),\n      y = Ia(g, r);\n  if (!y) return o ? io.createElement(yw, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(u)), o) : io.createElement(hu, i({\n    className: t\n  }, U(u)));\n  if (Array.isArray(y)) return io.createElement(Tw, i({\n    className: t\n  }, U(u)), y.map((T, C) => {\n    let x = Ia(T, s) || s,\n        I = Ia(T, a) || s;\n    return io.createElement(\"li\", {\n      key: C\n    }, io.createElement(\"a\", {\n      href: I,\n      title: x,\n      target: p,\n      download: c,\n      ping: d,\n      rel: m\n    }, x));\n  }));\n  let b = Ia(g, s) || s;\n  return io.createElement(hu, i({\n    className: t\n  }, U(u)), io.createElement(\"a\", {\n    href: y,\n    title: b,\n    target: p,\n    download: c,\n    ping: d,\n    rel: m\n  }, b));\n}, \"FileField\");\nRw.propTypes = S(i({}, z), {\n  src: lo.string,\n  title: lo.string,\n  target: lo.string,\n  download: lo.oneOfType([lo.bool, lo.string]),\n  ping: lo.string,\n  rel: lo.string\n});\nvar hw = \"RaFileField\",\n    hu = Ru(\"div\", {\n  name: hw,\n  overridesResolver: (e, t) => t.root\n})({\n  display: \"inline-block\"\n}),\n    Tw = Ru(\"ul\")({\n  display: \"inline-block\"\n});\nl();\nimport * as Tu from \"react\";\nimport { useMemo as Pw } from \"react\";\nimport { useRecordContext as xw } from \"ra-core\";\nimport Cw from \"prop-types\";\nimport Pu from \"@mui/material/Typography\";\nvar vw = n(e => {\n  let p = e,\n      {\n    className: t,\n    source: o = \"\",\n    render: r\n  } = p,\n      s = f(p, [\"className\", \"source\", \"render\"]),\n      a = xw(e);\n  return Pw(() => a ? Tu.createElement(Pu, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(s)), r(a, o)) : null, [t, a, o, r, s]);\n}, \"FunctionField\");\nvw.propTypes = S(i(i({}, Pu.propTypes), z), {\n  render: Cw.func.isRequired\n});\nl();\nimport * as po from \"react\";\nimport { styled as Iw } from \"@mui/material/styles\";\nimport { Box as Fw, Typography as Sw } from \"@mui/material\";\nimport xu from \"prop-types\";\nimport Fa from \"lodash/get\";\nimport Ew from \"clsx\";\nimport { useRecordContext as Nw } from \"ra-core\";\nvar Cu = n(e => {\n  let u = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    src: s,\n    title: a\n  } = u,\n      p = f(u, [\"className\", \"emptyText\", \"source\", \"src\", \"title\"]),\n      c = Nw(e),\n      d = Fa(c, r);\n  if (!d) return o ? po.createElement(Sw, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(p)), o) : po.createElement(\"div\", i({\n    className: t\n  }, U(p)));\n  if (Array.isArray(d)) return po.createElement(Bw, i({\n    className: Ew(On.list, t)\n  }, U(p)), d.map((g, y) => {\n    let b = Fa(g, a) || a,\n        P = Fa(g, s) || a;\n    return po.createElement(\"li\", {\n      key: y\n    }, po.createElement(\"img\", {\n      alt: b,\n      title: b,\n      src: P,\n      className: On.image\n    }));\n  }));\n  let m = Fa(c, a) || a;\n  return po.createElement(Fw, i({\n    className: t\n  }, U(p)), po.createElement(\"img\", {\n    title: m,\n    alt: m,\n    src: d,\n    className: On.image\n  }));\n}, \"ImageField\");\nCu.displayName = \"ImageField\";\nCu.propTypes = S(i({}, z), {\n  src: xu.string,\n  title: xu.string\n});\nvar hp = \"RaImageField\",\n    On = {\n  list: `${hp}-list`,\n  image: `${hp}-image`\n},\n    Bw = Iw(\"ul\", {\n  name: hp,\n  overridesResolver: (e, t) => t.root\n})({\n  [`&.${On.list}`]: {\n    display: \"flex\",\n    listStyleType: \"none\"\n  },\n  [`& .${On.image}`]: {\n    margin: \"0.5rem\",\n    maxHeight: \"10rem\"\n  }\n});\nl();\nimport * as Tp from \"react\";\nimport { memo as Lw } from \"react\";\nimport Dn from \"prop-types\";\nimport kw from \"lodash/get\";\nimport Pp from \"@mui/material/Typography\";\nimport { useRecordContext as ww } from \"ra-core\";\nvar Xo = Lw(e => {\n  let u = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    locales: s,\n    options: a,\n    textAlign: p\n  } = u,\n      c = f(u, [\"className\", \"emptyText\", \"source\", \"locales\", \"options\", \"textAlign\"]),\n      d = ww(e);\n  if (!d) return null;\n  let m = kw(d, r);\n  return m == null ? o ? Tp.createElement(Pp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(c)), o) : null : Tp.createElement(Pp, i({\n    variant: \"body2\",\n    component: \"span\",\n    className: t\n  }, U(c)), Aw ? m.toLocaleString(s, a) : m);\n});\nXo.displayName = \"NumberField\";\nXo.defaultProps = {\n  textAlign: \"right\"\n};\nXo.propTypes = S(i(i({}, Pp.propTypes), z), {\n  locales: Dn.oneOfType([Dn.string, Dn.arrayOf(Dn.string)]),\n  options: Dn.object\n});\nvar Aw = !!(typeof Intl == \"object\" && Intl && typeof Intl.NumberFormat == \"function\");\nl();\nimport * as Qo from \"react\";\nimport { memo as $w } from \"react\";\nimport Et from \"prop-types\";\nimport { ListContextProvider as Ow, useListContext as Dw, useReferenceArrayFieldController as Mw, ResourceContextProvider as Vw, useRecordContext as _w } from \"ra-core\";\nimport { styled as Hw } from \"@mui/material/styles\";\nvar Mn = n(e => {\n  let {\n    filter: t,\n    page: o = 1,\n    perPage: r,\n    reference: s,\n    resource: a,\n    sort: p,\n    source: c\n  } = e,\n      d = _w(e),\n      m = Mw({\n    filter: t,\n    page: o,\n    perPage: r,\n    record: d,\n    reference: s,\n    resource: a,\n    sort: p,\n    source: c\n  });\n\n  return Qo.createElement(Vw, {\n    value: s\n  }, Qo.createElement(Ow, {\n    value: m\n  }, Qo.createElement(Ww, i({}, e))));\n}, \"ReferenceArrayField\");\nMn.propTypes = S(i({}, z), {\n  className: Et.string,\n  children: Et.element.isRequired,\n  label: z.label,\n  record: Et.any,\n  reference: Et.string.isRequired,\n  resource: Et.string,\n  sortBy: Et.string,\n  sortByOrder: z.sortByOrder,\n  source: Et.string.isRequired\n});\nvar vu = n(e => {\n  let {\n    children: t,\n    pagination: o,\n    className: r,\n    sx: s\n  } = e,\n      {\n    isLoading: a,\n    total: p\n  } = Dw(e);\n  return Qo.createElement(zw, {\n    className: r,\n    sx: s\n  }, a ? Qo.createElement(ke, {\n    className: Fu.progress\n  }) : Qo.createElement(\"span\", null, t, o && p !== void 0 ? o : null));\n}, \"ReferenceArrayFieldView\");\nvu.propTypes = {\n  className: Et.string,\n  children: Et.element.isRequired,\n  reference: Et.string.isRequired\n};\nvar Iu = \"RaReferenceArrayField\",\n    Fu = {\n  progress: `${Iu}-progress`\n},\n    zw = Hw(\"div\", {\n  name: Iu,\n  overridesResolver: (e, t) => t.root\n})(_ref80 => {\n  let {\n    theme: e\n  } = _ref80;\n  return {\n    [`& .${Fu.progress}`]: {\n      marginTop: e.spacing(2)\n    }\n  };\n}),\n    Ww = $w(vu);\nl();\nimport * as Ye from \"react\";\nimport { styled as Kw } from \"@mui/material/styles\";\nimport { memo as Yw } from \"react\";\nimport Y from \"prop-types\";\nimport Zw from \"lodash/get\";\nimport { Typography as eA } from \"@mui/material\";\nimport tA from \"@mui/icons-material/Error\";\nimport { useReference as oA, ResourceContextProvider as rA, RecordContextProvider as Eu, useRecordContext as nA, useCreatePath as sA } from \"ra-core\";\nl();\nimport * as xp from \"react\";\nimport Vn from \"prop-types\";\nimport qw from \"clsx\";\nimport { Link as jw } from \"react-router-dom\";\nimport { styled as Uw, Link as Xw } from \"@mui/material\";\n\nvar _n = n(e => {\n  let a = e,\n      {\n    to: t,\n    children: o,\n    className: r\n  } = a,\n      s = f(a, [\"to\", \"children\", \"className\"]);\n  return xp.createElement(Jw, i({\n    to: t,\n    className: qw(Su.link, r)\n  }, s), o);\n}, \"Link\"),\n    Qw = \"RaLink\",\n    Su = {\n  link: `${Qw}-link`\n},\n    Gw = n(e => xp.createElement(Xw, i({\n  component: jw\n}, e)), \"MuiRouterLink\"),\n    Jw = Uw(Gw)(_ref81 => {\n  let {\n    theme: e\n  } = _ref81;\n  return {\n    [`&.${Su.link}`]: {\n      textDecoration: \"none\"\n    }\n  };\n});\n\n_n.propTypes = {\n  className: Vn.string,\n  children: Vn.node,\n  to: Vn.oneOfType([Vn.string, Vn.object])\n};\nvar Hr = n(e => {\n  let p = e,\n      {\n    source: t,\n    emptyText: o\n  } = p,\n      r = f(p, [\"source\", \"emptyText\"]),\n      s = nA(e),\n      a = Zw(s, t);\n  return a == null ? o ? Ye.createElement(eA, {\n    component: \"span\",\n    variant: \"body2\"\n  }, o) : null : Ye.createElement(aA, S(i({}, r), {\n    record: s,\n    id: a\n  }));\n}, \"ReferenceField\");\nHr.propTypes = {\n  children: Y.element.isRequired,\n  className: Y.string,\n  cellClassName: Y.string,\n  headerClassName: Y.string,\n  label: z.label,\n  record: Y.any,\n  reference: Y.string.isRequired,\n  resource: Y.string,\n  sortBy: Y.string,\n  sortByOrder: z.sortByOrder,\n  source: Y.string.isRequired,\n  translateChoice: Y.oneOfType([Y.func, Y.bool]),\n  link: Y.oneOfType([Y.string, Y.bool, Y.func]).isRequired\n};\nHr.defaultProps = {\n  link: \"edit\"\n};\nvar aA = n(p => {\n  var c = p,\n      {\n    children: e,\n    id: t,\n    record: o,\n    reference: r,\n    link: s\n  } = c,\n      a = f(c, [\"children\", \"id\", \"record\", \"reference\", \"link\"]);\n  if (Ye.Children.count(e) !== 1) throw new Error(\"<ReferenceField> only accepts a single child\");\n  let d = sA(),\n      m = s === !1 ? !1 : d({\n    resource: r,\n    id: t,\n    type: typeof s == \"function\" ? s(o, r) : s\n  });\n  return Ye.createElement(rA, {\n    value: r\n  }, Ye.createElement(lA, S(i(i({\n    reference: r\n  }, a), oA({\n    reference: r,\n    id: t\n  })), {\n    resourceLinkPath: m\n  }), e));\n}, \"NonEmptyReferenceField\"),\n    iA = n(e => e.stopPropagation(), \"stopPropagation\"),\n    Sa = n(e => {\n  let {\n    children: t,\n    className: o,\n    error: r,\n    isLoading: s,\n    referenceRecord: a,\n    resourceLinkPath: p,\n    sx: c\n  } = e;\n  return r ? Ye.createElement(tA, {\n    \"aria-errormessage\": r.message ? r.message : r,\n    role: \"presentation\",\n    color: \"error\",\n    fontSize: \"small\"\n  }) : s ? Ye.createElement(ke, null) : a ? p ? Ye.createElement(pA, {\n    className: o,\n    sx: c\n  }, Ye.createElement(Eu, {\n    value: a\n  }, Ye.createElement(_n, {\n    to: p,\n    className: Bu.link,\n    onClick: iA\n  }, t))) : Ye.createElement(Eu, {\n    value: a\n  }, t) : null;\n}, \"ReferenceFieldView\");\nSa.propTypes = {\n  children: Y.element,\n  className: Y.string,\n  isLoading: Y.bool,\n  record: Y.any,\n  reference: Y.string,\n  referenceRecord: Y.any,\n  resource: Y.string,\n  resourceLinkPath: Y.oneOfType([Y.string, Y.oneOf([!1])]),\n  source: Y.string,\n  translateChoice: Y.oneOfType([Y.func, Y.bool])\n};\nvar lA = Yw(Sa),\n    Nu = \"RaReferenceField\",\n    Bu = {\n  link: `${Nu}-link`\n},\n    pA = Kw(\"span\", {\n  name: Nu,\n  overridesResolver: (e, t) => t.root\n})(_ref82 => {\n  let {\n    theme: e\n  } = _ref82;\n  return {\n    [`& .${Bu.link}`]: {\n      \"& > *\": {\n        color: e.palette.primary.main\n      }\n    }\n  };\n});\nl();\nimport zr from \"react\";\nimport ae from \"prop-types\";\nimport { useReferenceManyFieldController as cA, ListContextProvider as mA, ResourceContextProvider as dA, useRecordContext as uA } from \"ra-core\";\nvar Lu = n(e => {\n  let {\n    children: t,\n    filter: o,\n    page: r = 1,\n    perPage: s,\n    reference: a,\n    resource: p,\n    sort: c,\n    source: d,\n    target: m\n  } = e,\n      u = uA(e);\n  if (zr.Children.count(t) !== 1) throw new Error(\"<ReferenceManyField> only accepts a single child (like <Datagrid>)\");\n  let g = cA({\n    filter: o,\n    page: r,\n    perPage: s,\n    record: u,\n    reference: a,\n    resource: p,\n    sort: c,\n    source: d,\n    target: m\n  });\n  return zr.createElement(dA, {\n    value: a\n  }, zr.createElement(mA, {\n    value: g\n  }, zr.createElement(ku, i(i({}, e), g))));\n}, \"ReferenceManyField\");\nLu.propTypes = {\n  children: ae.element.isRequired,\n  className: ae.string,\n  filter: ae.object,\n  label: z.label,\n  perPage: ae.number,\n  record: ae.any,\n  reference: ae.string.isRequired,\n  resource: ae.string,\n  sortBy: ae.string,\n  sortByOrder: z.sortByOrder,\n  source: ae.string.isRequired,\n  sort: ae.exact({\n    field: ae.string,\n    order: ae.string\n  }),\n  target: ae.string.isRequired\n};\nLu.defaultProps = {\n  filter: {},\n  perPage: 25,\n  sort: {\n    field: \"id\",\n    order: \"DESC\"\n  },\n  source: \"id\"\n};\nvar ku = n(e => {\n  let {\n    children: t,\n    pagination: o\n  } = e;\n  return zr.createElement(zr.Fragment, null, t, o && e.total !== void 0 ? o : null);\n}, \"ReferenceManyFieldView\");\nku.propTypes = {\n  children: ae.element,\n  className: ae.string,\n  sort: ae.exact({\n    field: ae.string,\n    order: ae.string\n  }),\n  data: ae.any,\n  isLoading: ae.bool,\n  pagination: ae.element,\n  reference: ae.string,\n  setSort: ae.func\n};\nl();\nimport Cp from \"react\";\nimport Wr from \"prop-types\";\nimport { Typography as fA } from \"@mui/material\";\nimport { useReferenceOneFieldController as gA, useRecordContext as yA, ResourceContextProvider as bA, useCreatePath as RA } from \"ra-core\";\nvar wu = n(e => {\n  let {\n    children: t,\n    reference: o,\n    source: r,\n    target: s,\n    emptyText: a,\n    link: p = !1\n  } = e,\n      c = yA(e),\n      d = RA(),\n      {\n    isLoading: m,\n    isFetching: u,\n    referenceRecord: g,\n    error: y,\n    refetch: b\n  } = gA({\n    record: c,\n    reference: o,\n    source: r,\n    target: s\n  }),\n      P = p === !1 ? !1 : d({\n    resource: o,\n    id: g == null ? void 0 : g.id,\n    type: typeof p == \"function\" ? p(c, o) : p\n  });\n  return !c || !m && g == null ? a ? Cp.createElement(fA, {\n    component: \"span\",\n    variant: \"body2\"\n  }, a) : null : Cp.createElement(bA, {\n    value: o\n  }, Cp.createElement(Sa, {\n    isLoading: m,\n    isFetching: u,\n    referenceRecord: g,\n    resourceLinkPath: P,\n    reference: o,\n    refetch: b,\n    error: y\n  }, t));\n}, \"ReferenceOneField\");\nwu.propTypes = {\n  children: Wr.element.isRequired,\n  className: Wr.string,\n  label: z.label,\n  record: Wr.any,\n  reference: Wr.string.isRequired,\n  source: Wr.string.isRequired,\n  target: Wr.string.isRequired\n};\nwu.defaultProps = {\n  source: \"id\"\n};\nl();\nimport * as vp from \"react\";\nimport { memo as hA } from \"react\";\nimport TA from \"prop-types\";\nimport PA from \"lodash/get\";\nimport Au from \"@mui/material/Typography\";\nimport { useRecordContext as xA } from \"ra-core\";\nvar Ea = hA(e => {\n  let d = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    stripTags: s = !1\n  } = d,\n      a = f(d, [\"className\", \"emptyText\", \"source\", \"stripTags\"]),\n      p = xA(e),\n      c = PA(p, r);\n  return vp.createElement(Au, i({\n    className: t,\n    variant: \"body2\",\n    component: \"span\"\n  }, U(a)), c == null && o ? o : s ? CA(c) : vp.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: c\n    }\n  }));\n});\nEa.propTypes = S(i(i({}, Au.propTypes), z), {\n  stripTags: TA.bool\n});\nEa.displayName = \"RichTextField\";\nvar CA = n(e => e ? e.replace(/<[^>]+>/gm, \"\") : \"\", \"removeTags\");\nl();\nimport * as Ip from \"react\";\nimport { memo as vA } from \"react\";\nimport co from \"prop-types\";\nimport IA from \"lodash/get\";\nimport { useChoices as FA, useRecordContext as SA } from \"ra-core\";\nimport { Typography as Fp } from \"@mui/material\";\nvar Sp = vA(e => {\n  let T = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r,\n    choices: s,\n    optionValue: a,\n    optionText: p,\n    translateChoice: c\n  } = T,\n      d = f(T, [\"className\", \"emptyText\", \"source\", \"choices\", \"optionValue\", \"optionText\", \"translateChoice\"]),\n      m = SA(e),\n      u = IA(m, r),\n      {\n    getChoiceText: g,\n    getChoiceValue: y\n  } = FA({\n    optionText: p,\n    optionValue: a,\n    translateChoice: c\n  }),\n      b = s.find(C => y(C) === u);\n  if (!b) return o ? Ip.createElement(Fp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(d)), o) : null;\n  let P = g(b);\n  return Ip.createElement(Fp, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(d)), P);\n});\nSp.defaultProps = {\n  optionText: \"name\",\n  optionValue: \"id\",\n  translateChoice: !0\n};\nSp.propTypes = S(i(i({}, Fp.propTypes), z), {\n  choices: co.arrayOf(co.object).isRequired,\n  optionText: co.oneOfType([co.string, co.func, co.element]),\n  optionValue: co.string,\n  translateChoice: co.bool\n});\nSp.displayName = \"SelectField\";\nl();\nimport * as $u from \"react\";\nimport { memo as EA } from \"react\";\nimport NA from \"lodash/get\";\nimport Ou from \"@mui/material/Typography\";\nimport { useRecordContext as BA } from \"ra-core\";\nvar at = EA(e => {\n  let c = e,\n      {\n    className: t,\n    source: o,\n    emptyText: r\n  } = c,\n      s = f(c, [\"className\", \"source\", \"emptyText\"]),\n      a = BA(e),\n      p = NA(a, o);\n  return $u.createElement(Ou, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(s)), p != null && typeof p != \"string\" ? JSON.stringify(p) : p || r);\n});\nat.displayName = \"TextField\";\nat.propTypes = i(i({}, Ou.propTypes), z);\nl();\nimport * as Hn from \"react\";\nimport { styled as XA } from \"@mui/material/styles\";\nimport { TranslatableContextProvider as QA, useTranslatable as GA, useRecordContext as JA } from \"ra-core\";\nl();\nimport * as Na from \"react\";\nimport { styled as $A } from \"@mui/material/styles\";\nimport OA from \"@mui/material/AppBar\";\nimport DA from \"@mui/material/Tabs\";\nimport { useTranslatableContext as MA } from \"ra-core\";\nl();\nimport LA from \"react\";\nimport kA from \"@mui/material/Tab\";\nimport { useTranslate as wA } from \"ra-core\";\nimport { capitalize as AA } from \"inflection\";\nvar Du = n(e => {\n  let a = e,\n      {\n    locale: t,\n    groupKey: o = \"\"\n  } = a,\n      r = f(a, [\"locale\", \"groupKey\"]),\n      s = wA();\n  return LA.createElement(kA, i({\n    id: `translatable-header-${o}${t}`,\n    label: s(`ra.locales.${o}${t}`, {\n      _: AA(t)\n    })\n  }, r));\n}, \"TranslatableFieldsTab\");\n\nvar Mu = n(e => {\n  let {\n    groupKey: t,\n    TabsProps: o,\n    className: r\n  } = e,\n      {\n    locales: s,\n    selectLocale: a,\n    selectedLocale: p\n  } = MA();\n  return Na.createElement(_A, {\n    color: \"default\",\n    position: \"static\",\n    className: r\n  }, Na.createElement(DA, i({\n    value: p,\n    onChange: n((d, m) => {\n      a(m);\n    }, \"handleChange\"),\n    indicatorColor: \"primary\",\n    textColor: \"primary\"\n  }, o), s.map(d => Na.createElement(Du, {\n    key: d,\n    value: d,\n    locale: d,\n    groupKey: t\n  }))));\n}, \"TranslatableFieldsTabs\"),\n    VA = \"RaTranslatableFieldsTabs\",\n    _A = $A(OA, {\n  name: VA,\n  overridesResolver: (e, t) => t.root\n})(_ref83 => {\n  let {\n    theme: e\n  } = _ref83;\n  return {\n    boxShadow: \"none\",\n    borderRadius: 0,\n    borderTopLeftRadius: e.shape.borderRadius,\n    borderTopRightRadius: e.shape.borderRadius,\n    border: `1px solid ${e.palette.divider}`\n  };\n});\n\nl();\nimport * as Ba from \"react\";\nimport { styled as HA } from \"@mui/material/styles\";\nimport { Children as zA, cloneElement as Vu, isValidElement as WA } from \"react\";\nimport { useTranslatableContext as qA } from \"ra-core\";\n\nvar _u = n(e => {\n  let g = e,\n      {\n    children: t,\n    groupKey: o = \"\",\n    locale: r,\n    record: s,\n    resource: a,\n    className: p\n  } = g,\n      c = f(g, [\"children\", \"groupKey\", \"locale\", \"record\", \"resource\", \"className\"]),\n      {\n    selectedLocale: d,\n    getLabel: m,\n    getSource: u\n  } = qA();\n  return Ba.createElement(UA, i({\n    role: \"tabpanel\",\n    hidden: d !== r,\n    id: `translatable-content-${o}${r}`,\n    \"aria-labelledby\": `translatable-header-${o}${r}`,\n    className: p\n  }, c), zA.map(t, y => y && WA(y) ? Ba.createElement(\"div\", {\n    key: y.props.source\n  }, y.props.addLabel ? Ba.createElement(ye, {\n    resource: a,\n    label: y.props.label,\n    source: y.props.source\n  }, Vu(y, S(i({}, y.props), {\n    label: m(y.props.source),\n    record: s,\n    source: u(y.props.source, r)\n  }))) : typeof y == \"string\" ? y : Vu(y, S(i({}, y.props), {\n    label: m(y.props.source),\n    record: s,\n    source: u(y.props.source, r)\n  }))) : null));\n}, \"TranslatableFieldsTabContent\"),\n    jA = \"RaTranslatableFieldsTabContent\",\n    UA = HA(\"div\", {\n  name: jA,\n  overridesResolver: (e, t) => t.root\n})(_ref84 => {\n  let {\n    theme: e\n  } = _ref84;\n  return {\n    flexGrow: 1,\n    padding: e.spacing(2),\n    borderRadius: 0,\n    borderBottomLeftRadius: e.shape.borderRadius,\n    borderBottomRightRadius: e.shape.borderRadius,\n    border: `1px solid ${e.palette.divider}`,\n    borderTop: 0\n  };\n});\n\nvar Xte = n(e => {\n  let {\n    defaultLocale: t,\n    locales: o,\n    groupKey: r = \"\",\n    selector: s = Hn.createElement(Mu, {\n      groupKey: r\n    }),\n    children: a,\n    resource: p,\n    className: c\n  } = e,\n      d = JA(e),\n      m = GA({\n    defaultLocale: t,\n    locales: o\n  });\n  return Hn.createElement(YA, {\n    className: c\n  }, Hn.createElement(QA, {\n    value: m\n  }, s, o.map(u => Hn.createElement(_u, {\n    key: u,\n    locale: u,\n    record: d,\n    resource: p,\n    groupKey: r\n  }, a))));\n}, \"TranslatableFields\"),\n    KA = \"RaTranslatableFields\",\n    YA = XA(\"div\", {\n  name: KA,\n  overridesResolver: (e, t) => t.root\n})(_ref85 => {\n  let {\n    theme: e\n  } = _ref85;\n  return {\n    flexGrow: 1,\n    marginTop: e.spacing(1),\n    marginBottom: e.spacing(.5)\n  };\n});\nl();\nimport * as Ep from \"react\";\nimport { memo as ZA } from \"react\";\nimport e$ from \"lodash/get\";\nimport { Typography as t$, Link as o$ } from \"@mui/material\";\nimport { useRecordContext as r$ } from \"ra-core\";\nvar qr = ZA(e => {\n  let c = e,\n      {\n    className: t,\n    emptyText: o,\n    source: r\n  } = c,\n      s = f(c, [\"className\", \"emptyText\", \"source\"]),\n      a = r$(e),\n      p = e$(a, r);\n  return p == null ? Ep.createElement(t$, i({\n    component: \"span\",\n    variant: \"body2\",\n    className: t\n  }, U(s)), o) : Ep.createElement(o$, i({\n    className: t,\n    href: p,\n    variant: \"body2\"\n  }, U(s)), p);\n});\nqr.propTypes = z;\nqr.displayName = \"UrlField\";\nl();\nimport * as La from \"react\";\nvar Hu = n(_ref86 => {\n  let {\n    children: e\n  } = _ref86;\n  return La.createElement(La.Fragment, null, e);\n}, \"WrapperField\");\nHu.displayName = \"WrapperField\";\nHu.propTypes = z;\nl();\nimport * as zn from \"react\";\nimport { Children as n$, isValidElement as s$ } from \"react\";\nimport { styled as a$ } from \"@mui/material/styles\";\nimport { Stack as i$ } from \"@mui/material\";\nimport Wn from \"prop-types\";\nimport l$ from \"clsx\";\nimport { useRecordContext as p$, OptionalRecordContextProvider as c$ } from \"ra-core\";\nvar Np = n(e => {\n  let c = e,\n      {\n    className: t,\n    children: o,\n    divider: r,\n    spacing: s = 1\n  } = c,\n      a = f(c, [\"className\", \"children\", \"divider\", \"spacing\"]);\n  return p$(e) ? zn.createElement(c$, {\n    value: e.record\n  }, zn.createElement(m$, i({\n    className: t\n  }, d$(a)), zn.createElement(i$, {\n    spacing: s,\n    divider: r,\n    className: ka.stack\n  }, n$.map(o, d => d && s$(d) ? zn.createElement(ye, {\n    key: d.props.source,\n    className: l$(\"ra-field\", d.props.source && `ra-field-${d.props.source}`, ka.row, d.props.className)\n  }, d) : null)))) : null;\n}, \"SimpleShowLayout\");\nNp.propTypes = {\n  children: Wn.node,\n  className: Wn.string,\n  record: Wn.object,\n  spacing: Wn.any,\n  sx: Wn.any\n};\nvar Bp = \"RaSimpleShowLayout\",\n    ka = {\n  stack: `${Bp}-stack`,\n  row: `${Bp}-row`\n},\n    m$ = a$(\"div\", {\n  name: Bp,\n  overridesResolver: (e, t) => t.root\n})(_ref87 => {\n  let {\n    theme: e\n  } = _ref87;\n  return {\n    flex: 1,\n    padding: `${e.spacing(1)} ${e.spacing(2)}`,\n    [`& .${ka.stack}`]: {},\n    [`& .${ka.row}`]: {\n      display: \"inline\"\n    }\n  };\n}),\n    d$ = n(a => {\n  var p = a,\n      {\n    record: e,\n    resource: t,\n    initialValues: o,\n    translate: r\n  } = p,\n      s = f(p, [\"record\", \"resource\", \"initialValues\", \"translate\"]);\n  return s;\n}, \"sanitizeRestProps\");\nvar Lp = {\n  show: {\n    component: e => jr.createElement(Np, i({}, e)),\n    representation: (e, t) => `        <SimpleShowLayout>\n${t.map(o => `            ${o.getRepresentation()}`).join(`\n`)}\n        </SimpleShowLayout>`\n  },\n  array: {\n    component: o => {\n      var r = o,\n          {\n        children: e\n      } = r,\n          t = f(r, [\"children\"]);\n      return jr.createElement($r, i({}, t), jr.createElement(to, null, e));\n    },\n    representation: (e, t) => `<ArrayField source=\"${e.source}\"><Datagrid>${t.map(o => o.getRepresentation()).join(`\n`)}</Datagrid></ArrayField>`\n  },\n  boolean: {\n    component: Dr,\n    representation: e => `<BooleanField source=\"${e.source}\" />`\n  },\n  date: {\n    component: Vr,\n    representation: e => `<DateField source=\"${e.source}\" />`\n  },\n  email: {\n    component: _r,\n    representation: e => `<EmailField source=\"${e.source}\" />`\n  },\n  id: {\n    component: at,\n    representation: e => `<TextField source=\"${e.source}\" />`\n  },\n  number: {\n    component: Xo,\n    representation: e => `<NumberField source=\"${e.source}\" />`\n  },\n  reference: {\n    component: Hr,\n    representation: e => `<ReferenceField source=\"${e.source}\" reference=\"${e.reference}\"><TextField source=\"id\" /></ReferenceField>`\n  },\n  referenceChild: {\n    component: e => jr.createElement(at, i({\n      source: \"id\"\n    }, e)),\n    representation: () => '<TextField source=\"id\" />'\n  },\n  referenceArray: {\n    component: Mn,\n    representation: e => `<ReferenceArrayField source=\"${e.source}\" reference=\"${e.reference}\"><TextField source=\"id\" /></ReferenceArrayField>`\n  },\n  referenceArrayChild: {\n    component: e => jr.createElement(at, i({\n      source: \"id\"\n    }, e)),\n    representation: () => '<TextField source=\"id\" />'\n  },\n  richText: {\n    component: Ea,\n    representation: e => `<RichTextField source=\"${e.source}\" />`\n  },\n  string: {\n    component: at,\n    representation: e => `<TextField source=\"${e.source}\" />`\n  },\n  url: {\n    component: qr,\n    representation: e => `<UrlField source=\"${e.source}\" />`\n  }\n};\nl();\nimport * as wa from \"react\";\nimport { useEffect as u$, useState as f$ } from \"react\";\nimport zu from \"inflection\";\nimport { ShowBase as g$, InferredElement as y$, getElementsFromRecords as b$, useResourceContext as R$, useShowContext as h$ } from \"ra-core\";\nvar Wu = n(e => {\n  let t = R$(e),\n      {\n    record: o\n  } = h$(),\n      [r, s] = f$(null);\n  return u$(() => {\n    if (o && !r) {\n      let a = b$([o], Lp),\n          p = new y$(Lp.show, null, a);\n      process.env.NODE_ENV !== \"production\" && console.log(`Guessed Show:\n\nexport const ${zu.capitalize(zu.singularize(t))}Show = () => (\n    <Show>\n${p.getRepresentation()}\n    </Show>\n);`), s(p.getElement());\n    }\n  }, [o, r, t]), wa.createElement(wr, i({}, e), r);\n}, \"ShowViewGuesser\");\nWu.propTypes = wr.propTypes;\nvar koe = n(r => {\n  var s = r,\n      {\n    id: e,\n    queryOptions: t\n  } = s,\n      o = f(s, [\"id\", \"queryOptions\"]);\n  return wa.createElement(g$, {\n    id: e,\n    queryOptions: t\n  }, wa.createElement(Wu, i({}, o)));\n}, \"ShowGuesser\");\nl();\nimport * as Le from \"react\";\nimport { Children as Ap, cloneElement as $p, isValidElement as ju, useState as F$ } from \"react\";\nimport mo from \"prop-types\";\nimport { styled as S$ } from \"@mui/material/styles\";\nimport { Divider as Uu } from \"@mui/material\";\nimport { Outlet as E$, Routes as N$, Route as Xu } from \"react-router-dom\";\nimport { useRecordContext as B$, OptionalRecordContextProvider as L$ } from \"ra-core\";\nl();\nimport * as qu from \"react\";\nimport { Children as T$, cloneElement as P$, isValidElement as x$ } from \"react\";\nimport C$ from \"prop-types\";\nimport v$ from \"@mui/material/Tabs\";\nimport { useParams as I$ } from \"react-router-dom\";\nvar kp = n(s => {\n  var a = s,\n      {\n    children: e,\n    syncWithLocation: t,\n    value: o\n  } = a,\n      r = f(a, [\"children\", \"syncWithLocation\", \"value\"]);\n  let c = I$()[\"*\"];\n  return qu.createElement(v$, i({\n    indicatorColor: \"primary\",\n    value: t ? c : o\n  }, r), T$.map(e, (d, m) => {\n    if (!d || !x$(d)) return null;\n    let u = wp(d, m);\n    return P$(d, {\n      context: \"header\",\n      value: t ? u : m,\n      syncWithLocation: t\n    });\n  }));\n}, \"TabbedShowLayoutTabs\"),\n    wp = n((e, t) => `${e.props.path ? `${e.props.path}` : t > 0 ? t : \"\"}`, \"getShowLayoutTabFullPath\");\nkp.propTypes = {\n  children: C$.node\n};\nvar k$ = n(e => {\n  let T = e,\n      {\n    children: t,\n    className: o,\n    spacing: r,\n    divider: s,\n    syncWithLocation: a = !0,\n    tabs: p = w$,\n    value: c\n  } = T,\n      d = f(T, [\"children\", \"className\", \"spacing\", \"divider\", \"syncWithLocation\", \"tabs\", \"value\"]),\n      m = B$(e),\n      u = Ap.toArray(t).filter(C => C !== null),\n      [g, y] = F$(0),\n      b = n((C, x) => {\n    a || y(x);\n  }, \"handleTabChange\");\n  if (!m) return null;\n  let P = n(() => $p(p, {\n    onChange: b,\n    syncWithLocation: a,\n    value: g\n  }, u), \"renderTabHeaders\");\n  return Le.createElement(L$, {\n    value: e.record\n  }, Le.createElement(A$, i({\n    className: o\n  }, $$(d)), a ? Le.createElement(N$, null, Le.createElement(Xu, {\n    path: \"/*\",\n    element: Le.createElement(Le.Fragment, null, P(), Le.createElement(Uu, null), Le.createElement(\"div\", {\n      className: Op.content\n    }, Le.createElement(E$, null)))\n  }, Ap.map(u, (C, x) => ju(C) ? Le.createElement(Xu, {\n    path: wp(C, x),\n    element: $p(C, {\n      context: \"content\",\n      spacing: r,\n      divider: s\n    })\n  }) : null))) : Le.createElement(Le.Fragment, null, P(), Le.createElement(Uu, null), Le.createElement(\"div\", {\n    className: Op.content\n  }, Ap.map(u, (C, x) => !ju(C) || g !== x ? null : $p(C, {\n    context: \"content\",\n    spacing: r,\n    divider: s\n  }))))));\n}, \"TabbedShowLayout\");\nk$.propTypes = {\n  children: mo.node,\n  className: mo.string,\n  record: mo.object,\n  spacing: mo.any,\n  sx: mo.any,\n  syncWithLocation: mo.bool,\n  tabs: mo.element,\n  value: mo.number\n};\nvar w$ = Le.createElement(kp, null),\n    Qu = \"RaTabbedShowLayout\",\n    Op = {\n  content: `${Qu}-content`\n},\n    A$ = S$(\"div\", {\n  name: Qu,\n  overridesResolver: (e, t) => t.root\n})(_ref88 => {\n  let {\n    theme: e\n  } = _ref88;\n  return {\n    flex: 1,\n    [`& .${Op.content}`]: {\n      padding: `${e.spacing(1)} ${e.spacing(2)}`\n    }\n  };\n}),\n    $$ = n(c => {\n  var d = c,\n      {\n    record: e,\n    resource: t,\n    initialValues: o,\n    staticContext: r,\n    translate: s,\n    tabs: a\n  } = d,\n      p = f(d, [\"record\", \"resource\", \"initialValues\", \"staticContext\", \"translate\", \"tabs\"]);\n  return p;\n}, \"sanitizeRestProps\");\nl();\nimport * as Ur from \"react\";\nimport { isValidElement as O$ } from \"react\";\nimport Ze from \"prop-types\";\nimport { Link as D$, useLocation as M$ } from \"react-router-dom\";\nimport { Tab as V$, Stack as _$ } from \"@mui/material\";\nimport { useTranslate as H$ } from \"ra-core\";\nimport Gu from \"clsx\";\nvar z$ = n(y => {\n  var b = y,\n      {\n    children: e,\n    contentClassName: t,\n    context: o,\n    className: r,\n    divider: s,\n    icon: a,\n    label: p,\n    record: c,\n    spacing: d = 1,\n    syncWithLocation: m = !0,\n    value: u\n  } = b,\n      g = f(b, [\"children\", \"contentClassName\", \"context\", \"className\", \"divider\", \"icon\", \"label\", \"record\", \"spacing\", \"syncWithLocation\", \"value\"]);\n  let P = H$(),\n      T = M$(),\n      C = {\n    component: D$,\n    to: S(i({}, T), {\n      pathname: u\n    })\n  };\n  return o === \"header\" ? n(() => Ur.createElement(V$, i(i({\n    key: `tab-header-${u}`,\n    label: typeof p == \"string\" ? P(p, {\n      _: p\n    }) : p,\n    value: u,\n    icon: a,\n    className: Gu(\"show-tab\", r)\n  }, m ? C : {}), g)), \"renderHeader\")() : n(() => Ur.createElement(_$, {\n    className: t,\n    spacing: d,\n    divider: s\n  }, Ur.Children.map(e, v => v && O$(v) ? Ur.createElement(ye, {\n    key: v.props.source,\n    className: Gu(\"ra-field\", v.props.source && `ra-field-${v.props.source}`, v.props.className)\n  }, v) : null)), \"renderContent\")();\n}, \"Tab\");\nz$.propTypes = {\n  className: Ze.string,\n  contentClassName: Ze.string,\n  children: Ze.node,\n  context: Ze.oneOf([\"header\", \"content\"]),\n  icon: Ze.element,\n  label: Ze.oneOfType([Ze.string, Ze.element]).isRequired,\n  path: Ze.string,\n  spacing: Ze.any,\n  value: Ze.oneOfType([Ze.string, Ze.number])\n};\nl();\nimport * as uo from \"react\";\nimport { styled as W$ } from \"@mui/material/styles\";\nimport { Typography as Ju } from \"@mui/material\";\nimport q$ from \"@mui/icons-material/Inbox\";\nimport { useTranslate as j$, useResourceDefinition as U$, useResourceContext as X$, useGetResourceLabel as Q$ } from \"ra-core\";\nvar Ku = n(e => {\n  let {\n    className: t\n  } = e,\n      {\n    hasCreate: o\n  } = U$(e),\n      r = X$(e),\n      s = j$(),\n      a = Q$(),\n      p = s(`resources.${r}.forcedCaseName`, {\n    smart_count: 0,\n    _: a(r, 0)\n  }),\n      c = s(\"ra.page.empty\", {\n    name: p\n  }),\n      d = s(\"ra.page.invite\");\n  return uo.createElement(G$, {\n    className: t\n  }, uo.createElement(\"div\", {\n    className: Xr.message\n  }, uo.createElement(q$, {\n    className: Xr.icon\n  }), uo.createElement(Ju, {\n    variant: \"h4\",\n    paragraph: !0\n  }, s(`resources.${r}.empty`, {\n    _: c\n  })), o && uo.createElement(Ju, {\n    variant: \"body1\"\n  }, s(`resources.${r}.invite`, {\n    _: d\n  }))), o && uo.createElement(\"div\", {\n    className: Xr.toolbar\n  }, uo.createElement(an, {\n    variant: \"contained\"\n  })));\n}, \"Empty\"),\n    Aa = \"RaEmpty\",\n    Xr = {\n  message: `${Aa}-message`,\n  icon: `${Aa}-icon`,\n  toolbar: `${Aa}-toolbar`\n},\n    G$ = W$(\"span\", {\n  name: Aa,\n  overridesResolver: (e, t) => t.root\n})(_ref89 => {\n  let {\n    theme: e\n  } = _ref89;\n  return {\n    flex: 1,\n    [`& .${Xr.message}`]: {\n      textAlign: \"center\",\n      opacity: e.palette.mode === \"light\" ? .5 : .8,\n      margin: \"0 1em\",\n      color: e.palette.mode === \"light\" ? \"inherit\" : e.palette.text.primary\n    },\n    [`& .${Xr.icon}`]: {\n      width: \"9em\",\n      height: \"9em\"\n    },\n    [`& .${Xr.toolbar}`]: {\n      textAlign: \"center\",\n      marginTop: \"2em\"\n    }\n  };\n});\nl();\nimport * as Mp from \"react\";\nimport ee from \"prop-types\";\nimport { ListBase as RO } from \"ra-core\";\nl();\nimport * as qt from \"react\";\nimport { styled as iO } from \"@mui/material/styles\";\nimport { Children as lO, cloneElement as Zu } from \"react\";\nimport V from \"prop-types\";\nimport pO from \"@mui/material/Card\";\nimport cO from \"clsx\";\nimport { ComponentPropType as mO, useListContext as dO } from \"ra-core\";\nl();\nimport * as gt from \"react\";\nimport { memo as J$ } from \"react\";\nimport { styled as K$ } from \"@mui/material/styles\";\nimport Nt from \"prop-types\";\nimport { Toolbar as Y$ } from \"@mui/material\";\nvar Dp = J$(e => {\n  let a = e,\n      {\n    filters: t,\n    actions: o,\n    className: r\n  } = a,\n      s = f(a, [\"filters\", \"actions\", \"className\"]);\n  return Array.isArray(t) ? gt.createElement(nt.Provider, {\n    value: t\n  }, gt.createElement(Yu, {\n    className: r\n  }, gt.createElement(yr, null), gt.createElement(\"span\", null), o && gt.cloneElement(o, i(i({}, s), o.props)))) : gt.createElement(Yu, {\n    className: r\n  }, t && gt.cloneElement(t, S(i({}, s), {\n    context: \"form\"\n  })), gt.createElement(\"span\", null), o && gt.cloneElement(o, i(S(i({}, s), {\n    filters: t\n  }), o.props)));\n});\nDp.propTypes = {\n  filters: Nt.oneOfType([Nt.element, Nt.arrayOf(Nt.element)]),\n  actions: Nt.oneOfType([Nt.bool, Nt.element]),\n  exporter: Nt.oneOfType([Nt.func, Nt.bool])\n};\nvar Z$ = \"RaListToolbar\",\n    Yu = K$(Y$, {\n  name: Z$,\n  overridesResolver: (e, t) => t.root\n})(_ref90 => {\n  let {\n    theme: e\n  } = _ref90;\n  return {\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    minHeight: \"auto\",\n    [e.breakpoints.up(\"sm\")]: {\n      paddingRight: 0\n    },\n    [e.breakpoints.up(\"xs\")]: {\n      paddingLeft: 0\n    },\n    [e.breakpoints.down(\"sm\")]: {\n      paddingLeft: e.spacing(2),\n      backgroundColor: e.palette.background.paper\n    }\n  };\n});\nl();\nimport * as qn from \"react\";\nimport { cloneElement as eO, useMemo as tO, useContext as oO } from \"react\";\nimport Oe from \"prop-types\";\nimport { sanitizeListRestProps as rO, useListContext as nO, useResourceContext as sO, useResourceDefinition as aO } from \"ra-core\";\nvar $a = n(e => {\n  let P = e,\n      {\n    className: t,\n    filters: o,\n    hasCreate: r\n  } = P,\n      s = f(P, [\"className\", \"filters\", \"hasCreate\"]),\n      {\n    sort: a,\n    displayedFilters: p,\n    filterValues: c,\n    exporter: d,\n    showFilter: m,\n    total: u\n  } = nO(e),\n      g = sO(e),\n      {\n    hasCreate: y\n  } = aO(e),\n      b = oO(nt) || o;\n  return tO(() => qn.createElement(Pt, i({\n    className: t\n  }, rO(s)), o ? eO(o, {\n    resource: g,\n    showFilter: m,\n    displayedFilters: p,\n    filterValues: c,\n    context: \"button\"\n  }) : b && qn.createElement($o, null), y && qn.createElement(an, null), d !== !1 && qn.createElement(ci, {\n    disabled: u === 0,\n    resource: g,\n    sort: a,\n    filterValues: c\n  })), [g, p, c, o, m, b, u, t, a, d, y]);\n}, \"ListActions\");\n$a.propTypes = {\n  className: Oe.string,\n  sort: Oe.any,\n  displayedFilters: Oe.object,\n  exporter: Oe.oneOfType([Oe.func, Oe.bool]),\n  filters: Oe.element,\n  filterValues: Oe.object,\n  hasCreate: Oe.bool,\n  resource: Oe.string,\n  onUnselectItems: Oe.func.isRequired,\n  selectedIds: Oe.arrayOf(Oe.any),\n  showFilter: Oe.func,\n  total: Oe.number\n};\n$a.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null\n};\nvar uO = qt.createElement($a, null),\n    fO = qt.createElement(Cn, null),\n    gO = qt.createElement(Ku, null),\n    yO = pO,\n    Qr = n(e => {\n  let B = e,\n      {\n    actions: t = uO,\n    aside: o,\n    filters: r,\n    bulkActionButtons: s,\n    emptyWhileLoading: a,\n    hasCreate: p,\n    pagination: c = fO,\n    children: d,\n    className: m,\n    component: u = yO,\n    title: g,\n    empty: y = gO\n  } = B,\n      b = f(B, [\"actions\", \"aside\", \"filters\", \"bulkActionButtons\", \"emptyWhileLoading\", \"hasCreate\", \"pagination\", \"children\", \"className\", \"component\", \"title\", \"empty\"]),\n      {\n    defaultTitle: P,\n    data: T,\n    error: C,\n    total: x,\n    isLoading: I,\n    filterValues: v\n  } = dO(e);\n  if (!d || !T && I && a || C) return null;\n  let N = n(() => qt.createElement(\"div\", {\n    className: Gr.main\n  }, (r || t) && qt.createElement(Dp, {\n    filters: r,\n    actions: t,\n    hasCreate: p\n  }), qt.createElement(u, {\n    className: Gr.content\n  }, s && d ? Zu(lO.only(d), {\n    bulkActionButtons: s\n  }) : d), c !== !1 && c), \"renderList\"),\n      F = n(() => y !== !1 && Zu(y, {\n    hasCreate: p\n  }), \"renderEmpty\"),\n      E = !I && x === 0 && !Object.keys(v).length && y !== !1;\n  return qt.createElement(bO, i({\n    className: cO(\"list-page\", m)\n  }, b), qt.createElement(Ue, {\n    title: g,\n    defaultTitle: P\n  }), E ? F() : N(), o);\n}, \"ListView\");\nQr.propTypes = {\n  actions: V.oneOfType([V.bool, V.element]),\n  aside: V.element,\n  children: V.element,\n  className: V.string,\n  component: mO,\n  sort: V.shape({\n    field: V.string.isRequired,\n    order: V.string.isRequired\n  }),\n  data: V.any,\n  defaultTitle: V.string,\n  displayedFilters: V.object,\n  emptyWhileLoading: V.bool,\n  exporter: V.oneOfType([V.func, V.bool]),\n  filterDefaultValues: V.object,\n  filters: V.oneOfType([V.element, V.arrayOf(V.element)]),\n  filterValues: V.object,\n  hasCreate: V.bool,\n  hideFilter: V.func,\n  ids: V.array,\n  loading: V.bool,\n  onSelect: V.func,\n  onToggleItem: V.func,\n  onUnselectItems: V.func,\n  page: V.number,\n  pagination: V.oneOfType([V.element, V.bool]),\n  perPage: V.number,\n  refresh: V.func,\n  resource: V.string,\n  selectedIds: V.array,\n  setFilters: V.func,\n  setPage: V.func,\n  setPerPage: V.func,\n  setSort: V.func,\n  showFilter: V.func,\n  title: So,\n  total: V.number\n};\nvar jn = \"RaList\",\n    Gr = {\n  main: `${jn}-main`,\n  content: `${jn}-content`,\n  actions: `${jn}-actions`,\n  noResults: `${jn}-noResults`\n},\n    bO = iO(\"div\", {\n  name: jn,\n  overridesResolver: (e, t) => t.root\n})(_ref91 => {\n  let {\n    theme: e\n  } = _ref91;\n  return {\n    display: \"flex\",\n    [`& .${Gr.main}`]: {\n      flex: \"1 1 auto\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    [`& .${Gr.content}`]: {\n      position: \"relative\",\n      [e.breakpoints.down(\"sm\")]: {\n        boxShadow: \"none\"\n      },\n      overflow: \"inherit\"\n    },\n    [`& .${Gr.actions}`]: {\n      zIndex: 2,\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      flexWrap: \"wrap\"\n    },\n    [`& .${Gr.noResults}`]: {\n      padding: 20\n    }\n  };\n});\nvar ef = n(g => {\n  var y = g,\n      {\n    debounce: e,\n    disableAuthentication: t,\n    disableSyncWithLocation: o,\n    exporter: r,\n    filter: s,\n    filterDefaultValues: a,\n    perPage: p,\n    queryOptions: c,\n    resource: d,\n    sort: m\n  } = y,\n      u = f(y, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\"]);\n  return Mp.createElement(RO, {\n    debounce: e,\n    disableAuthentication: t,\n    disableSyncWithLocation: o,\n    exporter: r,\n    filter: s,\n    filterDefaultValues: a,\n    perPage: p,\n    queryOptions: c,\n    resource: d,\n    sort: m\n  }, Mp.createElement(Qr, i({}, u)));\n}, \"List\");\nef.propTypes = {\n  actions: ee.oneOfType([ee.bool, ee.element]),\n  aside: ee.element,\n  children: ee.element.isRequired,\n  className: ee.string,\n  emptyWhileLoading: ee.bool,\n  filter: ee.object,\n  filterDefaultValues: ee.object,\n  filters: ee.oneOfType([ee.element, ee.arrayOf(ee.element)]),\n  pagination: ee.oneOfType([ee.element, ee.bool]),\n  perPage: ee.number.isRequired,\n  sort: ee.shape({\n    field: ee.string,\n    order: ee.string\n  }),\n  sx: ee.any,\n  title: So,\n  disableSyncWithLocation: ee.bool,\n  hasCreate: ee.bool,\n  hasEdit: ee.bool,\n  hasList: ee.bool,\n  hasShow: ee.bool,\n  resource: ee.string\n};\nef.defaultProps = {\n  filter: {},\n  perPage: 10\n};\nl();\nimport * as Oa from \"react\";\nimport { useState as LO, useEffect as kO } from \"react\";\nimport nf from \"inflection\";\nimport { useListController as wO, getElementsFromRecords as AO, InferredElement as $O, ListContextProvider as OO, useListContext as DO, useResourceContext as MO } from \"ra-core\";\nl();\nimport * as Go from \"react\";\nl();\nimport * as Jr from \"react\";\nimport { styled as hO } from \"@mui/material/styles\";\nimport { cloneElement as TO, Children as PO } from \"react\";\nimport jt from \"prop-types\";\nimport xO from \"@mui/material/LinearProgress\";\nimport { sanitizeListRestProps as CO, useListContext as vO, useResourceContext as IO, RecordContextProvider as tf, ComponentPropType as FO, useCreatePath as SO } from \"ra-core\";\nvar Vp = n(e => {\n  let u = e,\n      {\n    className: t,\n    children: o,\n    linkType: r = \"edit\",\n    component: s = EO\n  } = u,\n      a = f(u, [\"className\", \"children\", \"linkType\", \"component\"]),\n      {\n    data: p,\n    isLoading: c\n  } = vO(e),\n      d = IO(e),\n      m = SO();\n  return c === !0 ? Jr.createElement(xO, null) : Jr.createElement(s, i({\n    className: t\n  }, CO(a)), p.map(g => {\n    let y = r ? m({\n      resource: d,\n      type: r,\n      id: g.id\n    }) : !1;\n    return y ? Jr.createElement(tf, {\n      value: g,\n      key: g.id\n    }, Jr.createElement(_n, {\n      className: rf.link,\n      to: y,\n      onClick: NO\n    }, TO(PO.only(o), {\n      record: g,\n      resource: d,\n      onClick: BO\n    }))) : Jr.createElement(tf, {\n      value: g,\n      key: g.id\n    }, o);\n  }));\n}, \"SingleFieldList\");\nVp.propTypes = {\n  children: jt.element.isRequired,\n  classes: jt.object,\n  className: jt.string,\n  component: FO,\n  data: jt.any,\n  ids: jt.array,\n  linkType: jt.oneOfType([jt.string, jt.bool]),\n  resource: jt.string\n};\nvar of = \"RaSingleFieldList\",\n    rf = {\n  link: `${of}-link`\n},\n    EO = hO(\"div\", {\n  name: of,\n  overridesResolver: (e, t) => t.root\n})(_ref92 => {\n  let {\n    theme: e\n  } = _ref92;\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginTop: e.spacing(-1),\n    marginBottom: e.spacing(-1),\n    [`& .${rf.link}`]: {\n      textDecoration: \"none\"\n    }\n  };\n}),\n    NO = n(e => e.stopPropagation(), \"stopPropagation\"),\n    BO = n(() => {}, \"handleClick\");\nvar _p = {\n  table: {\n    component: e => Go.createElement(to, i({\n      rowClick: \"edit\"\n    }, e)),\n    representation: (e, t) => `        <Datagrid rowClick=\"edit\">\n${t.map(o => `            ${o.getRepresentation()}`).join(`\n`)}\n        </Datagrid>`\n  },\n  array: {\n    component: o => {\n      var r = o,\n          {\n        children: e\n      } = r,\n          t = f(r, [\"children\"]);\n      return Go.createElement($r, i({}, t), Go.createElement(Vp, null, Go.createElement($n, {\n        source: e.length > 0 && e[0].props.source\n      })));\n    },\n    representation: (e, t) => `<ArrayField source=\"${e.source}\"><SingleFieldList><ChipField source=\"${t.length > 0 && t[0].getProps().source}\" /></SingleFieldList></ArrayField>`\n  },\n  boolean: {\n    component: Dr,\n    representation: e => `<BooleanField source=\"${e.source}\" />`\n  },\n  date: {\n    component: Vr,\n    representation: e => `<DateField source=\"${e.source}\" />`\n  },\n  email: {\n    component: _r,\n    representation: e => `<EmailField source=\"${e.source}\" />`\n  },\n  id: {\n    component: at,\n    representation: e => `<TextField source=\"${e.source}\" />`\n  },\n  number: {\n    component: Xo,\n    representation: e => `<NumberField source=\"${e.source}\" />`\n  },\n  reference: {\n    component: Hr,\n    representation: e => `<ReferenceField source=\"${e.source}\" reference=\"${e.reference}\"><TextField source=\"id\" /></ReferenceField>`\n  },\n  referenceChild: {\n    component: e => Go.createElement(at, i({\n      source: \"id\"\n    }, e)),\n    representation: () => '<TextField source=\"id\" />'\n  },\n  referenceArray: {\n    component: Mn,\n    representation: e => `<ReferenceArrayField source=\"${e.source}\" reference=\"${e.reference}\"><TextField source=\"id\" /></ReferenceArrayField>`\n  },\n  referenceArrayChild: {\n    component: e => Go.createElement(at, i({\n      source: \"id\"\n    }, e)),\n    representation: () => '<TextField source=\"id\" />'\n  },\n  richText: void 0,\n  string: {\n    component: at,\n    representation: e => `<TextField source=\"${e.source}\" />`\n  },\n  url: {\n    component: qr,\n    representation: e => `<UrlField source=\"${e.source}\" />`\n  }\n};\nvar Ene = n(() => {\n  let e = wO();\n  return Oa.createElement(OO, {\n    value: e\n  }, Oa.createElement(sf, i({}, e)));\n}, \"ListGuesser\"),\n    sf = n(e => {\n  let {\n    data: t\n  } = DO(e),\n      o = MO(),\n      [r, s] = LO(null);\n  return kO(() => {\n    if (t && t.length > 0 && !r) {\n      let a = AO(t, _p),\n          p = new $O(_p.table, null, a);\n      process.env.NODE_ENV !== \"production\" && console.log(`Guessed List:\n\nexport const ${nf.capitalize(nf.singularize(o))}List = () => (\n    <List>\n${p.getRepresentation()}\n    </List>\n);`), s(p.getElement());\n    }\n  }, [t, r, o]), Oa.createElement(Qr, i({}, e), r);\n}, \"ListViewGuesser\");\nsf.propTypes = Qr.propTypes;\nl();\nimport * as ve from \"react\";\nimport { styled as QO } from \"@mui/material/styles\";\nimport { isValidElement as Wp } from \"react\";\nimport he from \"prop-types\";\nimport { Avatar as qp, List as GO, ListItem as JO, ListItemAvatar as KO, ListItemButton as YO, ListItemIcon as lf, ListItemSecondaryAction as ZO, ListItemText as pf } from \"@mui/material\";\nimport { Link as eD } from \"react-router-dom\";\nimport { RecordContextProvider as tD, sanitizeListRestProps as oD, useListContext as rD, useResourceContext as nD, useCreatePath as sD } from \"ra-core\";\nl();\nimport * as et from \"react\";\nimport { styled as VO } from \"@mui/material/styles\";\nimport Kr from \"prop-types\";\nimport af from \"@mui/material/Avatar\";\nimport _O from \"@mui/material/List\";\nimport HO from \"@mui/material/ListItem\";\nimport zO from \"@mui/material/ListItemAvatar\";\nimport WO from \"@mui/material/ListItemSecondaryAction\";\nimport qO from \"@mui/material/ListItemText\";\nimport { useTimeout as jO } from \"ra-core\";\nvar Hp = n(e => {\n  let m = e,\n      {\n    className: t,\n    hasLeftAvatarOrIcon: o,\n    hasRightAvatarOrIcon: r,\n    hasSecondaryText: s,\n    hasTertiaryText: a,\n    nbFakeLines: p = 5\n  } = m,\n      c = f(m, [\"className\", \"hasLeftAvatarOrIcon\", \"hasRightAvatarOrIcon\", \"hasSecondaryText\", \"hasTertiaryText\", \"nbFakeLines\"]);\n  return jO(1e3) ? et.createElement(UO, i({\n    className: t\n  }, c), XO(p, u => et.createElement(HO, {\n    key: u\n  }, o && et.createElement(zO, null, et.createElement(af, null, \"\\xA0\")), et.createElement(qO, {\n    primary: et.createElement(\"div\", null, et.createElement(No, {\n      className: Da.primary\n    }), a && et.createElement(\"span\", {\n      className: Da.tertiary\n    }, et.createElement(No, null))),\n    secondary: s ? et.createElement(No, null) : void 0\n  }), r && et.createElement(WO, null, et.createElement(af, null, \"\\xA0\"))))) : null;\n}, \"SimpleListLoading\");\nHp.propTypes = {\n  className: Kr.string,\n  hasLeftAvatarOrIcon: Kr.bool,\n  hasRightAvatarOrIcon: Kr.bool,\n  hasSecondaryText: Kr.bool,\n  hasTertiaryText: Kr.bool,\n  nbFakeLines: Kr.number\n};\nvar zp = \"RaSimpleListLoading\",\n    Da = {\n  primary: `${zp}-primary`,\n  tertiary: `${zp}-tertiary`\n},\n    UO = VO(_O, {\n  name: zp,\n  overridesResolver: (e, t) => t.root\n})(_ref93 => {\n  let {\n    theme: e\n  } = _ref93;\n  return {\n    [`& .${Da.primary}`]: {\n      width: \"30vw\",\n      display: \"inline-block\",\n      marginBottom: e.spacing()\n    },\n    [`& .${Da.tertiary}`]: {\n      float: \"right\",\n      opacity: .541176,\n      minWidth: \"10vw\"\n    }\n  };\n}),\n    XO = n((e, t) => Array.from({\n  length: e\n}, (o, r) => t(r)), \"times\");\nvar aD = n(e => {\n  let I = e,\n      {\n    className: t,\n    hasBulkActions: o,\n    leftAvatar: r,\n    leftIcon: s,\n    linkType: a = \"edit\",\n    primaryText: p,\n    rightAvatar: c,\n    rightIcon: d,\n    secondaryText: m,\n    tertiaryText: u,\n    rowStyle: g\n  } = I,\n      y = f(I, [\"className\", \"hasBulkActions\", \"leftAvatar\", \"leftIcon\", \"linkType\", \"primaryText\", \"rightAvatar\", \"rightIcon\", \"secondaryText\", \"tertiaryText\", \"rowStyle\"]),\n      {\n    data: b,\n    isLoading: P,\n    total: T\n  } = rD(e),\n      C = nD(e);\n  if (P === !0) return ve.createElement(Hp, {\n    className: t,\n    hasLeftAvatarOrIcon: !!s || !!r,\n    hasRightAvatarOrIcon: !!d || !!c,\n    hasSecondaryText: !!m,\n    hasTertiaryText: !!u\n  });\n  let x = n((v, N) => {\n    let F = N(v, v.id);\n    return typeof F == \"string\" && (F.startsWith(\"http\") || F.startsWith(\"data:\")) ? ve.createElement(qp, {\n      src: F\n    }) : ve.createElement(qp, null, F);\n  }, \"renderAvatar\");\n  return T == null && (b == null ? void 0 : b.length) > 0 || T > 0 ? ve.createElement(lD, i({\n    className: t\n  }, oD(y)), b.map((v, N) => ve.createElement(tD, {\n    key: v.id,\n    value: v\n  }, ve.createElement(JO, {\n    disablePadding: !0\n  }, ve.createElement(iD, {\n    linkType: a,\n    resource: C,\n    id: v.id,\n    record: v,\n    style: g ? g(v, N) : void 0\n  }, s && ve.createElement(lf, null, s(v, v.id)), r && ve.createElement(KO, null, x(v, r)), ve.createElement(pf, {\n    primary: ve.createElement(\"div\", null, Wp(p) ? p : p(v, v.id), !!u && (Wp(u) ? u : ve.createElement(\"span\", {\n      className: mf.tertiary\n    }, u(v, v.id)))),\n    secondary: !!m && (Wp(m) ? m : m(v, v.id))\n  }), (c || d) && ve.createElement(ZO, null, c && ve.createElement(qp, null, x(v, c)), d && ve.createElement(lf, null, d(v, v.id)))))))) : null;\n}, \"SimpleList\");\naD.propTypes = {\n  className: he.string,\n  leftAvatar: he.func,\n  leftIcon: he.func,\n  linkType: he.oneOfType([he.string, he.bool, he.func]),\n  primaryText: he.oneOfType([he.func, he.element]),\n  rightAvatar: he.func,\n  rightIcon: he.func,\n  secondaryText: he.oneOfType([he.func, he.element]),\n  tertiaryText: he.oneOfType([he.func, he.element]),\n  rowStyle: he.func\n};\nvar iD = n(e => {\n  let u = e,\n      {\n    classes: t,\n    linkType: o,\n    resource: r,\n    id: s,\n    children: a,\n    record: p\n  } = u,\n      c = f(u, [\"classes\", \"linkType\", \"resource\", \"id\", \"children\", \"record\"]),\n      d = sD(),\n      m = typeof o == \"function\" ? o(p, s) : o;\n  return m === !1 ? ve.createElement(pf, i({\n    component: \"div\"\n  }, c), a) : ve.createElement(YO, i({\n    component: eD,\n    to: d({\n      resource: r,\n      id: s,\n      type: m\n    })\n  }, c), a);\n}, \"LinkOrNot\"),\n    cf = \"RaSimpleList\",\n    mf = {\n  tertiary: `${cf}-tertiary`\n},\n    lD = QO(GO, {\n  name: cf,\n  overridesResolver: (e, t) => t.root\n})({\n  [`& .${mf.tertiary}`]: {\n    float: \"right\",\n    opacity: .541176\n  }\n});\nl();\nimport * as Un from \"react\";\nimport { createElement as pD } from \"react\";\nimport { CoreAdminUI as cD } from \"ra-core\";\nvar mD = n(o => {\n  var r = o,\n      {\n    notification: e\n  } = r,\n      t = f(r, [\"notification\"]);\n  return Un.createElement(Un.Fragment, null, Un.createElement(cD, i({}, t)), pD(e));\n}, \"AdminUI\");\nmD.defaultProps = {\n  layout: jc,\n  catchAll: ji,\n  loading: Wi,\n  loginPage: da,\n  notification: Qi\n};\nl();\nimport * as jp from \"react\";\nimport { CoreAdminContext as dD } from \"ra-core\";\nvar uD = n(e => {\n  let s = e,\n      {\n    theme: t = Yd,\n    children: o\n  } = s,\n      r = f(s, [\"theme\", \"children\"]);\n  return jp.createElement(dD, i({}, r), jp.createElement(Yc, {\n    theme: t\n  }, o));\n}, \"AdminContext\");\nuD.displayName = \"AdminContext\";\nexport { am as AddItemButton, Vs as AddSavedQueryDialog, ud as AddSavedQueryIconButton, uD as AdminContext, mD as AdminUI, Fi as AppBar, Io as AppBarClasses, $r as ArrayField, Ji as ArrayInput, Cs as ArrayInputContext, SU as AutocompleteArrayInput, gm as AutocompleteInput, bm as AutocompleteInputClasses, Dr as BooleanField, Ns as BooleanInput, Rl as BulkActionsToolbar, pt as BulkActionsToolbarClasses, Ja as BulkDeleteButton, Ua as BulkDeleteWithConfirmButton, Qa as BulkDeleteWithUndoButton, Sy as BulkExportButton, yc as BulkUpdateButton, Ya as BulkUpdateWithConfirmButton, ei as BulkUpdateWithUndoButton, j as Button, Mi as CLOSED_DRAWER_WIDTH, jh as CardContentInner, vH as CardContentInnerClasses, wC as CheckboxGroupInput, Bm as CheckboxGroupInputClasses, $n as ChipField, ag as CloneButton, To as Confirm, Fo as ConfirmClasses, tL as Create, rL as CreateActions, an as CreateButton, Wa as CreateButtonClasses, Fr as CreateClasses, ep as CreateView, Di as DRAWER_WIDTH, Bi as DashboardMenuItem, to as Datagrid, fl as DatagridBody, il as DatagridCell, A as DatagridClasses, Os as DatagridHeader, gl as DatagridHeaderCell, Hm as DatagridHeaderCellClasses, r4 as DatagridInput, bl as DatagridLoading, Lm as DatagridRoot, ul as DatagridRow, Vr as DateField, Dl as DateInput, sE as DateTimeInput, ai as DeleteButton, ni as DeleteWithConfirmButton, ri as DeleteWithUndoButton, mz as DeviceTestWrapper, TL as Edit, rp as EditActions, li as EditButton, Nr as EditClasses, i8 as EditGuesser, Er as EditView, _r as EmailField, Ku as Empty, Xr as EmptyClasses, Ai as Error, Me as ErrorClasses, pl as ExpandRowButton, ci as ExportButton, Rw as FileField, _l as FileInput, It as FileInputClasses, PF as Filter, $o as FilterButton, vl as FilterButtonMenuItem, md as FilterClasses, nt as FilterContext, yr as FilterForm, rd as FilterFormBase, sd as FilterFormClasses, Tl as FilterFormInput, Ds as FilterFormInputClasses, dd as FilterList, v5 as FilterListItem, zs as FilterListItemClasses, k5 as FilterLiveSearch, lu as FormTab, pp as FormTabHeader, vw as FunctionField, Ii as HideOnScroll, mi as IconButtonWithTooltip, Cu as ImageField, On as ImageFieldClasses, X4 as ImageInput, Z as InputHelperText, hm as InputPropTypes, ye as Labeled, xs as LabeledClasses, jc as Layout, rr as LayoutClasses, ke as LinearProgress, _n as Link, Su as LinkClasses, ef as List, $a as ListActions, ui as ListButton, Gr as ListClasses, Ene as ListGuesser, Dp as ListToolbar, Qr as ListView, bs as Loading, hs as LoadingClasses, Ti as LoadingIndicator, is as LoadingIndicatorClasses, Wi as LoadingPage, q0 as LocalesMenuButton, hc as LocalesMenuButtonClasses, da as Login, Ir as LoginClasses, Yl as LoginForm, vr as LoginFormClasses, Ci as Logout, Ic as LogoutClasses, _i as Menu, gs as MenuClasses, un as MenuItemLink, us as MenuItemLinkClasses, aA as NonEmptyReferenceField, ji as NotFound, sr as NotFoundClasses, Qi as Notification, Kt as NotificationClasses, $E as NullableBooleanInput, Nd as NullableBooleanInputClasses, Xo as NumberField, ta as NumberInput, Cn as Pagination, wl as PaginationActions, Td as PaginationLimit, DJ as PasswordInput, No as Placeholder, bn as PureDatagridBody, As as PureDatagridRow, Od as RadioButtonGroupInput, Vd as RadioButtonGroupInputClasses, lm as ReOrderButtons, Mn as ReferenceArrayField, Fu as ReferenceArrayFieldClasses, vu as ReferenceArrayFieldView, ra as ReferenceArrayInput, Hr as ReferenceField, Bu as ReferenceFieldClasses, Sa as ReferenceFieldView, na as ReferenceInput, Lu as ReferenceManyField, ku as ReferenceManyFieldView, wu as ReferenceOneField, fR as RefreshButton, bi as RefreshIconButton, im as RemoveItemButton, _s as RemoveSavedQueryDialog, fd as RemoveSavedQueryIconButton, hr as ResettableTextField, Pr as ResettableTextFieldClasses, ql as ResettableTextFieldStyles, Ea as RichTextField, Ri as SaveButton, y6 as SavedQueriesList, Pn as SavedQueriesListClasses, bd as SavedQueryFilterListItem, Ws as SavedQueryFilterListItemClasses, C3 as SearchInput, zd as SelectArrayInput, aa as SelectArrayInputClasses, Sp as SelectField, En as SelectInput, Ok as Show, up as ShowActions, ja as ShowButton, Ar as ShowClasses, koe as ShowGuesser, wr as ShowView, $i as Sidebar, Ie as SidebarClasses, nc as SidebarToggleButton, Jn as SidebarToggleButtonClasses, cp as SimpleForm, Es as SimpleFormIterator, Ae as SimpleFormIteratorClasses, vs as SimpleFormIteratorContext, sm as SimpleFormIteratorItem, Fs as SimpleFormIteratorItemContext, lr as SimpleFormIteratorPrefix, aD as SimpleList, mf as SimpleListClasses, Hp as SimpleListLoading, Da as SimpleListLoadingClasses, Np as SimpleShowLayout, ka as SimpleShowLayoutClasses, Vp as SingleFieldList, rf as SingleFieldListClasses, Pc as SkipNavigationButton, jg as SortButton, z$ as Tab, ZL as TabbedForm, ip as TabbedFormClasses, np as TabbedFormTabs, ap as TabbedFormView, k$ as TabbedShowLayout, Op as TabbedShowLayoutClasses, kp as TabbedShowLayoutTabs, at as TextField, Ee as TextInput, Yc as ThemeProvider, Ue as Title, So as TitlePropType, j_ as ToggleThemeButton, kn as Toolbar, Br as ToolbarClasses, tm as TopToolbar, Xte as TranslatableFields, Du as TranslatableFieldsTab, _u as TranslatableFieldsTabContent, FK as TranslatableInputs, jd as TranslatableInputsTab, la as TranslatableInputsTabClasses, Xd as TranslatableInputsTabContent, Gd as TranslatableInputsTabContentClasses, Ud as TranslatableInputsTabs, ca as TranslatableInputsTabsClasses, qr as UrlField, cs as UserMenu, dn as UserMenuClasses, ls as UserMenuContext, Hu as WrapperField, IG as areValidSavedQueries, Yd as defaultTheme, mp as editFieldTypes, ro as extractValidSavedQueries, I7 as findTabsWithErrors, qq as getArrayInputError, DI as getFilterFormValues, wp as getShowLayoutTabFullPath, sp as getTabbedFormTabFullPath, id as isValidSavedQuery, _p as listFieldTypes, AI as mergeInitialValuesWithDefaultValues, CA as removeTags, sn as sanitizeButtonRestProps, U as sanitizeFieldRestProps, oe as sanitizeInputRestProps, Lp as showFieldTypes, rm as useArrayInput, sU as useCreateSuggestionContext, _c as useResetErrorBoundaryOnLocationChange, oo as useSavedQueries, bt as useSidebarState, Is as useSimpleFormIterator, Ss as useSimpleFormIteratorItem, cr as useSupportCreateSuggestion, ss as useTheme, fq as useUserMenu };","map":{"version":3,"mappings":"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","names":["l","Li","match","FT","parse","wc","PT","xT","CT","vT","IT","e","t","some","o","r","inverse","s","type","a","expressions","every","p","c","feature","d","modifier","m","value","u","toLowerCase","Oc","$c","Ac","parseInt","n","split","map","trim","Number","parseFloat","String","bt","Af","nc","Vf","className","Gn","Df","title","_","enterDelay","_f","color","onClick","size","Mf","classes","root","Jn","menuButtonIconOpen","menuButtonIconClosed","_a","$f","Of","name","overridesResolver","theme","transition","transitions","create","easing","sharp","duration","leavingScreen","transform","j","T","alignIcon","children","disabled","label","to","jf","g","y","Qf","b","Wf","C","breakpoints","down","P","sn","nn","zf","sc","Xf","startIcon","endIcon","invalid","pristine","record","redirect","resource","mutationMode","hasCreate","propTypes","ho","oneOf","element","string","bool","Uf","qf","Hf","lineHeight","replace","state","f","ac","scrollToTop","icon","og","Zf","eg","tg","Ha","component","Kf","pathname","search","Yf","source","JSON","stringify","ng","_scrollToTop","rg","sg","Jf","stopPropagation","id","za","any","ag","Gf","lc","yg","variant","fg","gg","ug","cg","Kn","bg","ic","pc","dg","Wa","floating","true","false","mg","Yn","cc","ig","pg","palette","getContrastText","primary","main","margin","top","right","bottom","left","position","zIndex","an","lg","translate","mc","Ig","Pg","xg","Cg","qa","Tg","vg","Fg","hg","Zn","Sg","Rg","ja","Hg","fields","zg","sort","setSort","Mg","Vg","Ag","We","currentTarget","dataset","field","order","uc","dc","kg","wg","qg","Dg","Bg","anchorEl","keepMounted","open","Boolean","onClose","Lg","key","Og","Wg","_g","$g","Ng","ml","jg","Eg","Ua","F","confirmTitle","confirmContent","iy","selectedIds","Kg","ry","Yg","ey","oy","Zg","ty","isLoading","Jg","ids","onSuccess","messageArgs","smart_count","length","onError","E","message","I","v","N","ln","Ug","ay","ny","To","isOpen","loading","x","content","translateOptions","fc","humanize","inflect","onConfirm","filterValues","sy","Gg","error","backgroundColor","Qg","Xg","Ut","arrayOf","Qa","by","yy","uy","gy","fy","dy","my","Xa","Ty","undoable","Ry","py","hy","ly","cy","pn","Ja","Ga","Ko","Sy","Ey","exporter","Fy","vy","Iy","Py","getMany","then","data","Cy","catch","console","Ka","Ny","xy","Yo","func","Ya","Vy","My","Oy","Hy","_y","Ly","$y","k","jy","L","Dy","B","cn","By","qy","zy","gc","kt","isRequired","Wy","Ay","wy","ky","ei","eb","Ky","Zy","Yy","Jy","tb","Gy","Za","nb","ob","Xy","Zo","rb","Uy","Qy","yc","ti","er","defaultProps","ri","db","mutationOptions","cb","mb","handleDelete","pb","oi","fb","lb","ib","wt","oneOfType","ub","sb","ab","ni","vb","Cb","Pb","xb","handleDialogOpen","handleDialogClose","Tb","es","gb","Fb","hb","i","bc","singularize","Rb","qe","object","Ib","yb","bb","ai","Sb","Eb","si","At","li","$b","Lb","kb","wb","ii","Bb","Ab","Ob","Nb","ts","ci","maxResults","qb","filter","total","zb","Wb","_b","Hb","Db","getList","pagination","page","perPage","Vb","pi","jb","Mb","$t","number","exact","mi","Qb","mn","Xb","onOpen","Ub","q0","languages","Gb","Jb","find","locale","Xt","nR","Yb","oR","hc","selectedLanguage","rR","fontSize","Zb","eR","Rc","tR","Kb","marginLeft","spacing","ui","cR","iR","lR","di","aR","pR","sR","Tc","fR","gR","uR","mR","preventDefault","fi","dR","gi","bi","xR","TR","PR","yR","os","bR","RR","hR","yi","Ri","AR","saving","alwaysEnable","kR","BR","ER","LR","isDirty","isValidating","NR","DR","wR","CR","defaultPrevented","trigger","H","getValues","save","S","rs","OR","FR","thickness","SR","Po","$R","vR","IR","marginRight","Pc","_R","MR","zR","WR","HR","VR","padding","background","default","easeIn","opacity","easeOut","enteringScreen","document","getElementById","process","env","NODE_ENV","warn","setAttribute","focus","blur","removeAttribute","j_","QR","darkTheme","lightTheme","ss","mode","ns","qR","jR","XR","UR","Ti","sx","ZR","KR","as","eh","YR","JR","is","loader","loadedIcon","hi","width","Pi","GR","ls","th","Cc","xc","Provider","Ci","xo","redirectTo","ih","ch","mh","rh","dh","ph","ref","nh","Ic","lh","sh","xi","vc","oh","ah","text","secondary","minWidth","cs","gh","hh","identity","Rh","bh","vh","up","lt","Sh","uh","fh","Fh","fullName","Ch","dn","userButton","avatar","Fc","src","alt","Th","Ph","xh","disableScrollLock","anchorOrigin","Eh","transformOrigin","Nh","ps","node","vi","yh","textTransform","height","Ih","vertical","horizontal","Ii","Lh","Sc","kh","appear","direction","in","Bh","Fi","$h","userMenu","Hh","container","Vh","Ot","zh","Io","appBar","Dh","disableGutters","toolbar","menuButton","Ah","count","Mh","Co","_h","vo","wh","Oh","paddingRight","flex","textOverflow","whiteSpace","overflow","jh","Ec","Uh","Si","Nc","vH","Wh","qh","paddingTop","paddingBottom","only","cancel","confirm","confirmColor","ConfirmIcon","eT","CancelIcon","tT","rT","Bc","Rt","nT","Yh","Jh","Kh","Gh","Lc","Fo","iconPaddingStyle","oT","confirmWarning","confirmPrimary","autoFocus","je","elementType","ms","Xh","Qh","Zh","un","kc","primaryText","leftIcon","sidebarIsOpen","tooltipProps","uT","fT","gT","sT","pT","path","end","ds","yT","iT","us","active","bT","tabIndex","mT","dT","placement","Qt","Ei","aT","cT","lT","Bi","hT","TT","Ni","RT","fs","dense","wf","mz","ST","matches","Vc","values","Mc","ET","components","MuiUseMediaQuery","ssrMatchMedia","matchMedia","Ue","defaultTitle","BT","LT","ki","NT","So","tr","_c","AT","wT","kT","current","Ai","errorComponent","errorInfo","resetErrorBoundary","qT","K","$T","jT","Me","role","HT","MT","panel","_T","expandIcon","zT","panelSumary","VT","panelDetails","componentStack","advice","Hc","align","href","DT","WT","UT","wi","Dt","OT","display","flexDirection","alignItems","justifyContent","fontFamily","marginTop","maxWidth","userSelect","window","history","go","$i","closedSize","zc","JT","or","Oi","Ie","fixed","QT","Xe","docked","paper","paperAnchorLeft","paperAnchorRight","paperAnchorTop","paperAnchorBottom","paperAnchorDockedLeft","paperAnchorDockedTop","paperAnchorDockedRight","paperAnchorDockedBottom","modal","XT","GT","slot","overflowX","scrollbarWidth","msOverflowStyle","Wc","Di","Mi","borderRight","border","_i","tP","oP","rP","hasDashboard","Gt","Object","keys","hasList","KT","ZT","nP","eP","gs","closed","Vi","Hi","YT","marginBottom","qc","jc","dashboard","menu","sidebar","sP","ht","pP","iP","rr","appFrame","contentWithSidebar","aP","fallbackRender","ys","lP","minHeight","flexGrow","flexBasis","paddingLeft","ke","timeout","dP","Uc","fP","Xc","displayName","uP","cP","mP","bs","loadingPrimary","loadingSecondary","bP","nr","RP","hs","yP","zi","Rs","gP","textAlign","Wi","Ts","ji","vP","Tt","FP","IP","sr","PP","TP","xP","SP","staticContext","location","qi","Ps","hP","OP","Qi","autoHideDuration","multiLine","notifications","takeNotification","AP","NP","Jt","$P","BP","Ui","notificationOptions","Gc","emit","isUndo","DP","disableWindowBlurListener","TransitionProps","onExited","ContentProps","wP","Kt","action","LP","undo","Xi","ar","success","warning","EP","kP","contrastText","dark","light","MP","Yc","VP","Kc","Jc","_P","tm","Zc","qP","em","Pt","WP","HP","zP","gap","fq","jP","Z","helperText","touched","XP","ir","QP","UP","dangerouslySetInnerHTML","GP","__html","oe","Bt","afterSubmit","allowNull","alwaysOn","beforeSubmit","defaultValue","format","formatOnBlur","formClassName","initialValue","initializeForm","input","isEqual","limitChoicesToValue","meta","multiple","options","optionText","optionValue","refetch","render","setFilter","setPagination","submitError","subscription","translateChoice","validate","validateFields","it","pe","ye","fullWidth","props","fn","tx","ZP","xs","KP","ex","Gi","YP","JP","Cs","ox","Ji","X","isFetching","Array","isArray","px","mx","dx","ux","getFieldState","clearErrors","formState","register","setError","unregister","fx","isSubmitted","om","keepValue","cx","gx","D","M","hx","O","Mt","bx","ax","W","yx","htmlFor","shrink","lx","ix","rx","nx","Rx","$","qq","rm","Tx","Px","append","insert","move","prepend","remove","swap","update","lr","Ae","line","index","indexContainer","form","vs","xx","Is","Cx","Fs","vx","sm","xt","disableReordering","disableRemove","getItemLabel","member","removeButton","reOrderButtons","reOrder","Sx","Ex","Ki","max","nm","Ix","Fx","am","add","Yi","Nx","Ss","Bx","im","Zi","Lx","lm","pr","kx","wx","Es","addButton","Vt","disableAdd","_x","el","Mx","$x","Vx","onRemoveField","onReorder","Ax","Dx","Pe","array","fieldState","shape","Ox","borderBottom","listStyleType","divider","cr","createLabel","createItemLabel","createValue","handleChange","onCreate","Xx","Ux","jx","Wx","qx","onCancel","getCreateItem","item","Qx","target","pop","cm","createElement","pm","mm","Hx","sU","zx","gm","ec","choices","clearText","closeText","debounce","emptyText","emptyValue","inputText","matchSuggestion","filterToQuery","mC","noOptionsText","onBlur","onChange","openText","de","shouldRenderSuggestions","le","suggestionLimit","TextFieldProps","fo","allChoices","setFilters","rC","iC","isTouched","nC","yo","cC","De","q","mr","tl","Error","lC","ne","getChoiceText","getChoiceValue","getSuggestions","sC","selectedItem","bo","Gp","dm","ff","J","en","Jp","ol","Jx","ie","Jo","Kp","rl","fm","yf","Ro","Xn","Rf","ue","Lt","hf","on","includes","Tf","inputValue","concat","gf","Pf","tn","aC","Yp","Zp","Gx","Qp","xf","Ct","pC","blurOnSelect","Kx","Zr","openOnFocus","w","Te","isOptionEqualToValue","filterSelectedOptions","renderInput","eC","oC","yt","df","Xp","uf","Up","Ma","Yr","bm","textField","G","renderTags","Zx","selectOnFocus","clearOnBlur","freeSolo","handleHomeEndKeys","filterOptions","getOptionLabel","ze","onInputChange","renderOption","bf","ym","tC","Yx","nl","um","SU","hm","gn","Ns","onFocus","RC","dC","Eo","yC","uC","fC","control","Pm","checked","bC","gC","Tm","xm","choice","xC","sl","CC","PC","vm","checkbox","Cm","hC","TC","wC","re","row","kC","Sm","LC","IC","te","Fm","vt","Im","AC","Em","FC","Bm","BC","EC","NC","loaded","tt","Nm","vC","SC","fe","A","table","tableWrapper","thead","tbody","headerRow","headerCell","clickableRow","rowEven","rowOdd","rowCell","selectable","expandHeader","expandIconCell","expandable","expanded","expandedPanel","Lm","$C","tableLayout","borderTopLeftRadius","borderRadius","borderTopRightRadius","cursor","shortest","al","Bs","OC","DC","cellClassName","Ls","il","zC","expandContentId","HC","ll","VC","_C","pl","MC","km","WC","ks","wm","qC","jC","UC","isRowExpandable","Om","ot","Children","toArray","ws","forwardRef","expand","hasBulkActions","hover","onToggleItem","rowClick","selected","style","rv","sv","ov","nv","tv","expandSingle","GC","JC","av","cl","persist","ZC","$m","dl","YC","Am","colSpan","XC","QC","Fe","iv","ev","As","KC","ul","yn","dr","rowStyle","isRowSelectable","cv","Dm","ge","styles","muiName","bn","pv","fl","Vm","updateSort","isSorting","Rv","bv","ur","hv","uv","headerClassName","sortable","sortBy","yv","gv","sortByOrder","Hm","Mm","Yt","gl","dv","_m","mv","fv","No","zm","xv","Pv","Tv","grey","yl","from","jm","nbChildren","nbFakeLines","Bv","xe","vv","Nv","Iv","Wm","fr","qm","Fv","Sv","Ev","Zt","bl","Cv","Os","hasExpand","Av","$v","onSelect","wv","Um","Bo","Dv","$s","Mv","Xm","Ov","Lv","kv","Se","_v","Vv","Qm","Rl","onUnselectItems","eI","Yv","qv","eo","tI","Xv","Uv","pt","collapsed","Zv","Jv","Kv","Qv","topToolbar","Hv","Wv","zv","Gm","Lo","buttons","jv","Gv","overflowY","Km","rt","optimized","body","header","empty","bulkActionButtons","pI","iI","sI","aI","nI","indexOf","shiftKey","slice","Math","min","dI","uI","Jm","cI","mI","gI","Ym","oI","rI","Q","fI","lI","reduce","Tl","filterElement","handleHide","hI","TI","ko","PI","Zm","bI","Ds","hideButton","RI","xI","spacer","hl","Pl","yI","pointerEvents","nt","ed","yr","defaultValues","filters","displayedFilters","td","vI","AI","EI","DI","reset","xl","watch","Rn","od","LI","unsubscribe","gr","SI","rd","onSubmit","$I","FI","NI","hideFilter","forEach","CI","OI","wI","kI","sd","clearFix","wo","initialValues","BI","nd","II","flexWrap","clear","ad","Date","vl","MI","onShow","zI","VI","Cl","_I","HI","Ms","oo","WI","ro","IG","Vs","UI","jI","qI","_t","XI","JI","GI","KI","QI","ld","_s","eF","ZI","findIndex","YI","no","tF","sF","rF","nF","oF","pd","$o","iF","uF","fF","yF","showFilter","dF","El","Il","aF","mF","Fl","ct","hF","bF","cF","lF","Sl","gF","Ao","RF","pF","PF","Hs","md","button","TF","context","Nl","cd","dd","vF","br","Bl","mt","CF","xF","disablePadding","VF","OF","v5","FF","$F","AF","DF","MF","Oo","_F","BF","zs","listItemButton","LF","SF","listItemText","kF","EF","wF","Ll","IF","NF","k5","HF","XF","UF","rc","zF","hn","jF","Ee","resettable","InputProps","endAdornment","WF","qF","placeholder","hiddenLabel","ud","QF","KF","Do","GF","JF","fd","YF","tS","Mo","ZF","eS","dS","gd","bd","oS","mS","cS","yd","Vo","uS","sS","Ws","aS","iS","rS","pS","kl","lS","nS","y6","PS","hS","RS","Rd","so","TS","Pn","floatingIcon","gS","floatingTooltip","bS","Tn","titleContainer","titleIcon","fS","yS","wl","xS","rowsPerPage","onPageChange","IS","ceil","qs","hd","vS","SS","getItemAriaLabel","Rr","FS","CS","flexShrink","nextIconButtonProps","backIconButtonProps","Td","ES","LS","Al","NS","BS","Cn","wS","rowsPerPageOptions","_S","actions","limit","VS","hasNextPage","setPage","setPerPage","DS","OS","$S","kS","js","offsetBegin","offsetEnd","xn","AS","Pd","HS","labelDisplayedRows","xd","onRowsPerPageChange","ActionsComponent","labelRowsPerPage","MS","$l","US","we","r4","availableChoices","selectedChoices","jS","Ol","zS","WS","Cd","Dl","ZS","GS","Us","QS","XS","JS","InputLabelProps","YS","vn","vd","isNaN","getDate","getFullYear","toString","getMonth","KS","test","nE","sE","pE","oE","Xs","tE","eE","rE","lE","In","Id","repeat","aE","Qs","Fd","getHours","getMinutes","iE","Ks","onRemove","file","fE","rawFile","preview","URL","revokeObjectURL","Gs","gE","uE","Ys","dE","removeIcon","Js","Ml","cE","_l","accept","inputProps","labelMultiple","labelSingle","maxSize","minSize","onDrop","validateFileRemoval","CE","File","Vl","createObjectURL","He","xE","vE","bE","getRootProps","getInputProps","TE","IE","hE","It","dropZone","PE","yE","be","Zs","RE","X4","Sd","EE","SE","FE","float","$E","ME","DE","nullLabel","falseLabel","trueLabel","wE","kE","_o","OE","LE","Nd","select","AE","Hl","Ht","Ed","NE","BE","ta","qE","WE","step","HE","ea","_E","VE","zE","zt","hr","jE","clearAlwaysVisible","QE","zl","clearButton","clearIcon","inputAdornedEnd","selectAdornment","visibleClearIcon","Pr","Ft","Wl","Ld","disableRipple","onMouseDown","GE","kd","Bd","JE","adornedEnd","inputRef","ao","Tr","ql","UE","XE","YE","oa","KE","ZE","Ho","DJ","initiallyVisible","eN","tN","xr","oN","rN","nN","sN","wd","lN","jl","aN","iN","Od","bN","$d","gN","St","Ad","RN","Dd","dN","Vd","yN","uN","fN","mN","Ve","crudGetMatching","crudGetOne","reference","validation","Md","pN","cN","Sn","_d","hN","Fn","ra","Cr","TN","PN","xN","dt","na","IN","CN","Ul","FN","vN","st","C3","BN","sa","kN","NN","EN","LN","SN","zd","disableValue","AN","WN","getDisableValue","qN","zN","Xl","$e","ON","Hd","UN","jN","DN","HN","$N","autoWidth","labelId","renderValue","aa","chips","_N","chip","MN","Ne","classNamInputWithOptionsPropse","componenInputWithOptionsPropst","crudGetMInputWithOptionsPropsatching","crudGetOInputWithOptionsPropsne","enableGetChoices","Ql","wN","VN","En","KN","QN","YN","GN","ia","Qe","qd","Wd","tB","JN","ZN","ce","eB","XN","jd","groupKey","isValid","sB","aB","oB","pB","iB","lB","la","Gl","rB","nB","Ud","TabsProps","locales","selectLocale","selectedLocale","uB","pa","fB","ca","dB","indicatorColor","textColor","tabs","Jl","cB","mB","boxShadow","Xd","getLabel","getSource","TB","Kl","hB","PB","hidden","Gd","yB","RB","bB","Qd","gB","borderBottomLeftRadius","borderBottomRightRadius","borderTop","FK","defaultLocale","selector","Nn","vB","FB","CB","IB","xB","Yl","OB","AB","wB","$B","zo","DB","noValidate","BB","vr","Jd","autoComplete","NB","LB","ma","SB","kB","EB","da","backgroundImage","MB","qB","WB","Kd","Image","onload","Wo","jB","VB","Ir","card","_B","zB","ua","HB","backgroundRepeat","backgroundSize","Zl","Yd","typography","h6","fontWeight","closedWidth","MuiButtonBase","styleOverrides","MuiFilledInput","ep","aside","UB","QB","Bn","JB","Zd","GB","Fr","noActions","Ce","hasShow","hasEdit","permissions","fa","XB","tL","ZB","eL","ga","KB","YB","me","disableAuthentication","rL","oL","tp","nL","Sr","rp","sL","aL","op","iL","qo","Er","pL","uL","dL","jo","gL","eu","fL","Nr","cL","Re","mL","queryOptions","ya","lL","TL","RL","hL","ba","yL","bL","se","kn","vL","Ln","FL","IL","Br","mobileToolbar","desktopToolbar","xL","defaultToolbar","Ra","ha","PL","CL","boxSizing","np","url","syncWithLocation","LL","tu","BL","SL","NL","sp","EL","intent","Ta","tabsWithErrors","ap","XL","formRootPathname","UL","QL","HL","_L","jL","$L","wL","ut","GL","OL","DL","ML","WL","kL","VL","AL","Wt","zL","ou","ip","errorTabButton","qL","nu","JL","ru","pathnameBase","ZL","lp","KL","Ge","I7","su","au","YL","pp","sk","ok","ik","ak","tk","iu","rk","ek","nk","Be","contentClassName","lu","Pa","lk","pk","ck","_e","cp","fk","gk","Lr","mk","dk","yk","Je","uk","reValidateMode","resolver","warnWhenUnsavedChanges","mp","representation","getRepresentation","join","wn","boolean","date","email","referenceChild","referenceArray","referenceArrayChild","richText","cu","xk","Ck","Rk","vk","Pk","log","pu","capitalize","getElement","xa","i8","hk","Tk","Fk","Ik","dp","mu","Lk","kr","wr","Sk","emptyWhileLoading","Nk","Bk","wk","du","kk","Ar","Uo","Ca","Ek","Ok","$k","va","Ak","ft","z","Ke","$r","Vk","zk","Mk","fu","_k","uu","Hk","U","linkType","link","Dr","qk","valueLabelTrue","valueLabelFalse","TrueIcon","Uk","FalseIcon","Xk","looseValue","Jk","Gk","jk","Or","Yk","Qk","fp","An","Kk","Wk","verticalAlign","$n","ew","sw","tw","gp","rw","aw","nw","yu","gu","Zk","ow","Vr","iw","showTime","pw","lw","yp","bp","timeZone","bu","toLocaleString","toLocaleDateString","Mr","RangeError","_r","cw","fw","mw","Rp","dw","uw","gw","Rw","download","ping","rel","bw","Ia","io","yw","hu","Tw","lo","hw","Ru","vw","xw","Pw","Tu","Pu","Cw","Cu","Nw","Fa","po","Sw","Bw","Ew","On","list","image","Fw","xu","hp","Iw","maxHeight","Xo","Lw","ww","kw","Tp","Pp","Aw","Dn","Intl","NumberFormat","Mn","_w","Mw","Qo","Vw","Ow","Ww","Et","vu","Dw","zw","Fu","progress","Iu","Hw","$w","_n","xp","Jw","qw","Su","Qw","Gw","Xw","jw","Uw","textDecoration","Vn","Hr","nA","Zw","Ye","eA","aA","Y","sA","rA","lA","oA","resourceLinkPath","iA","Sa","referenceRecord","tA","pA","Eu","Bu","Yw","Nu","Kw","Lu","uA","zr","cA","dA","mA","ku","ae","wu","yA","RA","gA","Cp","fA","bA","Wr","Ea","hA","stripTags","xA","PA","vp","Au","CA","TA","Sp","vA","SA","IA","FA","Ip","Fp","co","at","EA","BA","NA","$u","Ou","Du","wA","LA","kA","AA","Mu","MA","Na","_A","DA","VA","$A","OA","_u","qA","Ba","UA","zA","WA","addLabel","Vu","jA","HA","Xte","Hn","JA","GA","YA","QA","KA","XA","qr","ZA","r$","e$","Ep","t$","o$","Hu","La","Np","p$","zn","c$","m$","d$","i$","ka","stack","n$","s$","l$","Wn","Bp","a$","Lp","show","jr","Wu","R$","h$","f$","b$","y$","zu","wa","koe","g$","kp","I$","qu","v$","T$","x$","wp","P$","C$","k$","w$","B$","Ap","F$","$p","Le","L$","A$","$$","N$","Xu","Uu","Op","E$","ju","mo","Qu","S$","z$","H$","M$","D$","Ur","V$","Gu","_$","O$","Ze","Ku","U$","X$","j$","Q$","uo","G$","Xr","q$","Ju","paragraph","Aa","W$","Dp","J$","gt","Yu","Nt","Z$","K$","Y$","$a","nO","sO","aO","oO","tO","qn","rO","eO","Oe","uO","qt","fO","gO","yO","pO","Qr","dO","Gr","Zu","lO","bO","cO","V","mO","filterDefaultValues","refresh","jn","noResults","iO","ef","disableSyncWithLocation","RO","Mp","ee","Vp","EO","vO","IO","SO","Jr","xO","CO","tf","rf","NO","TO","PO","BO","jt","FO","of","hO","_p","Go","getProps","Ene","wO","Oa","OO","sf","DO","MO","LO","AO","$O","nf","Hp","hasLeftAvatarOrIcon","hasRightAvatarOrIcon","hasSecondaryText","hasTertiaryText","jO","et","UO","XO","HO","zO","af","qO","Da","tertiary","WO","Kr","zp","VO","_O","aD","leftAvatar","rightAvatar","rightIcon","secondaryText","tertiaryText","rD","nD","ve","startsWith","qp","lD","oD","tD","JO","iD","lf","KO","pf","Wp","mf","ZO","he","sD","YO","eD","cf","QO","GO","mD","notification","Un","cD","pD","layout","catchAll","loginPage","uD","jp","dD"],"sources":["D:\\myFishProject\\frontend\\node_modules\\tsup\\assets\\esm_shims.js","D:\\myFishProject\\frontend\\node_modules\\css-mediaquery\\index.js","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\index.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\auth\\Login.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\auth\\LoginForm.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\ArrayInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\AppBar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\SidebarToggleButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\useSidebarState.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\LoadingIndicator.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\index.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\CloneButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\Button.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\CreateButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\ShowButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\SortButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkDeleteButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkDeleteWithConfirmButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkDeleteWithUndoButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkExportButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkUpdateButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkUpdateWithConfirmButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\BulkUpdateWithUndoButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\DeleteButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\DeleteWithUndoButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\DeleteWithConfirmButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\EditButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\ExportButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\IconButtonWithTooltip.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\LocalesMenuButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\ListButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\RefreshButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\RefreshIconButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\SaveButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\SkipNavigationButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\button\\ToggleThemeButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\UserMenu.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\UserMenuContextProvider.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\UserMenuContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\auth\\Logout.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\HideOnScroll.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\CardContentInner.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Confirm.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\DashboardMenuItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\MenuItemLink.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\DeviceTestWrapper.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Error.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Title.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\useResetErrorBoundaryOnLocationChange.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Layout.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Sidebar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Menu.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\LinearProgress.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Loading.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\LoadingPage.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\NotFound.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Notification.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Theme\\useTheme.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\Theme\\ThemeProvider.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\TopToolbar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\layout\\useUserMenu.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\InputHelperText.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\sanitizeInputRestProps.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\Labeled.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\ArrayInputContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\SimpleFormIterator.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\useArrayInput.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\useSimpleFormIteratorStyles.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\SimpleFormIteratorContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\SimpleFormIteratorItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\useSimpleFormIterator.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\SimpleFormIteratorItemContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\AddItemButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\RemoveItemButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\useSimpleFormIteratorItem.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ArrayInput\\ReOrderButtons.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\AutocompleteInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\useSupportCreateSuggestion.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\AutocompleteArrayInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\BooleanInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\InputPropTypes.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\CheckboxGroupInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\CheckboxGroupInputItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\DatagridInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\index.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridBody.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\useDatagridStyles.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridRow.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridCell.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\ExpandRowButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\useDatagridContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridContext.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridHeaderCell.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridLoading.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\Placeholder.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\Datagrid.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridHeader.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\datagrid\\DatagridContextProvider.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\BulkActionsToolbar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\Filter.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterForm.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterFormInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\FilterContext.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterButtonMenuItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\useSavedQueries.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\AddSavedQueryDialog.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\RemoveSavedQueryDialog.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterList.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterListItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\FilterLiveSearch.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\AddSavedQueryIconButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\RemoveSavedQueryIconButton.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\SavedQueriesList.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\filter\\SavedQueryFilterListItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\pagination\\Pagination.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\pagination\\PaginationActions.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\pagination\\PaginationLimit.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\DateInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\DateTimeInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\FileInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\FileInputPreview.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ImageInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\NullableBooleanInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\NumberInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\PasswordInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\TextInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ResettableTextField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\RadioButtonGroupInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\RadioButtonGroupInputItem.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ReferenceArrayInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ReferenceError.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\ReferenceInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\SearchInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\SelectArrayInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\SelectInput.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\TranslatableInputs.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\TranslatableInputsTabs.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\TranslatableInputsTab.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\input\\TranslatableInputsTabContent.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\defaultTheme.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\Create.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\CreateView.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\CreateActions.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\Edit.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\EditView.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\EditActions.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\editFieldTypes.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\TabbedForm.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\TabbedFormView.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\Toolbar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\TabbedFormTabs.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\useFormRootPath.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\FormTab.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\FormTabHeader.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\form\\SimpleForm.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\EditGuesser.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\Show.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\ShowView.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\ShowActions.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\showFieldTypes.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ArrayField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\types.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\BooleanField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\sanitizeFieldRestProps.ts","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ChipField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\DateField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\EmailField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\FileField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\FunctionField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ImageField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\NumberField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ReferenceArrayField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ReferenceField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\Link.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ReferenceManyField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\ReferenceOneField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\RichTextField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\SelectField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\TextField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\TranslatableFields.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\TranslatableFieldsTabs.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\TranslatableFieldsTab.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\TranslatableFieldsTabContent.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\UrlField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\field\\WrapperField.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\SimpleShowLayout.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\ShowGuesser.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\TabbedShowLayout.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\TabbedShowLayoutTabs.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\detail\\Tab.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\Empty.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\List.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\ListView.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\ListToolbar.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\ListActions.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\ListGuesser.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\listFieldTypes.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\SingleFieldList.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\SimpleList.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\list\\SimpleListLoading.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\AdminUI.tsx","D:\\myFishProject\\frontend\\node_modules\\ra-ui-materialui\\src\\AdminContext.tsx"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","export * from './auth';\nexport * from './button';\nexport * from './defaultTheme';\nexport * from './detail';\nexport * from './form';\nexport * from './field';\nexport * from './Labeled';\nexport * from './input';\nexport * from './layout';\nexport * from './Link';\nexport * from './list';\nexport * from './types';\nexport * from './AdminUI';\nexport * from './AdminContext';\n","import * as React from 'react';\nimport { HtmlHTMLAttributes, ReactNode, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar, SxProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useNavigate } from 'react-router-dom';\nimport { useCheckAuth } from 'ra-core';\n\nimport { LoginForm as DefaultLoginForm } from './LoginForm';\n\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider.login()` method. Redirects to the root page (/)\n * upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\nexport const Login = (props: LoginProps) => {\n    const { children, backgroundImage, ...rest } = props;\n    const containerRef = useRef<HTMLDivElement>();\n    let backgroundImageLoaded = false;\n    const checkAuth = useCheckAuth();\n    const navigate = useNavigate();\n    useEffect(() => {\n        checkAuth({}, false)\n            .then(() => {\n                // already authenticated, redirect to the home page\n                navigate('/');\n            })\n            .catch(() => {\n                // not authenticated, stay on the login page\n            });\n    }, [checkAuth, navigate]);\n\n    const updateBackgroundImage = () => {\n        if (!backgroundImageLoaded && containerRef.current) {\n            containerRef.current.style.backgroundImage = `url(${backgroundImage})`;\n            backgroundImageLoaded = true;\n        }\n    };\n\n    // Load background image asynchronously to speed up time to interactive\n    const lazyLoadBackgroundImage = () => {\n        if (backgroundImage) {\n            const img = new Image();\n            img.onload = updateBackgroundImage;\n            img.src = backgroundImage;\n        }\n    };\n\n    useEffect(() => {\n        if (!backgroundImageLoaded) {\n            lazyLoadBackgroundImage();\n        }\n    });\n    return (\n        <Root {...rest} ref={containerRef}>\n            <Card className={LoginClasses.card}>\n                <div className={LoginClasses.avatar}>\n                    <Avatar className={LoginClasses.icon}>\n                        <LockIcon />\n                    </Avatar>\n                </div>\n                {children}\n            </Card>\n        </Root>\n    );\n};\n\nexport interface LoginProps extends HtmlHTMLAttributes<HTMLDivElement> {\n    backgroundImage?: string;\n    children?: ReactNode;\n    className?: string;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaLogin';\nexport const LoginClasses = {\n    card: `${PREFIX}-card`,\n    avatar: `${PREFIX}-avatar`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    height: '1px',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundImage:\n        'radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)',\n\n    [`& .${LoginClasses.card}`]: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    [`& .${LoginClasses.avatar}`]: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    [`& .${LoginClasses.icon}`]: {\n        backgroundColor: theme.palette.secondary[500],\n    },\n}));\n\nLogin.propTypes = {\n    backgroundImage: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nLogin.defaultProps = {\n    children: <DefaultLoginForm />,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Button, CardContent, CircularProgress } from '@mui/material';\nimport {\n    Form,\n    required,\n    useTranslate,\n    useLogin,\n    useNotify,\n    useSafeSetState,\n} from 'ra-core';\nimport { TextInput } from '../input';\n\nexport const LoginForm = (props: LoginFormProps) => {\n    const { redirectTo, className } = props;\n    const [loading, setLoading] = useSafeSetState(false);\n    const login = useLogin();\n    const translate = useTranslate();\n    const notify = useNotify();\n\n    const submit = (values: FormData) => {\n        setLoading(true);\n        login(values, redirectTo)\n            .then(() => {\n                setLoading(false);\n            })\n            .catch(error => {\n                setLoading(false);\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : typeof error === 'undefined' || !error.message\n                        ? 'ra.auth.sign_in_error'\n                        : error.message,\n                    {\n                        type: 'warning',\n                        messageArgs: {\n                            _:\n                                typeof error === 'string'\n                                    ? error\n                                    : error && error.message\n                                    ? error.message\n                                    : undefined,\n                        },\n                    }\n                );\n            });\n    };\n\n    return (\n        <StyledForm\n            onSubmit={submit}\n            mode=\"onChange\"\n            noValidate\n            className={className}\n        >\n            <CardContent className={LoginFormClasses.content}>\n                <TextInput\n                    autoFocus\n                    source=\"username\"\n                    label={translate('ra.auth.username')}\n                    validate={required()}\n                    fullWidth\n                />\n                <TextInput\n                    source=\"password\"\n                    label={translate('ra.auth.password')}\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    validate={required()}\n                    fullWidth\n                />\n\n                <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    disabled={loading}\n                    fullWidth\n                    className={LoginFormClasses.button}\n                >\n                    {loading ? (\n                        <CircularProgress\n                            className={LoginFormClasses.icon}\n                            size={19}\n                            thickness={3}\n                        />\n                    ) : (\n                        translate('ra.auth.sign_in')\n                    )}\n                </Button>\n            </CardContent>\n        </StyledForm>\n    );\n};\n\nconst PREFIX = 'RaLoginForm';\n\nexport const LoginFormClasses = {\n    content: `${PREFIX}-content`,\n    button: `${PREFIX}-button`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst StyledForm = styled(Form, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${LoginFormClasses.content}`]: {\n        width: 300,\n    },\n    [`& .${LoginFormClasses.button}`]: {\n        marginTop: theme.spacing(2),\n    },\n    [`& .${LoginFormClasses.icon}`]: {\n        margin: theme.spacing(0.3),\n    },\n}));\n\nexport interface LoginFormProps {\n    redirectTo?: string;\n    className?: string;\n}\n\ninterface FormData {\n    username: string;\n    password: string;\n}\nLoginForm.propTypes = {\n    redirectTo: PropTypes.string,\n};\n","import * as React from 'react';\nimport { cloneElement, Children, ReactElement, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport {\n    isRequired,\n    FieldTitle,\n    composeSyncValidators,\n    RaRecord,\n    useApplyInputDefaultValues,\n    useGetValidationErrorMessage,\n    useResourceContext,\n} from 'ra-core';\nimport { useFieldArray, useFormContext, useWatch } from 'react-hook-form';\nimport { InputLabel, FormControl, FormHelperText } from '@mui/material';\nimport isEqual from 'lodash/isEqual';\n\nimport { LinearProgress } from '../../layout';\nimport { CommonInputProps } from '../CommonInputProps';\nimport { InputHelperText } from '../InputHelperText';\nimport { sanitizeInputRestProps } from '../sanitizeInputRestProps';\nimport { Labeled } from '../../Labeled';\nimport { ArrayInputContext } from './ArrayInputContext';\n\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-hook-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see {@link https://react-hook-form.com/api/usefieldarray}\n */\nexport const ArrayInput = (props: ArrayInputProps) => {\n    const {\n        className,\n        defaultValue,\n        label,\n        isFetching,\n        isLoading,\n        children,\n        helperText,\n        record,\n        source,\n        validate,\n        variant,\n        disabled,\n        margin = 'dense',\n        ...rest\n    } = props;\n    const sanitizedValidate = Array.isArray(validate)\n        ? composeSyncValidators(validate)\n        : validate;\n    const getValidationErrorMessage = useGetValidationErrorMessage();\n    const resource = useResourceContext(props);\n\n    const fieldProps = useFieldArray({\n        name: source,\n    });\n\n    const {\n        getFieldState,\n        clearErrors,\n        formState,\n        getValues,\n        register,\n        setError,\n        unregister,\n    } = useFormContext();\n\n    const { isSubmitted } = formState;\n\n    // We need to register the array itself as a field to enable validation at its level\n    useEffect(() => {\n        register(source);\n\n        return () => {\n            unregister(source, { keepValue: true });\n        };\n    }, [register, unregister, source]);\n\n    useApplyInputDefaultValues(props);\n\n    const value = useWatch({ name: source });\n    const { isDirty, invalid, error } = getFieldState(source, formState);\n\n    // As react-hook-form does not handle validation on the array itself,\n    // we need to do it manually\n    const errorRef = useRef(null);\n    useEffect(() => {\n        const applyValidation = async () => {\n            const newError = await sanitizedValidate(value, getValues(), props);\n            if (newError && !isEqual(errorRef.current, newError)) {\n                errorRef.current = newError;\n                setError(source, {\n                    type: 'manual',\n                    message: getValidationErrorMessage(newError),\n                });\n            }\n\n            if (!newError && error) {\n                errorRef.current = null;\n                clearErrors(source);\n            }\n        };\n\n        if (sanitizedValidate) {\n            applyValidation();\n        }\n    }, [\n        clearErrors,\n        error,\n        sanitizedValidate,\n        value,\n        getValues,\n        props,\n        setError,\n        source,\n        getValidationErrorMessage,\n    ]);\n\n    if (isLoading) {\n        return (\n            <Labeled label={label} className={className}>\n                <LinearProgress />\n            </Labeled>\n        );\n    }\n\n    return (\n        <FormControl\n            fullWidth\n            margin=\"normal\"\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            error={(isDirty || isSubmitted) && invalid}\n            {...sanitizeInputRestProps(rest)}\n        >\n            <InputLabel\n                htmlFor={source}\n                shrink\n                error={(isDirty || isSubmitted) && invalid}\n            >\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired(validate)}\n                />\n            </InputLabel>\n            <ArrayInputContext.Provider value={fieldProps}>\n                {cloneElement(Children.only(children), {\n                    ...fieldProps,\n                    record,\n                    resource,\n                    source,\n                    variant,\n                    margin,\n                    disabled,\n                })}\n            </ArrayInputContext.Provider>\n            {!!((isDirty || isSubmitted) && invalid) || helperText ? (\n                <FormHelperText error={(isDirty || isSubmitted) && invalid}>\n                    <InputHelperText\n                        touched={isDirty || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                </FormHelperText>\n            ) : null}\n        </FormControl>\n    );\n};\n\nArrayInput.defaultProps = {\n    options: {},\n    fullWidth: true,\n};\n\nexport const getArrayInputError = error => {\n    if (Array.isArray(error)) {\n        return undefined;\n    }\n    return error;\n};\n\nexport type ArrayInputProps = CommonInputProps & {\n    className?: string;\n    children: ReactElement;\n    disabled?: boolean;\n    isFetching?: boolean;\n    isLoading?: boolean;\n    record?: Partial<RaRecord>;\n};\n","import * as React from 'react';\nimport { FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    AppBar as MuiAppBar,\n    AppBarProps as MuiAppBarProps,\n    Toolbar,\n    Typography,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport { ComponentPropType } from 'ra-core';\n\nimport { SidebarToggleButton } from './SidebarToggleButton';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { UserMenu } from './UserMenu';\nimport { HideOnScroll } from './HideOnScroll';\n\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.color The color of the AppBar\n * @param {boolean} props.open State of the <Admin/> Sidebar\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\n *\n * @example\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props}>\n *           <Typography\n *               variant=\"h6\"\n *               color=\"inherit\"\n *               className={classes.title}\n *               id=\"react-admin-title\"\n *           />\n *       </AppBar>\n *   );\n *};\n *\n * @example Without a user menu\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props} userMenu={false} />\n *   );\n *};\n */\nexport const AppBar: FC<AppBarProps> = memo(props => {\n    const {\n        children,\n        className,\n        color = 'secondary',\n        open,\n        title,\n        userMenu = DefaultUserMenu,\n        container: Container = HideOnScroll,\n        ...rest\n    } = props;\n\n    const isXSmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n\n    return (\n        <Container className={className}>\n            <StyledAppBar\n                className={AppBarClasses.appBar}\n                color={color}\n                {...rest}\n            >\n                <Toolbar\n                    disableGutters\n                    variant={isXSmall ? 'regular' : 'dense'}\n                    className={AppBarClasses.toolbar}\n                >\n                    <SidebarToggleButton className={AppBarClasses.menuButton} />\n                    {Children.count(children) === 0 ? (\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={AppBarClasses.title}\n                            id=\"react-admin-title\"\n                        />\n                    ) : (\n                        children\n                    )}\n                    <LoadingIndicator />\n                    {typeof userMenu === 'boolean' ? (\n                        userMenu === true ? (\n                            <UserMenu />\n                        ) : null\n                    ) : (\n                        userMenu\n                    )}\n                </Toolbar>\n            </StyledAppBar>\n        </Container>\n    );\n});\n\nAppBar.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    color: PropTypes.oneOf([\n        'default',\n        'inherit',\n        'primary',\n        'secondary',\n        'transparent',\n    ]),\n    container: ComponentPropType,\n    // @deprecated\n    open: PropTypes.bool,\n    userMenu: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n};\n\nconst DefaultUserMenu = <UserMenu />;\n\nexport interface AppBarProps extends Omit<MuiAppBarProps, 'title'> {\n    container?: React.ElementType<any>;\n    // @deprecated\n    open?: boolean;\n    title?: string | JSX.Element;\n    userMenu?: JSX.Element | boolean;\n}\n\nconst PREFIX = 'RaAppBar';\n\nexport const AppBarClasses = {\n    appBar: `${PREFIX}-appBar`,\n    toolbar: `${PREFIX}-toolbar`,\n    menuButton: `${PREFIX}-menuButton`,\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\n    title: `${PREFIX}-title`,\n};\n\nconst StyledAppBar = styled(MuiAppBar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${AppBarClasses.toolbar}`]: {\n        paddingRight: 24,\n    },\n\n    [`& .${AppBarClasses.menuButton}`]: {\n        marginLeft: '0.2em',\n        marginRight: '0.2em',\n    },\n\n    [`& .${AppBarClasses.title}`]: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { IconButton, Tooltip } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useTranslate } from 'ra-core';\n\nimport { useSidebarState } from './useSidebarState';\n\n/**\n * A button that toggles the sidebar. Used by default in the <AppBar>.\n * @param props The component props\n * @param {String} props.className An optional class name to apply to the button\n\n */\nexport const SidebarToggleButton = (props: SidebarToggleButtonProps) => {\n    const translate = useTranslate();\n\n    const { className } = props;\n    const [open, setOpen] = useSidebarState();\n\n    return (\n        <Tooltip\n            className={className}\n            title={translate(\n                open ? 'ra.action.close_menu' : 'ra.action.open_menu',\n                {\n                    _: 'Open/Close menu',\n                }\n            )}\n            enterDelay={500}\n        >\n            <StyledIconButton\n                color=\"inherit\"\n                onClick={() => setOpen(!open)}\n                size=\"large\"\n            >\n                <MenuIcon\n                    classes={{\n                        root: open\n                            ? SidebarToggleButtonClasses.menuButtonIconOpen\n                            : SidebarToggleButtonClasses.menuButtonIconClosed,\n                    }}\n                />\n            </StyledIconButton>\n        </Tooltip>\n    );\n};\n\nexport type SidebarToggleButtonProps = {\n    className?: string;\n};\n\nconst PREFIX = 'RaSidebarToggleButton';\n\nexport const SidebarToggleButtonClasses = {\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\n};\n\nconst StyledIconButton = styled(IconButton, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${SidebarToggleButtonClasses.menuButtonIconClosed}`]: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        transform: 'rotate(0deg)',\n    },\n\n    [`& .${SidebarToggleButtonClasses.menuButtonIconOpen}`]: {\n        transition: theme.transitions.create(['transform'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        transform: 'rotate(180deg)',\n    },\n}));\n","import { useStore } from 'ra-core';\n\n/**\n * A hook that returns the sidebar open state and a function to toggle it.\n *\n * @example\n * const ToggleSidebar = () => {\n *     const [open, setOpen] = useSidebarState();\n *     return (\n *         <Button onClick={() => setOpen(!open)}>\n *             {open ? 'Open' : 'Close'}\n *         </Button>\n *     );\n * };\n */\nexport const useSidebarState = (): useSidebarStateResult =>\n    useStore<boolean>('sidebar.open', true);\n\nexport type useSidebarStateResult = [boolean, (open: boolean) => void];\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/material/styles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useLoading } from 'ra-core';\n\nimport { RefreshIconButton } from '../button';\nimport { SxProps } from '@mui/system';\n\nexport const LoadingIndicator = (props: LoadingIndicatorProps) => {\n    const { className, sx, ...rest } = props;\n    const loading = useLoading();\n\n    const theme = useTheme();\n    return (\n        <Root className={className} sx={sx}>\n            {loading ? (\n                <CircularProgress\n                    className={clsx(\n                        'app-loader',\n                        LoadingIndicatorClasses.loader\n                    )}\n                    color=\"inherit\"\n                    size={theme.spacing(2)}\n                    thickness={6}\n                    {...rest}\n                />\n            ) : (\n                <RefreshIconButton\n                    className={LoadingIndicatorClasses.loadedIcon}\n                />\n            )}\n        </Root>\n    );\n};\n\nLoadingIndicator.propTypes = {\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    width: PropTypes.string,\n};\n\ninterface LoadingIndicatorProps {\n    className?: string;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaLoadingIndicator';\n\nexport const LoadingIndicatorClasses = {\n    loader: `${PREFIX}-loader`,\n    loadedIcon: `${PREFIX}-loadedIcon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${LoadingIndicatorClasses.loader}`]: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n\n    [`& .${LoadingIndicatorClasses.loadedIcon}`]: {},\n}));\n","import CloneButton, { CloneButtonProps } from './CloneButton';\nimport CreateButton, {\n    CreateButtonProps,\n    CreateButtonClasses,\n} from './CreateButton';\nimport ShowButton, { ShowButtonProps } from './ShowButton';\nimport SortButton, { SortButtonProps } from './SortButton';\n\nexport * from './BulkDeleteButton';\nexport * from './BulkDeleteWithConfirmButton';\nexport * from './BulkDeleteWithUndoButton';\nexport * from './BulkExportButton';\nexport * from './BulkUpdateButton';\nexport * from './BulkUpdateWithConfirmButton';\nexport * from './BulkUpdateWithUndoButton';\nexport * from './Button';\nexport * from './DeleteButton';\nexport * from './DeleteWithConfirmButton';\nexport * from './DeleteWithUndoButton';\nexport * from './EditButton';\nexport * from './ExportButton';\nexport * from './IconButtonWithTooltip';\nexport * from './LocalesMenuButton';\nexport * from './ListButton';\nexport * from './RefreshButton';\nexport * from './RefreshIconButton';\nexport * from './SaveButton';\nexport * from './SkipNavigationButton';\nexport * from './ToggleThemeButton';\n\nexport type {\n    CloneButtonProps,\n    CreateButtonProps,\n    ShowButtonProps,\n    SortButtonProps,\n};\n\nexport {\n    CloneButton,\n    CreateButton,\n    CreateButtonClasses,\n    ShowButton,\n    SortButton,\n};\n","import * as React from 'react';\nimport { memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Queue from '@mui/icons-material/Queue';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport {\n    RaRecord,\n    useResourceContext,\n    useRecordContext,\n    useCreatePath,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const CloneButton = (props: CloneButtonProps) => {\n    const {\n        label = 'ra.action.clone',\n        scrollToTop = true,\n        icon = defaultIcon,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    const pathname = createPath({ resource, type: 'create' });\n    return (\n        <Button\n            component={Link}\n            to={\n                record\n                    ? {\n                          pathname,\n                          search: stringify({\n                              source: JSON.stringify(omitId(record)),\n                          }),\n                          state: { _scrollToTop: scrollToTop },\n                      }\n                    : pathname\n            }\n            label={label}\n            onClick={stopPropagation}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <Queue />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\nconst omitId = ({ id, ...rest }: Partial<RaRecord>) => rest;\n\nconst sanitizeRestProps = ({\n    resource,\n    record,\n    ...rest\n}: Omit<CloneButtonProps, 'label' | 'scrollToTop' | 'icon'>) => rest;\n\ninterface Props {\n    record?: Partial<RaRecord>;\n    icon?: ReactElement;\n    scrollToTop?: boolean;\n}\n\nexport type CloneButtonProps = Props & Omit<ButtonProps, 'record'>;\n\nCloneButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    record: PropTypes.any,\n};\n\nexport default memo(CloneButton);\n","import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button as MuiButton,\n    ButtonProps as MuiButtonProps,\n    Tooltip,\n    IconButton,\n    useMediaQuery,\n    PropTypes as MuiPropTypes,\n    Theme,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n    MutationMode,\n    RaRecord,\n    RedirectionSideEffect,\n    useTranslate,\n} from 'ra-core';\nimport { Path } from 'react-router';\n\nexport type LocationDescriptor = Partial<Path> & {\n    redirect?: boolean;\n    state?: any;\n    replace?: boolean;\n};\n\n/**\n * A generic Button with side icon. Only the icon is displayed on small screens.\n *\n * The component translates the label. Pass the icon as child.\n * The icon displays on the left side of the button by default. Set alignIcon prop to 'right' to inverse.\n *\n * @example\n *\n * <Button label=\"Edit\" color=\"secondary\" onClick={doEdit}>\n *   <ContentCreate />\n * </Button>\n *\n */\nexport const Button = (props: ButtonProps) => {\n    const {\n        alignIcon = 'left',\n        children,\n        className,\n        disabled,\n        label,\n        color = 'primary',\n        size = 'small',\n        to: locationDescriptor,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const translatedLabel = label ? translate(label, { _: label }) : undefined;\n    const linkParams = getLinkParams(locationDescriptor);\n\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n    const restProps = sanitizeButtonRestProps(rest);\n\n    return isXSmall ? (\n        label && !disabled ? (\n            <Tooltip title={translatedLabel}>\n                <IconButton\n                    aria-label={translatedLabel}\n                    className={className}\n                    color={color}\n                    {...restProps}\n                    {...linkParams}\n                    size=\"large\"\n                >\n                    {children}\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <IconButton\n                className={className}\n                color={color}\n                disabled={disabled}\n                {...restProps}\n                {...linkParams}\n                size=\"large\"\n            >\n                {children}\n            </IconButton>\n        )\n    ) : (\n        <StyledButton\n            className={className}\n            color={color}\n            size={size}\n            aria-label={translatedLabel}\n            disabled={disabled}\n            startIcon={alignIcon === 'left' && children ? children : undefined}\n            endIcon={alignIcon === 'right' && children ? children : undefined}\n            {...restProps}\n            {...linkParams}\n        >\n            {translatedLabel}\n        </StyledButton>\n    );\n};\n\ninterface Props {\n    alignIcon?: 'left' | 'right';\n    children?: ReactElement;\n    className?: string;\n    color?: MuiPropTypes.Color;\n    component?: ReactNode;\n    to?: string | LocationDescriptor;\n    disabled?: boolean;\n    label?: string;\n    size?: 'small' | 'medium' | 'large';\n    icon?: ReactElement;\n    redirect?: RedirectionSideEffect;\n    variant?: string;\n    // May be injected by Toolbar\n    record?: RaRecord;\n    resource?: string;\n    mutationMode?: MutationMode;\n}\n\nexport type ButtonProps = Props & MuiButtonProps;\n\nexport const sanitizeButtonRestProps = ({\n    // The next props are injected by Toolbar\n    invalid,\n    pristine,\n    record,\n    redirect,\n    resource,\n    mutationMode,\n    hasCreate,\n    ...rest\n}: any) => rest;\n\nButton.propTypes = {\n    alignIcon: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.element,\n    className: PropTypes.string,\n    color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nconst PREFIX = 'RaButton';\n\nconst StyledButton = styled(MuiButton, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    '&.MuiButton-sizeSmall': {\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n        lineHeight: 1.5,\n    },\n});\n\nconst getLinkParams = (locationDescriptor?: LocationDescriptor | string) => {\n    // eslint-disable-next-line eqeqeq\n    if (locationDescriptor == undefined) {\n        return undefined;\n    }\n\n    if (typeof locationDescriptor === 'string') {\n        return { to: locationDescriptor };\n    }\n\n    const { redirect, replace, state, ...to } = locationDescriptor;\n    return {\n        to,\n        redirect,\n        replace,\n        state,\n    };\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery, Theme } from '@mui/material';\nimport ContentAdd from '@mui/icons-material/Add';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\n\nimport { Button, ButtonProps, sanitizeButtonRestProps } from './Button';\n\n/**\n * Opens the Create view of a given resource\n *\n * Renders as a regular button on desktop, and a Floating Action Button\n * on mobile.\n *\n * @example // basic usage\n * import { CreateButton } from 'react-admin';\n *\n * const CommentCreateButton = () => (\n *     <CreateButton label=\"Create comment\" />\n * );\n */\nconst CreateButton = (props: CreateButtonProps) => {\n    const {\n        className,\n        icon = defaultIcon,\n        label = 'ra.action.create',\n        scrollToTop = true,\n        variant,\n        ...rest\n    } = props;\n\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    const translate = useTranslate();\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('md')\n    );\n\n    return isSmall ? (\n        <StyledFab\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            color=\"primary\"\n            className={clsx(CreateButtonClasses.floating, className)}\n            aria-label={label && translate(label)}\n            {...sanitizeButtonRestProps(rest)}\n        >\n            {icon}\n        </StyledFab>\n    ) : (\n        <Button\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            className={className}\n            label={label}\n            variant={variant}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ContentAdd />;\n\ninterface Props {\n    resource?: string;\n    icon?: ReactElement;\n    scrollToTop?: boolean;\n}\n\nexport type CreateButtonProps = Props & ButtonProps;\n\nCreateButton.propTypes = {\n    resource: PropTypes.string,\n    className: PropTypes.string,\n    icon: PropTypes.element,\n    label: PropTypes.string,\n};\n\nconst PREFIX = 'RaCreateButton';\n\nexport const CreateButtonClasses = {\n    floating: `${PREFIX}-floating`,\n};\n\nconst StyledFab = styled(Fab, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`&.${CreateButtonClasses.floating}`]: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        margin: 0,\n        top: 'auto',\n        right: 20,\n        bottom: 60,\n        left: 'auto',\n        position: 'fixed',\n        zIndex: 1000,\n    },\n}));\n\nexport default memo(CreateButton, (prevProps, nextProps) => {\n    return (\n        prevProps.resource === nextProps.resource &&\n        prevProps.label === nextProps.label &&\n        prevProps.translate === nextProps.translate &&\n        prevProps.disabled === nextProps.disabled\n    );\n});\n","import * as React from 'react';\nimport { memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageEye from '@mui/icons-material/RemoveRedEye';\nimport { Link } from 'react-router-dom';\nimport {\n    RaRecord,\n    useResourceContext,\n    useRecordContext,\n    useCreatePath,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Show view of a given record\n *\n * @example // basic usage\n * import { ShowButton } from 'react-admin';\n *\n * const CommentShowButton = ({ record }) => (\n *     <ShowButton label=\"Show comment\" record={record} />\n * );\n */\nconst ShowButton = (props: ShowButtonProps) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.show',\n        scrollToTop = true,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    if (!record) return null;\n    return (\n        <Button\n            component={Link}\n            to={createPath({ type: 'show', resource, id: record.id })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            onClick={stopPropagation}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ImageEye />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\ninterface Props {\n    icon?: ReactElement;\n    label?: string;\n    record?: RaRecord;\n    scrollToTop?: boolean;\n}\n\nexport type ShowButtonProps = Props & ButtonProps;\n\nShowButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    scrollToTop: PropTypes.bool,\n};\n\nconst PureShowButton = memo(\n    ShowButton,\n    (props: ShowButtonProps, nextProps: ShowButtonProps) =>\n        props.resource === nextProps.resource &&\n        (props.record && nextProps.record\n            ? props.record.id === nextProps.record.id\n            : props.record == nextProps.record) && // eslint-disable-line eqeqeq\n        props.label === nextProps.label &&\n        props.disabled === nextProps.disabled\n);\n\nexport default PureShowButton;\n","import * as React from 'react';\nimport { ReactElement, memo } from 'react';\nimport {\n    Button,\n    Menu,\n    MenuItem,\n    Tooltip,\n    IconButton,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport SortIcon from '@mui/icons-material/Sort';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport {\n    useListSortContext,\n    useTranslate,\n    getFieldLabelTranslationArgs,\n    shallowEqual,\n} from 'ra-core';\n\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions = () => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\nconst SortButton = (props: SortButtonProps) => {\n    const { fields, label = 'ra.sort.sort_by', icon = defaultIcon } = props;\n    const { resource, sort, setSort } = useListSortContext();\n    const translate = useTranslate();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleChangeSort = (\n        event: React.MouseEvent<HTMLLIElement, MouseEvent>\n    ) => {\n        const field = event.currentTarget.dataset.sort;\n        setSort({\n            field,\n            order: field === sort.field ? inverseOrder(sort.order) : 'ASC',\n        });\n        setAnchorEl(null);\n    };\n\n    const buttonLabel = translate(label, {\n        field: translate(\n            ...getFieldLabelTranslationArgs({\n                resource,\n                source: sort.field,\n            })\n        ),\n        order: translate(`ra.sort.${sort.order}`),\n        _: label,\n    });\n\n    return (\n        <>\n            {isXSmall ? (\n                <Tooltip title={buttonLabel}>\n                    <IconButton\n                        aria-label={buttonLabel}\n                        color=\"primary\"\n                        onClick={handleClick}\n                        size=\"large\"\n                    >\n                        {icon}\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <StyledButton\n                    aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"primary\"\n                    onClick={handleClick}\n                    startIcon={icon}\n                    endIcon={<ArrowDropDownIcon />}\n                    size=\"small\"\n                >\n                    {buttonLabel}\n                </StyledButton>\n            )}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {fields.map(field => (\n                    <MenuItem\n                        onClick={handleChangeSort}\n                        data-sort={field}\n                        key={field}\n                    >\n                        {translate(\n                            ...getFieldLabelTranslationArgs({\n                                resource,\n                                source: field,\n                            })\n                        )}{' '}\n                        {translate(\n                            `ra.sort.${\n                                sort.field === field\n                                    ? inverseOrder(sort.order)\n                                    : 'ASC'\n                            }`\n                        )}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </>\n    );\n};\n\nconst defaultIcon = <SortIcon />;\n\nconst inverseOrder = (sort: string) => (sort === 'ASC' ? 'DESC' : 'ASC');\n\nconst arePropsEqual = (prevProps, nextProps) =>\n    shallowEqual(prevProps.fields, nextProps.fields);\n\nexport interface SortButtonProps {\n    fields: string[];\n    label?: string;\n    icon?: ReactElement;\n}\n\nconst StyledButton = styled(Button, {\n    name: 'RaSortButton',\n    overridesResolver: (props, styles) => styles.root,\n})({\n    '&.MuiButton-sizeSmall': {\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n        lineHeight: 1.5,\n    },\n    '& .MuiButton-endIcon': { ml: 0 },\n});\n\nexport default memo(SortButton, arePropsEqual);\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    BulkDeleteWithConfirmButton,\n    BulkDeleteWithConfirmButtonProps,\n} from './BulkDeleteWithConfirmButton';\nimport {\n    BulkDeleteWithUndoButton,\n    BulkDeleteWithUndoButtonProps,\n} from './BulkDeleteWithUndoButton';\nimport { MutationMode } from 'ra-core';\n\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport const BulkDeleteButton = ({\n    mutationMode = 'undoable',\n    ...props\n}: BulkDeleteButtonProps) =>\n    mutationMode === 'undoable' ? (\n        <BulkDeleteWithUndoButton {...props} />\n    ) : (\n        <BulkDeleteWithConfirmButton mutationMode={mutationMode} {...props} />\n    );\n\ninterface Props {\n    mutationMode?: MutationMode;\n}\n\nexport type BulkDeleteButtonProps = Props &\n    (BulkDeleteWithUndoButtonProps | BulkDeleteWithConfirmButtonProps);\n\nBulkDeleteButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport { Fragment, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport inflection from 'inflection';\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n    MutationMode,\n    useDeleteMany,\n    useListContext,\n    useNotify,\n    useRefresh,\n    useResourceContext,\n    useTranslate,\n    useUnselectAll,\n    useSafeSetState,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\nimport { BulkActionProps } from '../types';\n\nexport const BulkDeleteWithConfirmButton = (\n    props: BulkDeleteWithConfirmButtonProps\n) => {\n    const {\n        confirmTitle = 'ra.message.bulk_delete_title',\n        confirmContent = 'ra.message.bulk_delete_content',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        ...rest\n    } = props;\n    const { selectedIds } = useListContext(props);\n    const [isOpen, setOpen] = useSafeSetState(false);\n    const notify = useNotify();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const refresh = useRefresh();\n    const translate = useTranslate();\n    const [deleteMany, { isLoading }] = useDeleteMany(\n        resource,\n        { ids: selectedIds },\n        {\n            onSuccess: () => {\n                refresh();\n                notify('ra.notification.deleted', {\n                    type: 'info',\n                    messageArgs: { smart_count: selectedIds.length },\n                });\n                unselectAll();\n                setOpen(false);\n            },\n            onError: (error: Error) => {\n                notify(\n                    typeof error === 'string'\n                        ? error\n                        : error.message || 'ra.notification.http_error',\n                    {\n                        type: 'warning',\n                        messageArgs: {\n                            _:\n                                typeof error === 'string'\n                                    ? error\n                                    : error && error.message\n                                    ? error.message\n                                    : undefined,\n                        },\n                    }\n                );\n                setOpen(false);\n            },\n            mutationMode,\n        }\n    );\n\n    const handleClick = e => {\n        setOpen(true);\n        e.stopPropagation();\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    };\n\n    const handleDelete = e => {\n        deleteMany();\n\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <Fragment>\n            <StyledButton\n                onClick={handleClick}\n                label={label}\n                {...sanitizeRestProps(rest)}\n            >\n                {icon}\n            </StyledButton>\n            <Confirm\n                isOpen={isOpen}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    smart_count: selectedIds.length,\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: selectedIds.length,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: selectedIds.length,\n                                _: inflection.inflect(\n                                    resource,\n                                    selectedIds.length\n                                ),\n                            }),\n                            true\n                        ),\n                    }),\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst sanitizeRestProps = ({\n    classes,\n    filterValues,\n    label,\n    selectedIds,\n    ...rest\n}: Omit<\n    BulkDeleteWithConfirmButtonProps,\n    'resource' | 'icon' | 'mutationMode'\n>) => rest;\n\nexport interface BulkDeleteWithConfirmButtonProps\n    extends BulkActionProps,\n        ButtonProps {\n    confirmContent?: React.ReactNode;\n    confirmTitle?: string;\n    icon?: ReactElement;\n    mutationMode: MutationMode;\n}\n\nconst PREFIX = 'RaBulkDeleteWithConfirmButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n\nconst defaultIcon = <ActionDelete />;\n\nBulkDeleteWithConfirmButton.propTypes = {\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport { alpha } from '@mui/material/styles';\nimport {\n    useDeleteMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    useResourceContext,\n    useListContext,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\nimport { BulkActionProps } from '../types';\n\nexport const BulkDeleteWithUndoButton = (\n    props: BulkDeleteWithUndoButtonProps\n) => {\n    const {\n        label = 'ra.action.delete',\n        icon = defaultIcon,\n        onClick,\n        ...rest\n    } = props;\n    const { selectedIds } = useListContext(props);\n\n    const notify = useNotify();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const refresh = useRefresh();\n    const [deleteMany, { isLoading }] = useDeleteMany();\n\n    const handleClick = e => {\n        deleteMany(\n            resource,\n            { ids: selectedIds },\n            {\n                onSuccess: () => {\n                    notify('ra.notification.deleted', {\n                        type: 'info',\n                        messageArgs: { smart_count: selectedIds.length },\n                        undoable: true,\n                    });\n                    unselectAll();\n                },\n                onError: (error: Error) => {\n                    notify(\n                        typeof error === 'string'\n                            ? error\n                            : error.message || 'ra.notification.http_error',\n                        {\n                            type: 'warning',\n                            messageArgs: {\n                                _:\n                                    typeof error === 'string'\n                                        ? error\n                                        : error && error.message\n                                        ? error.message\n                                        : undefined,\n                            },\n                        }\n                    );\n                    refresh();\n                },\n                mutationMode: 'undoable',\n            }\n        );\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <StyledButton\n            onClick={handleClick}\n            label={label}\n            disabled={isLoading}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nconst sanitizeRestProps = ({\n    classes,\n    filterValues,\n    label,\n    selectedIds,\n    ...rest\n}: Omit<BulkDeleteWithUndoButtonProps, 'resource' | 'icon'>) => rest;\n\nexport interface BulkDeleteWithUndoButtonProps\n    extends BulkActionProps,\n        ButtonProps {\n    icon?: ReactElement;\n}\n\nconst PREFIX = 'RaBulkDeleteWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n\nBulkDeleteWithUndoButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@mui/icons-material/GetApp';\nimport {\n    fetchRelatedRecords,\n    useDataProvider,\n    useNotify,\n    Identifier,\n    Exporter,\n    useListContext,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Export the selected rows\n *\n * To be used inside the <List bulkActionButtons> prop.\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport const BulkExportButton = (props: BulkExportButtonProps) => {\n    const {\n        onClick,\n        label = 'ra.action.export',\n        icon = defaultIcon,\n        exporter: customExporter,\n        ...rest\n    } = props;\n    const {\n        exporter: exporterFromContext,\n        resource,\n        selectedIds,\n    } = useListContext(props);\n    const exporter = customExporter || exporterFromContext;\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const handleClick = useCallback(\n        event => {\n            exporter &&\n                dataProvider\n                    .getMany(resource, { ids: selectedIds })\n                    .then(({ data }) =>\n                        exporter(\n                            data,\n                            fetchRelatedRecords(dataProvider),\n                            dataProvider,\n                            resource\n                        )\n                    )\n                    .catch(error => {\n                        console.error(error);\n                        notify('ra.notification.http_error', {\n                            type: 'warning',\n                        });\n                    });\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [dataProvider, exporter, notify, onClick, resource, selectedIds]\n    );\n\n    return (\n        <Button\n            onClick={handleClick}\n            label={label}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <DownloadIcon />;\n\nconst sanitizeRestProps = ({\n    filterValues,\n    selectedIds,\n    resource,\n    ...rest\n}: Omit<BulkExportButtonProps, 'exporter' | 'label'>) => rest;\n\ninterface Props {\n    exporter?: Exporter;\n    filterValues?: any;\n    icon?: JSX.Element;\n    label?: string;\n    onClick?: (e: Event) => void;\n    selectedIds?: Identifier[];\n    resource?: string;\n}\n\nexport type BulkExportButtonProps = Props & ButtonProps;\n\nBulkExportButton.propTypes = {\n    exporter: PropTypes.func,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    BulkUpdateWithConfirmButton,\n    BulkUpdateWithConfirmButtonProps,\n} from './BulkUpdateWithConfirmButton';\nimport {\n    BulkUpdateWithUndoButton,\n    BulkUpdateWithUndoButtonProps,\n} from './BulkUpdateWithUndoButton';\nimport { MutationMode } from 'ra-core';\n\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport const BulkUpdateButton = (props: BulkUpdateButtonProps) => {\n    const { mutationMode, ...rest } = props;\n\n    return mutationMode === 'undoable' ? (\n        <BulkUpdateWithUndoButton {...rest} />\n    ) : (\n        <BulkUpdateWithConfirmButton mutationMode={mutationMode} {...rest} />\n    );\n};\n\ninterface Props {\n    mutationMode?: MutationMode;\n}\n\nexport type BulkUpdateButtonProps = Props &\n    (BulkUpdateWithUndoButtonProps | BulkUpdateWithConfirmButtonProps);\n\nBulkUpdateButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\n\nBulkUpdateButton.defaultProps = {\n    mutationMode: 'undoable',\n    data: [],\n};\n","import * as React from 'react';\nimport { Fragment, useState, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport inflection from 'inflection';\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n    useListContext,\n    useTranslate,\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    useResourceContext,\n    MutationMode,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\nimport { BulkActionProps } from '../types';\n\nexport const BulkUpdateWithConfirmButton = (\n    props: BulkUpdateWithConfirmButtonProps\n) => {\n    const notify = useNotify();\n    const refresh = useRefresh();\n    const translate = useTranslate();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const [isOpen, setOpen] = useState(false);\n    const { selectedIds } = useListContext(props);\n\n    const {\n        confirmTitle = 'ra.message.bulk_update_title',\n        confirmContent = 'ra.message.bulk_update_content',\n        data,\n        icon = defaultIcon,\n        label = 'ra.action.update',\n        mutationMode = 'pessimistic',\n        onClick,\n        onSuccess = () => {\n            refresh();\n            notify('ra.notification.updated', {\n                type: 'info',\n                messageArgs: { smart_count: selectedIds.length },\n            });\n            unselectAll();\n            setOpen(false);\n        },\n        onError = (error: Error | string) => {\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                {\n                    type: 'warning',\n                    messageArgs: {\n                        _:\n                            typeof error === 'string'\n                                ? error\n                                : error && error.message\n                                ? error.message\n                                : undefined,\n                    },\n                }\n            );\n            setOpen(false);\n        },\n        ...rest\n    } = props;\n\n    const [updateMany, { isLoading }] = useUpdateMany(\n        resource,\n        { ids: selectedIds, data },\n        {\n            onSuccess,\n            onError,\n            mutationMode,\n        }\n    );\n\n    const handleClick = e => {\n        setOpen(true);\n        e.stopPropagation();\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    };\n\n    const handleUpdate = e => {\n        updateMany();\n\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <Fragment>\n            <StyledButton\n                onClick={handleClick}\n                label={label}\n                {...sanitizeRestProps(rest)}\n            >\n                {icon}\n            </StyledButton>\n            <Confirm\n                isOpen={isOpen}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    smart_count: selectedIds.length,\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: selectedIds.length,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: selectedIds.length,\n                                _: inflection.inflect(\n                                    resource,\n                                    selectedIds.length\n                                ),\n                            }),\n                            true\n                        ),\n                    }),\n                }}\n                onConfirm={handleUpdate}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst sanitizeRestProps = ({\n    filterValues,\n    label,\n    onSuccess,\n    onError,\n    ...rest\n}: Omit<\n    BulkUpdateWithConfirmButtonProps,\n    'resource' | 'selectedIds' | 'icon' | 'data'\n>) => rest;\n\nexport interface BulkUpdateWithConfirmButtonProps\n    extends BulkActionProps,\n        ButtonProps {\n    confirmContent?: React.ReactNode;\n    confirmTitle?: string;\n    icon?: ReactElement;\n    data: any;\n    onSuccess?: () => void;\n    onError?: (error: any) => void;\n    mutationMode?: MutationMode;\n}\n\nBulkUpdateWithConfirmButton.propTypes = {\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n    data: PropTypes.any.isRequired,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n};\n\nconst PREFIX = 'RaBulkUpdateWithConfirmButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.primary.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n\nconst defaultIcon = <ActionUpdate />;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha } from '@mui/material/styles';\nimport {\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    useResourceContext,\n    useListContext,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\nimport { BulkActionProps } from '../types';\n\nexport const BulkUpdateWithUndoButton = (\n    props: BulkUpdateWithUndoButtonProps\n) => {\n    const { selectedIds } = useListContext(props);\n\n    const notify = useNotify();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const refresh = useRefresh();\n\n    const {\n        data,\n        label = 'ra.action.update',\n        icon = defaultIcon,\n        onClick,\n        onSuccess = () => {\n            notify('ra.notification.updated', {\n                type: 'info',\n                messageArgs: { smart_count: selectedIds.length },\n                undoable: true,\n            });\n            unselectAll();\n            refresh();\n        },\n        onError = (error: Error | string) => {\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                {\n                    type: 'warning',\n                    messageArgs: {\n                        _:\n                            typeof error === 'string'\n                                ? error\n                                : error && error.message\n                                ? error.message\n                                : undefined,\n                    },\n                }\n            );\n            refresh();\n        },\n        ...rest\n    } = props;\n\n    const [updateMany, { isLoading }] = useUpdateMany(\n        resource,\n        { ids: selectedIds, data },\n        {\n            onSuccess,\n            onError,\n            mutationMode: 'undoable',\n        }\n    );\n\n    const handleClick = e => {\n        updateMany();\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <StyledButton\n            onClick={handleClick}\n            label={label}\n            disabled={isLoading}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionUpdate />;\n\nconst sanitizeRestProps = ({\n    filterValues,\n    label,\n    selectedIds,\n    onSuccess,\n    onError,\n    ...rest\n}: Omit<BulkUpdateWithUndoButtonProps, 'resource' | 'icon' | 'data'>) => rest;\n\nexport interface BulkUpdateWithUndoButtonProps\n    extends BulkActionProps,\n        ButtonProps {\n    icon?: ReactElement;\n    data: any;\n    onSuccess?: () => void;\n    onError?: (error: any) => void;\n}\n\nBulkUpdateWithUndoButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    icon: PropTypes.element,\n    data: PropTypes.any.isRequired,\n};\n\nconst PREFIX = 'RaBulkUpdateWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.primary.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    RaRecord,\n    RedirectionSideEffect,\n    MutationMode,\n    DeleteParams,\n    useRecordContext,\n    useSaveContext,\n} from 'ra-core';\n\nimport { ButtonProps } from './Button';\nimport { DeleteWithUndoButton } from './DeleteWithUndoButton';\nimport { DeleteWithConfirmButton } from './DeleteWithConfirmButton';\n\n/**\n * Button used to delete a single record. Added by default by the <Toolbar> of edit and show views.\n *\n * @typedef {Object} Props The props you can use (other props are injected if you used it in the <Toolbar>)\n * @prop {boolean} mutationMode Either 'pessimistic', 'optimistic' or 'undoable'. Determine whether the deletion uses an undo button in a notification or a confirmation dialog. Defaults to 'undoable'.\n * @prop {Object} record The current resource record\n * @prop {string} className\n * @prop {string} label Button label. Defaults to 'ra.action.delete, translated.\n * @prop {boolean} disabled Disable the button.\n * @prop {string} variant MUI variant for the button. Defaults to 'contained'.\n * @prop {ReactElement} icon Override the icon. Defaults to the Delete icon from MUI.\n *\n * @param {Props} props\n *\n * @example Usage in the <TopToolbar> of an <Edit> form\n *\n * import * as React from 'react';\n * import { Edit, DeleteButton, TopToolbar } from 'react-admin';\n *\n * const EditActions = props => {\n *     const { data, resource } = props;\n *     return (\n *         <TopToolbar>\n *             <DeleteButton\n *                 mutationMode=\"pessimistic\" // Renders the <DeleteWithConfirmButton>\n *             />\n *         </TopToolbar>\n *     );\n * };\n *\n * const Edit = props => {\n *     return <Edit actions={<EditActions />} {...props} />;\n * };\n */\nexport const DeleteButton = <RecordType extends RaRecord = any>(\n    props: DeleteButtonProps<RecordType>\n) => {\n    const { mutationMode, ...rest } = props;\n    const record = useRecordContext(props);\n    const saveContext = useSaveContext(props);\n    if (!record || record.id == null) {\n        return null;\n    }\n\n    const finalMutationMode = mutationMode\n        ? mutationMode\n        : saveContext?.mutationMode\n        ? saveContext.mutationMode\n        : 'undoable';\n\n    return finalMutationMode === 'undoable' ? (\n        // @ts-ignore I looked for the error for one hour without finding it\n        <DeleteWithUndoButton<RecordType> record={record} {...rest} />\n    ) : (\n        <DeleteWithConfirmButton<RecordType>\n            // @ts-ignore I looked for the error for one hour without finding it\n            mutationMode={finalMutationMode}\n            record={record}\n            {...rest}\n        />\n    );\n};\n\nexport interface DeleteButtonProps<RecordType extends RaRecord = any>\n    extends Omit<ButtonProps, 'record'> {\n    className?: string;\n    confirmTitle?: string;\n    confirmContent?: string;\n    icon?: ReactElement;\n    label?: string;\n    mutationMode?: MutationMode;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    // May be injected by Toolbar\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        unknown,\n        DeleteParams<RecordType>\n    >;\n}\n\nDeleteButton.propTypes = {\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    record: PropTypes.any,\n    // @ts-ignore\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, ReactEventHandler } from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    RaRecord,\n    RedirectionSideEffect,\n    useDeleteWithUndoController,\n    DeleteParams,\n    useRecordContext,\n    useResourceContext,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithUndoButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithUndoButtonProps<RecordType>\n) => {\n    const {\n        label = 'ra.action.delete',\n        className,\n        icon = defaultIcon,\n        onClick,\n        redirect = 'list',\n        mutationOptions,\n        ...rest\n    } = props;\n\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n    const { isLoading, handleDelete } = useDeleteWithUndoController({\n        record,\n        resource,\n        redirect,\n        onClick,\n        mutationOptions,\n    });\n\n    return (\n        <StyledButton\n            onClick={handleDelete}\n            disabled={isLoading}\n            label={label}\n            className={clsx('ra-delete-button', className)}\n            key=\"button\"\n            {...rest}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithUndoButtonProps<RecordType extends RaRecord = any>\n    extends Omit<ButtonProps, 'record'> {\n    className?: string;\n    icon?: ReactElement;\n    label?: string;\n    onClick?: ReactEventHandler<any>;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    // May be injected by Toolbar - sanitized in Button\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        unknown,\n        DeleteParams<RecordType>\n    >;\n}\n\nDeleteWithUndoButton.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nconst PREFIX = 'RaDeleteWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n","import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    MutationMode,\n    RaRecord,\n    DeleteParams,\n    RedirectionSideEffect,\n    useDeleteWithConfirmController,\n    useRecordContext,\n    useResourceContext,\n    useTranslate,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithConfirmButtonProps<RecordType>\n) => {\n    const {\n        className,\n        confirmTitle = 'ra.message.delete_title',\n        confirmContent = 'ra.message.delete_content',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        redirect = 'list',\n        translateOptions = {},\n        mutationOptions,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n\n    const {\n        open,\n        isLoading,\n        handleDialogOpen,\n        handleDialogClose,\n        handleDelete,\n    } = useDeleteWithConfirmController({\n        record,\n        redirect,\n        mutationMode,\n        onClick,\n        mutationOptions,\n        resource,\n    });\n\n    return (\n        <Fragment>\n            <StyledButton\n                onClick={handleDialogOpen}\n                label={label}\n                className={clsx('ra-delete-button', className)}\n                key=\"button\"\n                {...rest}\n            >\n                {icon}\n            </StyledButton>\n            <Confirm\n                isOpen={open}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: 1,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: 1,\n                                _: inflection.singularize(resource),\n                            }),\n                            true\n                        ),\n                    }),\n                    id: record.id,\n                    ...translateOptions,\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithConfirmButtonProps<RecordType extends RaRecord = any>\n    extends Omit<ButtonProps, 'record'> {\n    className?: string;\n    confirmTitle?: string;\n    confirmContent?: React.ReactNode;\n    icon?: ReactElement;\n    label?: string;\n    mutationMode?: MutationMode;\n    onClick?: ReactEventHandler<any>;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    // May be injected by Toolbar - sanitized in Button\n    translateOptions?: object;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        unknown,\n        DeleteParams<RecordType>\n    >;\n}\n\nDeleteWithConfirmButton.propTypes = {\n    className: PropTypes.string,\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n    translateOptions: PropTypes.object,\n};\n\nconst PREFIX = 'RaDeleteWithConfirmButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ContentCreate from '@mui/icons-material/Create';\nimport { ButtonProps as MuiButtonProps } from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport {\n    RaRecord,\n    useResourceContext,\n    useRecordContext,\n    useCreatePath,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Edit view for the current record.\n *\n * Reads the record and resource from the context.\n *\n * @example // basic usage\n * import { EditButton } from 'react-admin';\n *\n * const CommentEditButton = () => (\n *     <EditButton label=\"Edit comment\" />\n * );\n */\nexport const EditButton = (props: EditButtonProps) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.edit',\n        scrollToTop = true,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    if (!record) return null;\n    return (\n        <Button\n            component={Link}\n            to={createPath({ type: 'edit', resource, id: record.id })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            onClick={stopPropagation}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ContentCreate />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\ninterface Props {\n    icon?: ReactElement;\n    label?: string;\n    record?: RaRecord;\n    scrollToTop?: boolean;\n}\n\nexport type EditButtonProps = Props & ButtonProps & MuiButtonProps;\n\nEditButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    scrollToTop: PropTypes.bool,\n};\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@mui/icons-material/GetApp';\nimport {\n    fetchRelatedRecords,\n    useDataProvider,\n    useNotify,\n    useListContext,\n    SortPayload,\n    Exporter,\n    FilterPayload,\n    useResourceContext,\n} from 'ra-core';\nimport { Button, ButtonProps } from './Button';\n\nexport const ExportButton = (props: ExportButtonProps) => {\n    const {\n        maxResults = 1000,\n        onClick,\n        label = 'ra.action.export',\n        icon = defaultIcon,\n        exporter: customExporter,\n        ...rest\n    } = props;\n    const {\n        filter,\n        filterValues,\n        sort,\n        exporter: exporterFromContext,\n        total,\n    } = useListContext(props);\n    const resource = useResourceContext(props);\n    const exporter = customExporter || exporterFromContext;\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const handleClick = useCallback(\n        event => {\n            dataProvider\n                .getList(resource, {\n                    sort,\n                    filter: filter\n                        ? { ...filterValues, ...filter }\n                        : filterValues,\n                    pagination: { page: 1, perPage: maxResults },\n                })\n                .then(\n                    ({ data }) =>\n                        exporter &&\n                        exporter(\n                            data,\n                            fetchRelatedRecords(dataProvider),\n                            dataProvider,\n                            resource\n                        )\n                )\n                .catch(error => {\n                    console.error(error);\n                    notify('ra.notification.http_error', { type: 'warning' });\n                });\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [\n            dataProvider,\n            exporter,\n            filter,\n            filterValues,\n            maxResults,\n            notify,\n            onClick,\n            resource,\n            sort,\n        ]\n    );\n\n    return (\n        <Button\n            onClick={handleClick}\n            label={label}\n            disabled={total === 0}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <DownloadIcon />;\n\nconst sanitizeRestProps = ({\n    filterValues,\n    resource,\n    ...rest\n}: Omit<ExportButtonProps, 'sort' | 'maxResults' | 'label' | 'exporter'>) =>\n    rest;\n\ninterface Props {\n    exporter?: Exporter;\n    filterValues?: FilterPayload;\n    icon?: JSX.Element;\n    label?: string;\n    maxResults?: number;\n    onClick?: (e: Event) => void;\n    resource?: string;\n    sort?: SortPayload;\n}\n\nexport type ExportButtonProps = Props & ButtonProps;\n\nExportButton.propTypes = {\n    exporter: PropTypes.func,\n    filterValues: PropTypes.object,\n    label: PropTypes.string,\n    maxResults: PropTypes.number,\n    resource: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport { MouseEvent } from 'react';\nimport { IconButton, IconButtonProps, Tooltip } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n\n/**\n * An IconButton with a tooltip which ensures the tooltip is closed on click to avoid ghost tooltips\n * when the button position changes.\n */\nexport const IconButtonWithTooltip = ({\n    label,\n    onClick,\n    ...props\n}: IconButtonWithTooltipProps) => {\n    const translate = useTranslate();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const translatedLabel = translate(label, { _: label });\n\n    const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n        handleClose();\n        onClick(event);\n    };\n\n    return (\n        <Tooltip\n            title={translatedLabel}\n            open={open}\n            onOpen={handleOpen}\n            onClose={handleClose}\n        >\n            <IconButton\n                aria-label={translatedLabel}\n                onClick={handleClick}\n                {...props}\n                size=\"large\"\n            />\n        </Tooltip>\n    );\n};\n\nexport interface IconButtonWithTooltipProps extends IconButtonProps {\n    label: string;\n}\n","import * as React from 'react';\nimport { MouseEvent, useState } from 'react';\nimport { useLocaleState } from 'ra-core';\nimport { Box, Button, Menu, MenuItem, styled } from '@mui/material';\nimport LanguageIcon from '@mui/icons-material/Translate';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n/**\n * Language selector. Changes the locale in the app and persists it in\n * preferences so that the app opens with the right locale in the future.\n *\n * @example\n *\n *     const MyAppBar: FC = props => (\n *         <AppBar {...props}>\n *             <Box flex=\"1\">\n *                 <Typography variant=\"h6\" id=\"react-admin-title\"></Typography>\n *             </Box>\n *             <LocalesMenuButton\n *                 languages={[\n *                     { locale: 'en', name: 'English' },\n *                     { locale: 'fr', name: 'Français' },\n *                 ]}\n *             />\n *         </AppBar>\n *     );\n */\nexport const LocalesMenuButton = ({ languages }: LocalesMenuButtonProps) => {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [locale, setLocale] = useLocaleState();\n\n    const getNameForLocale = (locale: string): string => {\n        const language = languages.find(language => language.locale === locale);\n        return language ? language.name : '';\n    };\n\n    const changeLocale = (locale: string) => (): void => {\n        setLocale(locale);\n        setAnchorEl(null);\n    };\n\n    const handleLanguageClick = (event: MouseEvent<HTMLElement>): void => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (): void => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <Root>\n            <Button\n                color=\"inherit\"\n                aria-controls=\"simple-menu\"\n                aria-label=\"\"\n                aria-haspopup=\"true\"\n                onClick={handleLanguageClick}\n            >\n                <LanguageIcon />\n                <div className={LocalesMenuButtonClasses.selectedLanguage}>\n                    {getNameForLocale(locale)}\n                </div>\n                <ExpandMoreIcon fontSize=\"small\" />\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {languages.map(language => (\n                    <MenuItem\n                        key={language.locale}\n                        onClick={changeLocale(language.locale)}\n                    >\n                        {language.name}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </Root>\n    );\n};\n\nconst PREFIX = 'RaLocalesMenuButton';\n\nexport const LocalesMenuButtonClasses = {\n    selectedLanguage: `${PREFIX}-selectedLanguage`,\n};\n\nconst Root = styled(Box, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${LocalesMenuButtonClasses.selectedLanguage}`]: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n\nexport interface LocalesMenuButtonProps {\n    languages: { locale: string; name: string }[];\n}\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ActionList from '@mui/icons-material/List';\nimport { Link } from 'react-router-dom';\nimport { useResourceContext, useCreatePath } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the List view of a given resource\n *\n * @example // basic usage\n * import { ListButton } from 'react-admin';\n *\n * const CommentListButton = () => (\n *     <ListButton label=\"Comments\" />\n * );\n *\n * @example // linking back to the list from the Edit view\n * import { TopToolbar, ListButton, ShowButton, Edit } from 'react-admin';\n *\n * const PostEditActions = () => (\n *     <TopToolbar>\n *         <ListButton />\n *         <ShowButton />\n *     </TopToolbar>\n * );\n *\n * export const PostEdit = (props) => (\n *     <Edit actions={<PostEditActions />} {...props}>\n *         ...\n *     </Edit>\n * );\n */\nexport const ListButton = (props: ListButtonProps) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.list',\n        scrollToTop = true,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    return (\n        <Button\n            component={Link}\n            to={createPath({ type: 'list', resource })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ActionList />;\n\ninterface Props {\n    icon?: ReactElement;\n    label?: string;\n    scrollToTop?: boolean;\n}\n\nexport type ListButtonProps = Props & ButtonProps;\n\nListButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n};\n","import * as React from 'react';\nimport { ReactElement, MouseEvent, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const RefreshButton = (props: RefreshButtonProps) => {\n    const {\n        label = 'ra.action.refresh',\n        icon = defaultIcon,\n        onClick,\n        ...rest\n    } = props;\n    const refresh = useRefresh();\n    const handleClick = useCallback(\n        event => {\n            event.preventDefault();\n            refresh();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [refresh, onClick]\n    );\n\n    return (\n        <Button label={label} onClick={handleClick} {...rest}>\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <NavigationRefresh />;\n\ninterface Props {\n    label?: string;\n    icon?: ReactElement;\n    onClick?: (e: MouseEvent) => void;\n}\n\nexport type RefreshButtonProps = Props & ButtonProps;\n\nRefreshButton.propTypes = {\n    label: PropTypes.string,\n    icon: PropTypes.element,\n    onClick: PropTypes.func,\n};\n","import * as React from 'react';\nimport { useCallback, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh, useTranslate } from 'ra-core';\n\nexport const RefreshIconButton = (props: RefreshIconButtonProps) => {\n    const {\n        label = 'ra.action.refresh',\n        icon = defaultIcon,\n        onClick,\n        className,\n        ...rest\n    } = props;\n    const refresh = useRefresh();\n    const translate = useTranslate();\n    const handleClick = useCallback(\n        event => {\n            event.preventDefault();\n            refresh();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [refresh, onClick]\n    );\n\n    return (\n        <Tooltip title={label && translate(label, { _: label })}>\n            <IconButton\n                aria-label={label && translate(label, { _: label })}\n                className={className}\n                color=\"inherit\"\n                onClick={handleClick}\n                {...rest}\n                size=\"large\"\n            >\n                {icon}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nconst defaultIcon = <NavigationRefresh />;\n\ninterface Props {\n    className?: string;\n    icon?: ReactElement;\n    label?: string;\n    onClick?: (e: MouseEvent) => void;\n}\n\nexport type RefreshIconButtonProps = Props & IconButtonProps;\n\nRefreshIconButton.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    icon: PropTypes.element,\n};\n","import * as React from 'react';\nimport { MouseEventHandler, ReactElement, useCallback } from 'react';\nimport { UseMutationOptions } from 'react-query';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonProps, CircularProgress } from '@mui/material';\nimport ContentSave from '@mui/icons-material/Save';\nimport { useFormContext, useFormState } from 'react-hook-form';\nimport {\n    CreateParams,\n    MutationMode,\n    RaRecord,\n    TransformData,\n    UpdateParams,\n    useNotify,\n    useSaveContext,\n    useTranslate,\n    warning,\n} from 'ra-core';\n\nimport { sanitizeButtonRestProps } from './Button';\n\n/**\n * Submit button for resource forms (Edit and Create).\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <Toolbar>)\n * @prop {string} className\n * @prop {string} label Button label. Defaults to 'ra.action.save', translated.\n * @prop {boolean} disabled Disable the button.\n * @prop {string} variant MUI variant for the button. Defaults to 'contained'.\n * @prop {ReactElement} icon\n * @prop {function} mutationOptions Object of options passed to react-query.\n * @prop {function} transform Callback to execute before calling the dataProvider. Receives the data from the form, must return that transformed data. Can be asynchronous (and return a Promise)\n * @prop {boolean} alwaysEnable Force enabling the <SaveButton>. If it's not defined, the `<SaveButton>` will be enabled using `react-hook-form`'s `isValidating` state props and form context's `saving` prop (disabled if isValidating or saving, enabled otherwise).\n *\n * @param {Props} props\n *\n * @example // with custom success side effect\n *\n * const MySaveButton = props => {\n *     const notify = useNotify();\n *     const redirect = useRedirect();\n *     const onSuccess = (response) => {\n *         notify(`Post \"${response.data.title}\" saved!`);\n *         redirect('/posts');\n *     };\n *     return <SaveButton {...props} mutationOptions={{ onSuccess }} />;\n * }\n */\nexport const SaveButton = <RecordType extends RaRecord = any>(\n    props: SaveButtonProps<RecordType>\n) => {\n    const {\n        color = 'primary',\n        icon = defaultIcon,\n        invalid,\n        label = 'ra.action.save',\n        onClick,\n        mutationOptions,\n        saving,\n        disabled: disabledProp,\n        type = 'submit',\n        transform,\n        variant = 'contained',\n        alwaysEnable = false,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const notify = useNotify();\n    const form = useFormContext();\n    const saveContext = useSaveContext();\n    const { isDirty, isValidating } = useFormState();\n    // Use form isDirty, isValidating and form context saving to enable or disable the save button\n    // if alwaysEnable is undefined\n    const disabled = valueOrDefault(\n        alwaysEnable === false || alwaysEnable === undefined\n            ? undefined\n            : !alwaysEnable,\n        disabledProp || !isDirty || isValidating || saveContext?.saving\n    );\n\n    warning(\n        type === 'submit' &&\n            ((mutationOptions &&\n                (mutationOptions.onSuccess || mutationOptions.onError)) ||\n                transform),\n        'Cannot use <SaveButton mutationOptions> props on a button of type \"submit\". To override the default mutation options on a particular save button, set the <SaveButton type=\"button\"> prop, or set mutationOptions in the main view component (<Create> or <Edit>).'\n    );\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n        async event => {\n            if (onClick) {\n                onClick(event);\n            }\n            if (event.defaultPrevented) {\n                return;\n            }\n            if (type === 'button') {\n                // this button doesn't submit the form, so it doesn't trigger useIsFormInvalid in <FormContent>\n                // therefore we need to check for errors manually\n                event.preventDefault();\n                const isFormValid = await form.trigger();\n                if (!isFormValid) {\n                    event.preventDefault();\n                    notify('ra.message.invalid_form', { type: 'warning' });\n                    return;\n                }\n                const values = form.getValues();\n                saveContext?.save(values, {\n                    ...mutationOptions,\n                    transform,\n                });\n            }\n        },\n        [form, notify, mutationOptions, saveContext, transform, onClick, type]\n    );\n\n    const displayedLabel = label && translate(label, { _: label });\n    const finalSaving =\n        typeof saving !== 'undefined' ? saving : saveContext?.saving;\n\n    return (\n        <StyledButton\n            variant={variant}\n            type={type}\n            color={color}\n            aria-label={displayedLabel}\n            disabled={disabled}\n            onClick={handleClick}\n            // TODO: find a way to display the loading state (LoadingButton from mui Lab?)\n            {...sanitizeButtonRestProps(rest)}\n        >\n            {finalSaving ? <CircularProgress size={18} thickness={2} /> : icon}\n            {displayedLabel}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ContentSave />;\n\ninterface Props<RecordType extends RaRecord = any> {\n    className?: string;\n    disabled?: boolean;\n    icon?: ReactElement;\n    invalid?: boolean;\n    label?: string;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        unknown,\n        CreateParams<RecordType> | UpdateParams<RecordType>\n    >;\n    transform?: TransformData;\n    saving?: boolean;\n    variant?: string;\n    // May be injected by Toolbar - sanitized in Button\n    record?: RaRecord;\n    resource?: string;\n    mutationMode?: MutationMode;\n}\n\nexport type SaveButtonProps<RecordType extends RaRecord = any> = Props<\n    RecordType\n> &\n    ButtonProps & {\n        alwaysEnable?: boolean;\n    };\n\nSaveButton.propTypes = {\n    className: PropTypes.string,\n    invalid: PropTypes.bool,\n    label: PropTypes.string,\n    saving: PropTypes.bool,\n    variant: PropTypes.oneOf(['text', 'outlined', 'contained']),\n    icon: PropTypes.element,\n    alwaysEnable: PropTypes.bool,\n};\n\nconst PREFIX = 'RaSaveButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    position: 'relative',\n    [`& .MuiSvgIcon-root, & .MuiIcon-root, & .MuiCircularProgress-root`]: {\n        marginRight: theme.spacing(1),\n    },\n    [`& .MuiSvgIcon-root, & .MuiIcon-root`]: {\n        fontSize: 18,\n    },\n}));\n\nconst valueOrDefault = (value, defaultValue) =>\n    typeof value === 'undefined' ? defaultValue : value;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Button } from './Button';\nimport { useTranslate } from 'ra-core';\n\nexport const SkipNavigationButton = () => {\n    const translate = useTranslate();\n\n    return (\n        <StyledButton\n            onClick={skipToContent}\n            className={'skip-nav-button'}\n            label={translate('ra.navigation.skip_nav')}\n            variant=\"contained\"\n        />\n    );\n};\n\nconst PREFIX = 'RaSkipNavigationButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    position: 'fixed',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.getContrastText(theme.palette.background.default),\n    transition: theme.transitions.create(['top', 'opacity'], {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    left: theme.spacing(2),\n    top: theme.spacing(-10),\n    zIndex: 5000,\n    '&:hover': {\n        opacity: 0.8,\n        backgroundColor: theme.palette.background.default,\n    },\n    '&:focus': {\n        top: theme.spacing(2),\n        transition: theme.transitions.create(['top', 'opacity'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n}));\n\nconst skipToContent = () => {\n    if (typeof document === 'undefined') return;\n    const element = document.getElementById('main-content');\n\n    if (!element) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n                'No element with id \"main-content\" was found. Ensure the element that contains your main content has an id of \"main-content\".'\n            );\n        }\n\n        return;\n    }\n\n    element.setAttribute('tabIndex', '-1');\n    element.focus();\n    element.blur();\n    element.removeAttribute('tabIndex');\n};\n","import React from 'react';\nimport { Tooltip, IconButton } from '@mui/material';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { useTranslate } from 'ra-core';\nimport { useTheme } from '../layout';\nimport { RaThemeOptions } from '..';\n\n/**\n * Button toggling the theme (light or dark).\n *\n * @example\n *\n * const MyAppBar = props => (\n *     <AppBar {...props}>\n *         <Box flex=\"1\">\n *             <Typography variant=\"h6\" id=\"react-admin-title\"></Typography>\n *         </Box>\n *         <ToggleThemeButton lightTheme={lightTheme} darkTheme={darkTheme} />\n *     </AppBar>\n * );\n *\n * const MyLayout = props => <Layout {...props} appBar={MyAppBar} />;\n */\nexport const ToggleThemeButton = (props: ToggleThemeButtonProps) => {\n    const translate = useTranslate();\n    const { darkTheme, lightTheme } = props;\n    const [theme, setTheme] = useTheme(lightTheme);\n\n    const handleTogglePaletteType = (): void => {\n        setTheme(theme?.palette.mode === 'dark' ? lightTheme : darkTheme);\n    };\n    const toggleThemeTitle = translate('ra.action.toggle_theme', {\n        _: 'Toggle Theme',\n    });\n\n    return (\n        <Tooltip title={toggleThemeTitle} enterDelay={300}>\n            <IconButton\n                color=\"inherit\"\n                onClick={handleTogglePaletteType}\n                aria-label={toggleThemeTitle}\n            >\n                {theme?.palette.mode === 'dark' ? (\n                    <Brightness7Icon />\n                ) : (\n                    <Brightness4Icon />\n                )}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport interface ToggleThemeButtonProps {\n    darkTheme: RaThemeOptions;\n    lightTheme?: RaThemeOptions;\n}\n","import * as React from 'react';\nimport { ReactNode, useCallback, useMemo, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\nimport {\n    Tooltip,\n    IconButton,\n    Menu,\n    Button,\n    Avatar,\n    PopoverOrigin,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\nimport { Logout } from '../auth/Logout';\n\n/**\n * The UserMenu component renders a Mui Button that shows a Menu.\n * It accepts children that must be Mui MenuItem components.\n *\n * @example\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\n * import MenuItem from '@mui/material/MenuItem';\n * import ListItemIcon from '@mui/material/ListItemIcon';\n * import ListItemText from '@mui/material/ListItemText';\n * import SettingsIcon from '@mui/icons-material/Settings';\n\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItem\n *             ref={ref}\n *             {...props}\n *             to=\"/configuration\"\n *             onClick={onClose}\n *         >\n *             <ListItemIcon>\n *                 <SettingsIcon />\n *             </ListItemIcon>\n *             <ListItemText>Configuration</ListItemText>\n *         </MenuItem>\n *     );\n * });\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n * @param props\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\n * @param {Element} props.icon The icon of the UserMenu button.\n *\n */\nexport const UserMenu = (props: UserMenuProps) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const translate = useTranslate();\n    const { isLoading, identity } = useGetIdentity();\n    const authProvider = useAuthProvider();\n    const isLargeEnough = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.up('sm')\n    );\n\n    const {\n        children = !!authProvider ? <Logout /> : null,\n        className,\n        label = 'ra.auth.user_menu',\n        icon = defaultIcon,\n    } = props;\n\n    const handleMenu = event => setAnchorEl(event.currentTarget);\n    const handleClose = useCallback(() => setAnchorEl(null), []);\n    const context = useMemo(() => ({ onClose: handleClose }), [handleClose]);\n    if (!children) return null;\n    const open = Boolean(anchorEl);\n\n    return (\n        <Root className={className}>\n            {isLargeEnough && !isLoading && identity?.fullName ? (\n                <Button\n                    aria-label={label && translate(label, { _: label })}\n                    className={UserMenuClasses.userButton}\n                    color=\"inherit\"\n                    startIcon={\n                        identity.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )\n                    }\n                    onClick={handleMenu}\n                >\n                    {identity.fullName}\n                </Button>\n            ) : (\n                <Tooltip title={label && translate(label, { _: label })}>\n                    <IconButton\n                        aria-label={label && translate(label, { _: label })}\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup={true}\n                        color=\"inherit\"\n                        onClick={handleMenu}\n                        size=\"large\"\n                    >\n                        {!isLoading && identity?.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )}\n                    </IconButton>\n                </Tooltip>\n            )}\n            <UserMenuContextProvider value={context}>\n                <Menu\n                    id=\"menu-appbar\"\n                    disableScrollLock\n                    anchorEl={anchorEl}\n                    anchorOrigin={AnchorOrigin}\n                    transformOrigin={TransformOrigin}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    {children}\n                </Menu>\n            </UserMenuContextProvider>\n        </Root>\n    );\n};\n\nUserMenu.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    label: PropTypes.string,\n    icon: PropTypes.node,\n};\n\nexport interface UserMenuProps {\n    children?: ReactNode;\n    className?: string;\n    label?: string;\n    icon?: ReactNode;\n}\n\nconst PREFIX = 'RaUserMenu';\n\nexport const UserMenuClasses = {\n    userButton: `${PREFIX}-userButton`,\n    avatar: `${PREFIX}-avatar`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${UserMenuClasses.userButton}`]: {\n        textTransform: 'none',\n    },\n\n    [`& .${UserMenuClasses.avatar}`]: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n}));\n\nconst defaultIcon = <AccountCircle />;\n\nconst AnchorOrigin: PopoverOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right',\n};\n\nconst TransformOrigin: PopoverOrigin = {\n    vertical: 'top',\n    horizontal: 'right',\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { UserMenuContext, UserMenuContextValue } from './UserMenuContext';\n\n/**\n * A React context provider that provides access to the user menu context.\n * @param props\n * @param {ReactNode} props.children\n * @param {UserMenuContextValue} props.value The user menu context\n */\nexport const UserMenuContextProvider = ({ children, value }) => (\n    <UserMenuContext.Provider value={value}>\n        {children}\n    </UserMenuContext.Provider>\n);\n\nexport type UserMenuContextProviderProps = {\n    children: ReactNode;\n    value: UserMenuContextValue;\n};\n","import { createContext } from 'react';\n\n/**\n * This context provides access to a function for closing the user menu.\n *\n * @example\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\n *\n * const ConfigurationMenu = () => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItemLink\n *             to=\"/configuration\"\n *             primaryText=\"pos.configuration\"\n *             leftIcon={<SettingsIcon />}\n *             sidebarIsOpen\n *             onClick={onClose}\n *         />\n *     );\n * };\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n */\nexport const UserMenuContext = createContext<UserMenuContextValue>(undefined);\n\nexport type UserMenuContextValue = {\n    /**\n     * Closes the user menu\n     * @see UserMenu\n     */\n    onClose: () => void;\n};\n","import * as React from 'react';\nimport { styled, Theme } from '@mui/material/styles';\nimport { useCallback, FunctionComponent, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    useMediaQuery,\n} from '@mui/material';\nimport { MenuItemProps } from '@mui/material/MenuItem';\n\nimport ExitIcon from '@mui/icons-material/PowerSettingsNew';\nimport clsx from 'clsx';\nimport { useTranslate, useLogout } from 'ra-core';\n\n/**\n * Logout button component, to be passed to the Admin component\n *\n * Used for the Logout Menu item in the sidebar\n */\nexport const Logout: FunctionComponent<\n    LogoutProps & MenuItemProps<'li'>\n> = React.forwardRef(function Logout(props, ref) {\n    const { className, redirectTo, icon, ...rest } = props;\n\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n    const translate = useTranslate();\n    const logout = useLogout();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleClick = useCallback(() => logout(null, redirectTo, false), [\n        redirectTo,\n        logout,\n    ]);\n    return (\n        <StyledMenuItem\n            className={clsx('logout', className)}\n            onClick={handleClick}\n            ref={ref}\n            // @ts-ignore\n            component={isXSmall ? 'span' : 'li'}\n            {...rest}\n        >\n            <ListItemIcon className={LogoutClasses.icon}>\n                {icon ? icon : <ExitIcon />}\n            </ListItemIcon>\n            <ListItemText>{translate('ra.auth.logout')}</ListItemText>\n        </StyledMenuItem>\n    );\n});\n\nLogout.propTypes = {\n    className: PropTypes.string,\n    redirectTo: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nconst PREFIX = 'RaLogout';\n\nexport const LogoutClasses = {\n    icon: `${PREFIX}-icon`,\n};\n\nconst StyledMenuItem = styled(MenuItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.text.secondary,\n\n    [`& .${LogoutClasses.icon}`]: { minWidth: theme.spacing(5) },\n}));\n\nexport interface LogoutProps {\n    className?: string;\n    redirectTo?: string;\n    icon?: ReactElement;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport Slide from '@mui/material/Slide';\n\nexport const HideOnScroll = (props: HideOnScrollProps) => {\n    const { children } = props;\n    const trigger = useScrollTrigger();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n};\n\nHideOnScroll.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport interface HideOnScrollProps {\n    children: React.ReactElement;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport CardContent from '@mui/material/CardContent';\n\n/**\n * Overrides MUI CardContent to allow inner content\n *\n * When using several CardContent inside the same Card, the top and bottom\n * padding double the spacing between each CardContent, leading to too much\n * wasted space. Use this component as a CardContent alternative.\n */\nexport const CardContentInner = (props: CardContentInnerProps): JSX.Element => {\n    const { className, children } = props;\n\n    return <Root className={className}>{children}</Root>;\n};\n\nCardContentInner.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    children: PropTypes.node,\n};\n\nexport interface CardContentInnerProps {\n    className?: string;\n    children: ReactNode;\n}\n\nconst PREFIX = 'RaCardContentInner';\n\nexport const CardContentInnerClasses = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled(CardContent, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    paddingTop: 0,\n    paddingBottom: 0,\n    '&:first-of-type': {\n        paddingTop: 16,\n    },\n    '&:last-child': {\n        paddingBottom: 16,\n        [theme.breakpoints.only('xs')]: {\n            paddingBottom: 70,\n        },\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback, MouseEventHandler } from 'react';\nimport PropTypes, { ReactComponentLike } from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\nimport { SxProps } from '@mui/system';\n\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport const Confirm = (props: ConfirmProps) => {\n    const {\n        className,\n        isOpen = false,\n        loading,\n        title,\n        content,\n        cancel = 'ra.action.cancel',\n        confirm = 'ra.action.confirm',\n        confirmColor = 'primary',\n        ConfirmIcon = ActionCheck,\n        CancelIcon = AlertError,\n        onClose,\n        onConfirm,\n        translateOptions = {},\n        sx,\n    } = props;\n\n    const translate = useTranslate();\n\n    const handleConfirm = useCallback(\n        e => {\n            e.stopPropagation();\n            onConfirm(e);\n        },\n        [onConfirm]\n    );\n\n    const handleClick = useCallback(e => {\n        e.stopPropagation();\n    }, []);\n\n    return (\n        <StyledDialog\n            className={className}\n            open={isOpen}\n            onClose={onClose}\n            onClick={handleClick}\n            aria-labelledby=\"alert-dialog-title\"\n            sx={sx}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {translate(title, { _: title, ...translateOptions })}\n            </DialogTitle>\n            <DialogContent>\n                {typeof content === 'string' ? (\n                    <DialogContentText>\n                        {translate(content, {\n                            _: content,\n                            ...translateOptions,\n                        })}\n                    </DialogContentText>\n                ) : (\n                    content\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button disabled={loading} onClick={onClose}>\n                    <CancelIcon className={ConfirmClasses.iconPaddingStyle} />\n                    {translate(cancel, { _: cancel })}\n                </Button>\n                <Button\n                    disabled={loading}\n                    onClick={handleConfirm}\n                    className={clsx('ra-confirm', {\n                        [ConfirmClasses.confirmWarning]:\n                            confirmColor === 'warning',\n                        [ConfirmClasses.confirmPrimary]:\n                            confirmColor === 'primary',\n                    })}\n                    autoFocus\n                >\n                    <ConfirmIcon className={ConfirmClasses.iconPaddingStyle} />\n                    {translate(confirm, { _: confirm })}\n                </Button>\n            </DialogActions>\n        </StyledDialog>\n    );\n};\n\nexport interface ConfirmProps {\n    cancel?: string;\n    className?: string;\n    confirm?: string;\n    confirmColor?: string;\n    ConfirmIcon?: ReactComponentLike;\n    CancelIcon?: ReactComponentLike;\n    content: React.ReactNode;\n    isOpen?: boolean;\n    loading?: boolean;\n    onClose: MouseEventHandler;\n    onConfirm: MouseEventHandler;\n    title: string;\n    translateOptions?: object;\n    sx?: SxProps;\n}\n\nConfirm.propTypes = {\n    cancel: PropTypes.string,\n    className: PropTypes.string,\n    confirm: PropTypes.string,\n    confirmColor: PropTypes.string,\n    ConfirmIcon: PropTypes.elementType,\n    CancelIcon: PropTypes.elementType,\n    content: PropTypes.node.isRequired,\n    isOpen: PropTypes.bool,\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    sx: PropTypes.any,\n};\n\nconst PREFIX = 'RaConfirm';\n\nexport const ConfirmClasses = {\n    confirmPrimary: `${PREFIX}-confirmPrimary`,\n    confirmWarning: `${PREFIX}-confirmWarning`,\n    iconPaddingStyle: `${PREFIX}-iconPaddingStyle`,\n};\n\nconst StyledDialog = styled(Dialog, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${ConfirmClasses.confirmPrimary}`]: {\n        color: theme.palette.primary.main,\n    },\n\n    [`& .${ConfirmClasses.confirmWarning}`]: {\n        color: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.error.main, 0.12),\n            // Reset on mouse devices\n            '@media (hover: none)': {\n                backgroundColor: 'transparent',\n            },\n        },\n    },\n\n    [`& .${ConfirmClasses.iconPaddingStyle}`]: {\n        paddingRight: '0.5em',\n    },\n}));\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport { useTranslate, useBasename } from 'ra-core';\n\nimport { MenuItemLink } from './MenuItemLink';\n\nexport const DashboardMenuItem = (props: DashboardMenuItemProps) => {\n    const { locale, ...rest } = props;\n    const translate = useTranslate();\n    const basename = useBasename();\n    return (\n        <MenuItemLink\n            to={`${basename}/`}\n            primaryText={translate('ra.page.dashboard')}\n            leftIcon={<DashboardIcon />}\n            {...rest}\n        />\n    );\n};\n\nexport interface DashboardMenuItemProps {\n    locale?: string;\n    onClick?: () => void;\n    dense?: boolean;\n    /**\n     * @deprecated\n     */\n    sidebarIsOpen?: boolean;\n}\n\nDashboardMenuItem.propTypes = {\n    locale: PropTypes.string,\n    onClick: PropTypes.func,\n    dense: PropTypes.bool,\n    sidebarIsOpen: PropTypes.bool,\n};\n","import React, { forwardRef, useCallback, ReactElement, ReactNode } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Link, LinkProps, useMatch } from 'react-router-dom';\nimport {\n    MenuItem,\n    MenuItemProps,\n    ListItemIcon,\n    Tooltip,\n    TooltipProps,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\n\nimport { useSidebarState } from './useSidebarState';\nimport { useTranslate, useBasename } from 'ra-core';\n\n/**\n * Displays a menu item with a label and an icon - or only the icon with a tooltip when the sidebar is minimized.\n * It also handles the automatic closing of the menu on tap on mobile.\n *\n * @typedef {Object} Props the props you can use\n * @prop {string|Location} to The menu item's target. It is passed to a React Router NavLink component.\n * @prop {string|ReactNode} primaryText The menu content, displayed when the menu isn't minimized. |\n * @prop {ReactNode} leftIcon The menu icon\n *\n * Additional props are passed down to the underling MUI <MenuItem> component\n * @see https://material-ui.com/api/menu-item/#menuitem-api\n *\n * @example // You can create a custom menu component using the <DashboardMenuItem> and <MenuItemLink> components:\n *\n * // in src/Menu.js\n * import * as React from 'react';\n * import { DashboardMenuItem, MenuItemLink } from 'react-admin';\n * import BookIcon from '@mui/icons-material/Book';\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n * import PeopleIcon from '@mui/icons-material/People';\n * import LabelIcon from '@mui/icons-material/Label';\n *\n * export const Menu = () => (\n *     <div>\n *         <DashboardMenuItem />\n *         <MenuItemLink to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\n *         <MenuItemLink to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\n *         <MenuItemLink to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\n *         <MenuItemLink to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\n *     </div>\n * );\n *\n * // to use this custom menu component, pass it to a custom Layout:\n * // in src/Layout.js\n * import { Layout } from 'react-admin';\n * import { Menu } from './Menu';\n *\n * export const Layout = (props) => <Layout {...props} menu={Menu} />;\n *\n * // then, use this layout in the <Admin layout> prop:\n * // in src/App.js\n * import { Layout }  from './Layout';\n *\n * const App = () => (\n *     <Admin layout={Layout} dataProvider={simpleRestProvider('http://path.to.my.api')}>\n *         // ...\n *     </Admin>\n * );\n */\nexport const MenuItemLink = forwardRef((props: MenuItemLinkProps, ref) => {\n    const {\n        className,\n        primaryText,\n        leftIcon,\n        onClick,\n        sidebarIsOpen,\n        tooltipProps,\n        ...rest\n    } = props;\n\n    const isSmall = useMediaQuery<Theme>(theme => theme.breakpoints.down('md'));\n    const translate = useTranslate();\n    const basename = useBasename();\n\n    const [open, setOpen] = useSidebarState();\n    const handleMenuTap = useCallback(\n        e => {\n            if (isSmall) {\n                setOpen(false);\n            }\n            onClick && onClick(e);\n        },\n        [setOpen, isSmall, onClick]\n    );\n\n    const to =\n        (typeof props.to === 'string' ? props.to : props.to.pathname) || '';\n    const match = useMatch({ path: to, end: to === `${basename}/` });\n\n    const renderMenuItem = () => {\n        return (\n            <StyledMenuItem\n                className={clsx(className, {\n                    [MenuItemLinkClasses.active]: !!match,\n                })}\n                component={LinkRef}\n                // @ts-ignore\n                ref={ref}\n                tabIndex={0}\n                {...rest}\n                onClick={handleMenuTap}\n            >\n                {leftIcon && (\n                    <ListItemIcon className={MenuItemLinkClasses.icon}>\n                        {leftIcon}\n                    </ListItemIcon>\n                )}\n                {typeof primaryText === 'string'\n                    ? translate(primaryText, { _: primaryText })\n                    : primaryText}\n            </StyledMenuItem>\n        );\n    };\n\n    return open ? (\n        renderMenuItem()\n    ) : (\n        <Tooltip\n            title={\n                typeof primaryText === 'string'\n                    ? translate(primaryText, { _: primaryText })\n                    : primaryText\n            }\n            placement=\"right\"\n            {...tooltipProps}\n        >\n            {renderMenuItem()}\n        </Tooltip>\n    );\n});\n\ninterface Props {\n    leftIcon?: ReactElement;\n    primaryText?: ReactNode;\n    /**\n     * @deprecated\n     */\n    sidebarIsOpen?: boolean;\n    tooltipProps?: TooltipProps;\n}\n\nexport type MenuItemLinkProps = Props & LinkProps & MenuItemProps<'li'>;\n\nMenuItemLink.propTypes = {\n    className: PropTypes.string,\n    leftIcon: PropTypes.element,\n    onClick: PropTypes.func,\n    primaryText: PropTypes.node,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    sidebarIsOpen: PropTypes.bool,\n};\n\nconst PREFIX = 'RaMenuItemLink';\n\nexport const MenuItemLinkClasses = {\n    active: `${PREFIX}-active`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst StyledMenuItem = styled(MenuItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.text.secondary,\n\n    [`&.${MenuItemLinkClasses.active}`]: {\n        color: theme.palette.text.primary,\n    },\n\n    [`& .${MenuItemLinkClasses.icon}`]: { minWidth: theme.spacing(5) },\n}));\n\nconst LinkRef = forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n    <Link ref={ref} {...props} />\n));\n","import * as React from 'react';\nimport mediaQuery from 'css-mediaquery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n/**\n * Test utility to simulate a device form factor for server-side mediaQueries\n *\n * Do not use inside a browser.\n *\n * @example\n *\n * <DeviceTestWrapper width=\"sm\">\n *     <MyResponsiveComponent />\n * <DeviceTestWrapper>\n */\nexport const DeviceTestWrapper = ({\n    width = 'md',\n    children,\n}: DeviceTestWrapperProps): JSX.Element => {\n    const theme = createTheme();\n    // Use https://github.com/ericf/css-mediaquery as polyfill.\n    const ssrMatchMedia = query => ({\n        matches: mediaQuery.match(query, {\n            // The estimated CSS width of the browser.\n            // For the sake of this demo, we are using a fixed value.\n            // In production, you can look into client-hint https://caniuse.com/#search=client%20hint\n            // or user-agent resolution.\n            width: theme.breakpoints.values[width],\n        }),\n    });\n\n    return (\n        <ThemeProvider\n            theme={{\n                ...theme,\n                components: {\n                    MuiUseMediaQuery: {\n                        defaultProps: {\n                            ssrMatchMedia,\n                            matchMedia: ssrMatchMedia,\n                        },\n                    },\n                },\n            }}\n        >\n            {children}\n        </ThemeProvider>\n    );\n};\n\nexport interface DeviceTestWrapperProps {\n    width: 'md' | 'xs' | 'sm' | 'lg' | 'xl';\n    children: JSX.Element;\n}\n","import * as React from 'react';\nimport { ComponentType, ErrorInfo, Fragment, HtmlHTMLAttributes } from 'react';\nimport { FallbackProps } from 'react-error-boundary';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n} from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Report';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport History from '@mui/icons-material/History';\nimport { TitleComponent, useTranslate } from 'ra-core';\nimport { Title, TitlePropType } from './Title';\nimport { useResetErrorBoundaryOnLocationChange } from './useResetErrorBoundaryOnLocationChange';\n\nexport const Error = (\n    props: InternalErrorProps & {\n        errorComponent?: ComponentType<ErrorProps>;\n    }\n) => {\n    const {\n        error,\n        errorComponent: ErrorComponent,\n        errorInfo,\n        resetErrorBoundary,\n        className,\n        title,\n        ...rest\n    } = props;\n\n    const translate = useTranslate();\n    useResetErrorBoundaryOnLocationChange(resetErrorBoundary);\n\n    if (ErrorComponent) {\n        return (\n            <ErrorComponent error={error} errorInfo={errorInfo} title={title} />\n        );\n    }\n\n    return (\n        <Fragment>\n            {title && <Title title={title} />}\n            <Root className={className} {...rest}>\n                <h1 className={ErrorClasses.title} role=\"alert\">\n                    <ErrorIcon className={ErrorClasses.icon} />\n                    {translate('ra.page.error')}\n                </h1>\n                <div>{translate('ra.message.error')}</div>\n                {process.env.NODE_ENV !== 'production' && (\n                    <>\n                        <Accordion className={ErrorClasses.panel}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                className={ErrorClasses.panelSumary}\n                            >\n                                {translate(error.message, {\n                                    _: error.message,\n                                })}\n                            </AccordionSummary>\n                            <AccordionDetails\n                                className={ErrorClasses.panelDetails}\n                            >\n                                {/*\n                                    error message is repeated here to allow users to copy it. AccordionSummary doesn't support text selection.\n                                */}\n                                <p>\n                                    {translate(error.message, {\n                                        _: error.message,\n                                    })}\n                                </p>\n                                <p>{errorInfo?.componentStack}</p>\n                            </AccordionDetails>\n                        </Accordion>\n\n                        <div className={ErrorClasses.advice}>\n                            <Typography align=\"center\">\n                                Need help with this error? Try the following:\n                            </Typography>\n                            <Typography component=\"div\">\n                                <ul>\n                                    <li>\n                                        Check the{' '}\n                                        <a href=\"https://marmelab.com/react-admin/Readme.html\">\n                                            react-admin documentation\n                                        </a>\n                                    </li>\n                                    <li>\n                                        Search on{' '}\n                                        <a href=\"https://stackoverflow.com/questions/tagged/react-admin\">\n                                            StackOverflow\n                                        </a>{' '}\n                                        for community answers\n                                    </li>\n                                    <li>\n                                        Get help from the core team via{' '}\n                                        <a href=\"https://marmelab.com/ra-enterprise/#fromsww\">\n                                            react-admin Enterprise Edition\n                                        </a>\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </>\n                )}\n                <div className={ErrorClasses.toolbar}>\n                    <Button\n                        variant=\"contained\"\n                        startIcon={<History />}\n                        onClick={goBack}\n                    >\n                        {translate('ra.action.back')}\n                    </Button>\n                </div>\n            </Root>\n        </Fragment>\n    );\n};\n\nError.propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.object.isRequired,\n    errorInfo: PropTypes.object,\n    title: TitlePropType,\n};\n\ninterface InternalErrorProps\n    extends Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'>,\n        FallbackProps,\n        ErrorProps {\n    className?: string;\n}\n\nexport interface ErrorProps extends Pick<FallbackProps, 'error'> {\n    errorInfo?: ErrorInfo;\n    title?: TitleComponent;\n}\n\nconst PREFIX = 'RaError';\n\nexport const ErrorClasses = {\n    container: `${PREFIX}-container`,\n    title: `${PREFIX}-title`,\n    icon: `${PREFIX}-icon`,\n    panel: `${PREFIX}-panel`,\n    panelSumary: `${PREFIX}-panelSumary`,\n    panelDetails: `${PREFIX}-panelDetails`,\n    toolbar: `${PREFIX}-toolbar`,\n    advice: `${PREFIX}-advice`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n        padding: '1em',\n    },\n    fontFamily: 'Roboto, sans-serif',\n    opacity: 0.5,\n\n    [`& .${ErrorClasses.title}`]: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n    [`& .${ErrorClasses.icon}`]: {\n        width: '2em',\n        height: '2em',\n        marginRight: '0.5em',\n    },\n\n    [`& .${ErrorClasses.panel}`]: {\n        marginTop: '1em',\n        maxWidth: '60em',\n    },\n\n    [`& .${ErrorClasses.panelSumary}`]: {\n        userSelect: 'all',\n    },\n\n    [`& .${ErrorClasses.panelDetails}`]: {\n        whiteSpace: 'pre-wrap',\n    },\n\n    [`& .${ErrorClasses.toolbar}`]: {\n        marginTop: '2em',\n    },\n\n    [`& .${ErrorClasses.advice}`]: {\n        marginTop: '2em',\n    },\n}));\n\nfunction goBack() {\n    window.history.go(-1);\n}\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslate, RaRecord, warning } from 'ra-core';\n\nexport const Title = (props: TitleProps) => {\n    const { className, defaultTitle, title, ...rest } = props;\n    const translate = useTranslate();\n    const container =\n        typeof document !== 'undefined'\n            ? document.getElementById('react-admin-title')\n            : null;\n\n    if (!container) return null;\n\n    warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n\n    const titleElement = !title ? (\n        <span className={className} {...rest}>\n            {defaultTitle}\n        </span>\n    ) : typeof title === 'string' ? (\n        <span className={className} {...rest}>\n            {translate(title, { _: title })}\n        </span>\n    ) : (\n        title\n    );\n    return createPortal(titleElement, container);\n};\n\nexport const TitlePropType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n]);\n\nTitle.propTypes = {\n    defaultTitle: PropTypes.string,\n    className: PropTypes.string,\n    record: PropTypes.any,\n    title: TitlePropType,\n};\n\nexport interface TitleProps {\n    className?: string;\n    defaultTitle?: string;\n    record?: Partial<RaRecord>;\n    title?: string | ReactElement;\n}\n","import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\n\n/**\n * A hook to use inside the component passed to FallbackComponent\n * of react-error-boundary. It resets the error boundary state whenever\n * the location changes\n * @param {Function} resetErrorBoundary\n */\nexport const useResetErrorBoundaryOnLocationChange = (\n    resetErrorBoundary: () => void\n) => {\n    const { pathname } = useLocation();\n    const originalPathname = useRef(pathname);\n\n    useEffect(() => {\n        if (pathname !== originalPathname.current) {\n            resetErrorBoundary();\n        }\n    }, [pathname, resetErrorBoundary]);\n};\n","import React, {\n    useState,\n    ErrorInfo,\n    ReactNode,\n    ComponentType,\n    HtmlHTMLAttributes,\n} from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { CoreLayoutProps } from 'ra-core';\n\nimport { AppBar as DefaultAppBar, AppBarProps } from './AppBar';\nimport { Sidebar as DefaultSidebar } from './Sidebar';\nimport { Menu as DefaultMenu, MenuProps } from './Menu';\nimport { Error, ErrorProps } from './Error';\nimport { SkipNavigationButton } from '../button';\nimport { useSidebarState } from './useSidebarState';\n\nexport const Layout = (props: LayoutProps) => {\n    const {\n        appBar: AppBar = DefaultAppBar,\n        children,\n        className,\n        dashboard,\n        error: errorComponent,\n        menu: Menu = DefaultMenu,\n        sidebar: Sidebar = DefaultSidebar,\n        title,\n        ...rest\n    } = props;\n\n    const [open] = useSidebarState();\n    const [errorInfo, setErrorInfo] = useState<ErrorInfo>(null);\n\n    const handleError = (error: Error, info: ErrorInfo) => {\n        setErrorInfo(info);\n    };\n\n    return (\n        <StyledLayout className={clsx('layout', className)} {...rest}>\n            <SkipNavigationButton />\n            <div className={LayoutClasses.appFrame}>\n                <AppBar open={open} title={title} />\n                <main className={LayoutClasses.contentWithSidebar}>\n                    <Sidebar>\n                        <Menu hasDashboard={!!dashboard} />\n                    </Sidebar>\n                    <div id=\"main-content\" className={LayoutClasses.content}>\n                        <ErrorBoundary\n                            onError={handleError}\n                            fallbackRender={({ error, resetErrorBoundary }) => (\n                                <Error\n                                    error={error}\n                                    errorComponent={errorComponent}\n                                    errorInfo={errorInfo}\n                                    resetErrorBoundary={resetErrorBoundary}\n                                    title={title}\n                                />\n                            )}\n                        >\n                            {children}\n                        </ErrorBoundary>\n                    </div>\n                </main>\n            </div>\n        </StyledLayout>\n    );\n};\n\nexport interface LayoutProps\n    extends CoreLayoutProps,\n        Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'> {\n    appBar?: ComponentType<AppBarProps>;\n    className?: string;\n    error?: ComponentType<ErrorProps>;\n    menu?: ComponentType<MenuProps>;\n    sidebar?: ComponentType<{ children: ReactNode }>;\n}\n\nexport interface LayoutState {\n    hasError: boolean;\n    error?: Error;\n    errorInfo?: ErrorInfo;\n}\n\nconst PREFIX = 'RaLayout';\nexport const LayoutClasses = {\n    appFrame: `${PREFIX}-appFrame`,\n    contentWithSidebar: `${PREFIX}-contentWithSidebar`,\n    content: `${PREFIX}-content`,\n};\n\nconst StyledLayout = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 1,\n    minHeight: '100vh',\n    backgroundColor: theme.palette.background.default,\n    position: 'relative',\n    minWidth: 'fit-content',\n    width: '100%',\n    color: theme.palette.getContrastText(theme.palette.background.default),\n\n    [`& .${LayoutClasses.appFrame}`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        [theme.breakpoints.up('xs')]: {\n            marginTop: theme.spacing(6),\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing(7),\n        },\n    },\n    [`& .${LayoutClasses.contentWithSidebar}`]: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    [`& .${LayoutClasses.content}`]: {\n        backgroundColor: theme.palette.background.default,\n        zIndex: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        flexBasis: 0,\n        [theme.breakpoints.up('xs')]: {\n            paddingRight: theme.spacing(2),\n            paddingLeft: theme.spacing(1),\n        },\n        [theme.breakpoints.down('md')]: {\n            padding: 0,\n        },\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer, DrawerProps, useMediaQuery, Theme } from '@mui/material';\nimport lodashGet from 'lodash/get';\nimport { useLocale } from 'ra-core';\n\nimport { useSidebarState } from './useSidebarState';\n\nexport const Sidebar = (props: SidebarProps) => {\n    const { children, closedSize, size, ...rest } = props;\n    const isXSmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n    const isSmall = useMediaQuery<Theme>(theme => theme.breakpoints.down('md'));\n    const [open, setOpen] = useSidebarState();\n    useLocale(); // force redraw on locale change\n\n    const toggleSidebar = () => setOpen(!open);\n\n    return isXSmall ? (\n        <StyledDrawer\n            variant=\"temporary\"\n            open={open}\n            onClose={toggleSidebar}\n            classes={SidebarClasses}\n            {...rest}\n        >\n            {children}\n        </StyledDrawer>\n    ) : isSmall ? (\n        <StyledDrawer\n            variant=\"permanent\"\n            open={open}\n            onClose={toggleSidebar}\n            classes={SidebarClasses}\n            {...rest}\n        >\n            <div className={SidebarClasses.fixed}>{children}</div>\n        </StyledDrawer>\n    ) : (\n        <StyledDrawer\n            variant=\"permanent\"\n            open={open}\n            onClose={toggleSidebar}\n            classes={SidebarClasses}\n            {...rest}\n        >\n            <div className={SidebarClasses.fixed}>{children}</div>\n        </StyledDrawer>\n    );\n};\n\nSidebar.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport interface SidebarProps extends DrawerProps {\n    children: ReactElement;\n    closedSize?: number;\n\n    size?: number;\n}\n\nconst PREFIX = 'RaSidebar';\n\nexport const SidebarClasses = {\n    docked: `${PREFIX}-docked`,\n    paper: `${PREFIX}-paper`,\n    paperAnchorLeft: `${PREFIX}-paperAnchorLeft`,\n    paperAnchorRight: `${PREFIX}-paperAnchorRight`,\n    paperAnchorTop: `${PREFIX}-paperAnchorTop`,\n    paperAnchorBottom: `${PREFIX}-paperAnchorBottom`,\n    paperAnchorDockedLeft: `${PREFIX}-paperAnchorDockedLeft`,\n    paperAnchorDockedTop: `${PREFIX}-paperAnchorDockedTop`,\n    paperAnchorDockedRight: `${PREFIX}-paperAnchorDockedRight`,\n    paperAnchorDockedBottom: `${PREFIX}-paperAnchorDockedBottom`,\n    modal: `${PREFIX}-modal`,\n    fixed: `${PREFIX}-fixed`,\n};\n\nconst StyledDrawer = styled(Drawer, {\n    name: PREFIX,\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root,\n})(({ open, theme }) => ({\n    height: 'calc(100vh - 3em)',\n\n    [`& .${SidebarClasses.docked}`]: {},\n    [`& .${SidebarClasses.paper}`]: {},\n    [`& .${SidebarClasses.paperAnchorLeft}`]: {},\n    [`& .${SidebarClasses.paperAnchorRight}`]: {},\n    [`& .${SidebarClasses.paperAnchorTop}`]: {},\n    [`& .${SidebarClasses.paperAnchorBottom}`]: {},\n    [`& .${SidebarClasses.paperAnchorDockedLeft}`]: {},\n    [`& .${SidebarClasses.paperAnchorDockedTop}`]: {},\n    [`& .${SidebarClasses.paperAnchorDockedRight}`]: {},\n    [`& .${SidebarClasses.paperAnchorDockedBottom}`]: {},\n    [`& .${SidebarClasses.modal}`]: {},\n\n    [`& .${SidebarClasses.fixed}`]: {\n        position: 'fixed',\n        height: 'calc(100vh - 3em)',\n        overflowX: 'hidden',\n        // hide scrollbar\n        scrollbarWidth: 'none',\n        msOverflowStyle: 'none',\n        '&::-webkit-scrollbar': {\n            display: 'none',\n        },\n    },\n\n    [`& .MuiPaper-root`]: {\n        position: 'relative',\n        width: open\n            ? lodashGet(theme, 'sidebar.width', DRAWER_WIDTH)\n            : lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        backgroundColor: 'transparent',\n        borderRight: 'none',\n        [theme.breakpoints.only('xs')]: {\n            marginTop: 0,\n            height: '100vh',\n            position: 'inherit',\n            backgroundColor: theme.palette.background.default,\n        },\n        [theme.breakpoints.up('md')]: {\n            border: 'none',\n        },\n        zIndex: 'inherit',\n    },\n}));\n\nexport const DRAWER_WIDTH = 240;\nexport const CLOSED_DRAWER_WIDTH = 55;\n","import * as React from 'react';\nimport { ReactNode, createElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport lodashGet from 'lodash/get';\nimport DefaultIcon from '@mui/icons-material/ViewList';\nimport clsx from 'clsx';\nimport {\n    useResourceDefinitions,\n    useGetResourceLabel,\n    useCreatePath,\n} from 'ra-core';\n\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\nimport { useSidebarState } from './useSidebarState';\nimport { DashboardMenuItem } from './DashboardMenuItem';\nimport { MenuItemLink } from './MenuItemLink';\n\nexport const Menu = (props: MenuProps) => {\n    const resources = useResourceDefinitions();\n    const getResourceLabel = useGetResourceLabel();\n    const createPath = useCreatePath();\n    const {\n        hasDashboard,\n        dense,\n        children = (\n            <>\n                {hasDashboard && <DashboardMenuItem dense={dense} />}\n                {Object.keys(resources)\n                    .filter(name => resources[name].hasList)\n                    .map(name => (\n                        <MenuItemLink\n                            key={name}\n                            to={createPath({\n                                resource: name,\n                                type: 'list',\n                            })}\n                            state={{ _scrollToTop: true }}\n                            primaryText={getResourceLabel(name, 2)}\n                            leftIcon={\n                                resources[name].icon ? (\n                                    createElement(resources[name].icon)\n                                ) : (\n                                    <DefaultIcon />\n                                )\n                            }\n                            dense={dense}\n                        />\n                    ))}\n            </>\n        ),\n        className,\n        ...rest\n    } = props;\n\n    const [open] = useSidebarState();\n\n    return (\n        <Root\n            className={clsx(\n                {\n                    [MenuClasses.open]: open,\n                    [MenuClasses.closed]: !open,\n                },\n                className\n            )}\n            {...rest}\n        >\n            {children}\n        </Root>\n    );\n};\n\nexport interface MenuProps {\n    children?: ReactNode;\n    className?: string;\n    dense?: boolean;\n    hasDashboard?: boolean;\n}\n\nMenu.propTypes = {\n    className: PropTypes.string,\n    dense: PropTypes.bool,\n    hasDashboard: PropTypes.bool,\n};\n\nconst PREFIX = 'RaMenu';\n\nexport const MenuClasses = {\n    open: `${PREFIX}-open`,\n    closed: `${PREFIX}-closed`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: '0.5em',\n    marginBottom: '1em',\n    [theme.breakpoints.only('xs')]: {\n        marginTop: 0,\n    },\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n\n    [`&.${MenuClasses.open}`]: {\n        width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH),\n    },\n\n    [`&.${MenuClasses.closed}`]: {\n        width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Progress, {\n    LinearProgressProps as ProgressProps,\n} from '@mui/material/LinearProgress';\nimport PropTypes from 'prop-types';\nimport { useTimeout } from 'ra-core';\n\n/**\n * Progress bar formatted to replace an input or a field in a form layout\n *\n * Avoids visual jumps when replaced by value or form input\n *\n * @see ReferenceField\n * @see ReferenceInput\n *\n * @typedef {Object} Props the props you can use\n * @prop {Object} classes CSS class names\n * @prop {string} className CSS class applied to the LinearProgress component\n * @prop {integer} timeout Milliseconds to wait before showing the progress bar. One second by default\n *\n * @param {Props} props\n */\nexport const LinearProgress = ({\n    timeout = 1000,\n    ...props\n}: LinearProgressProps) => {\n    const { className, ...rest } = props;\n\n    const oneSecondHasPassed = useTimeout(timeout);\n\n    return oneSecondHasPassed ? (\n        <StyledProgress className={className} {...rest} />\n    ) : null;\n};\n\nLinearProgress.propTypes = {\n    className: PropTypes.string,\n    timeout: PropTypes.number,\n};\n\n// What? TypeScript loses the displayName if we don't set it explicitly\nLinearProgress.displayName = 'LinearProgress';\n\nexport interface LinearProgressProps extends ProgressProps {\n    timeout?: number;\n}\n\nconst PREFIX = 'RaLinearProgress';\n\nconst StyledProgress = styled(Progress, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    margin: `${theme.spacing(1)} 0`,\n    width: theme.spacing(20),\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useTranslate } from 'ra-core';\n\nexport const Loading = props => {\n    const {\n        className,\n        loadingPrimary = 'ra.page.loading',\n        loadingSecondary = 'ra.message.loading',\n    } = props;\n\n    const translate = useTranslate();\n    return (\n        <Root className={className}>\n            <div className={LoadingClasses.message}>\n                <CircularProgress\n                    className={LoadingClasses.icon}\n                    color=\"primary\"\n                />\n                <h1>{translate(loadingPrimary)}</h1>\n                <div>{translate(loadingSecondary)}.</div>\n            </div>\n        </Root>\n    );\n};\n\nLoading.propTypes = {\n    className: PropTypes.string,\n    loadingPrimary: PropTypes.string,\n    loadingSecondary: PropTypes.string,\n};\n\nLoading.defaultProps = {\n    loadingPrimary: 'ra.page.loading',\n    loadingSecondary: 'ra.message.loading',\n};\n\nconst PREFIX = 'RaLoading';\n\nexport const LoadingClasses = {\n    root: `${PREFIX}-root`,\n    icon: `${PREFIX}-icon`,\n    message: `${PREFIX}-message`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    [theme.breakpoints.up('md')]: {\n        height: '100%',\n    },\n    [theme.breakpoints.down('xl')]: {\n        height: '100vh',\n        marginTop: '-3em',\n    },\n\n    [`& .${LoadingClasses.icon}`]: {\n        width: '9em',\n        height: '9em',\n    },\n\n    [`& .${LoadingClasses.message}`]: {\n        textAlign: 'center',\n        fontFamily: 'Roboto, sans-serif',\n        opacity: 0.5,\n        margin: '0 1em',\n    },\n}));\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loading } from './Loading';\n\nexport const LoadingPage = ({\n    loadingPrimary = 'ra.page.loading',\n    loadingSecondary = 'ra.message.loading',\n    ...props\n}) => (\n    <Loading\n        loadingPrimary={loadingPrimary}\n        loadingSecondary={loadingSecondary}\n        {...props}\n    />\n);\n\nLoadingPage.propTypes = {\n    theme: PropTypes.object,\n    className: PropTypes.string,\n    loadingPrimary: PropTypes.string,\n    loadingSecondary: PropTypes.string,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport HotTub from '@mui/icons-material/HotTub';\nimport History from '@mui/icons-material/History';\n\nimport { useAuthenticated, useTranslate } from 'ra-core';\nimport { Title } from './Title';\n\nexport const NotFound = props => {\n    const { className, title, ...rest } = props;\n\n    const translate = useTranslate();\n    useAuthenticated();\n    return (\n        <Root className={className} {...sanitizeRestProps(rest)}>\n            <Title defaultTitle={title} />\n            <div className={NotFoundClasses.message}>\n                <HotTub className={NotFoundClasses.icon} />\n                <h1>{translate('ra.page.not_found')}</h1>\n                <div>{translate('ra.message.not_found')}.</div>\n            </div>\n            <div className={NotFoundClasses.toolbar}>\n                <Button\n                    variant=\"contained\"\n                    startIcon={<History />}\n                    onClick={goBack}\n                >\n                    {translate('ra.action.back')}\n                </Button>\n            </div>\n        </Root>\n    );\n};\n\nconst sanitizeRestProps = ({\n    staticContext,\n    history,\n    location,\n    match,\n    ...rest\n}) => rest;\n\nNotFound.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    location: PropTypes.object,\n};\n\nconst PREFIX = 'RaNotFound';\n\nexport const NotFoundClasses = {\n    icon: `${PREFIX}-icon`,\n    message: `${PREFIX}-message`,\n    toolbar: `${PREFIX}-toolbar`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    [theme.breakpoints.up('md')]: {\n        height: '100%',\n    },\n    [theme.breakpoints.down('md')]: {\n        height: '100vh',\n        marginTop: '-3em',\n    },\n\n    [`& .${NotFoundClasses.icon}`]: {\n        width: '9em',\n        height: '9em',\n    },\n\n    [`& .${NotFoundClasses.message}`]: {\n        textAlign: 'center',\n        fontFamily: 'Roboto, sans-serif',\n        opacity: 0.5,\n        margin: '0 1em',\n    },\n\n    [`& .${NotFoundClasses.toolbar}`]: {\n        textAlign: 'center',\n        marginTop: '2em',\n    },\n}));\n\nfunction goBack() {\n    window.history.go(-1);\n}\n","import * as React from 'react';\nimport { styled, Theme } from '@mui/material/styles';\nimport { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Snackbar, SnackbarProps, SnackbarOrigin } from '@mui/material';\nimport clsx from 'clsx';\n\nimport {\n    useNotificationContext,\n    undoableEventEmitter,\n    useTranslate,\n} from 'ra-core';\n\nconst defaultAnchorOrigin: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'center',\n};\n\n/**\n * Provides a way to show a notification.\n * @see useNotify\n *\n * @example <caption>Basic usage</caption>\n * <Notification />\n *\n * @param props The component props\n * @param {string} props.type The notification type. Defaults to 'info'.\n * @param {number} props.autoHideDuration Duration in milliseconds to wait until hiding a given notification. Defaults to 4000.\n * @param {boolean} props.multiLine Set it to `true` if the notification message should be shown in more than one line.\n */\nexport const Notification = (props: NotificationProps) => {\n    const {\n        className,\n        type = 'info',\n        autoHideDuration = 4000,\n        multiLine = false,\n        anchorOrigin = defaultAnchorOrigin,\n        ...rest\n    } = props;\n    const { notifications, takeNotification } = useNotificationContext();\n    const [open, setOpen] = useState(false);\n    const [messageInfo, setMessageInfo] = React.useState(undefined);\n    const translate = useTranslate();\n\n    useEffect(() => {\n        if (notifications.length && !messageInfo) {\n            // Set a new snack when we don't have an active one\n            setMessageInfo(takeNotification());\n            setOpen(true);\n        } else if (notifications.length && messageInfo && open) {\n            // Close an active snack when a new one is added\n            setOpen(false);\n        }\n    }, [notifications, messageInfo, open, takeNotification]);\n\n    const handleRequestClose = useCallback(() => {\n        setOpen(false);\n    }, [setOpen]);\n\n    const handleExited = useCallback(() => {\n        if (messageInfo && messageInfo.notificationOptions.undoable) {\n            undoableEventEmitter.emit('end', { isUndo: false });\n        }\n        setMessageInfo(undefined);\n    }, [messageInfo]);\n\n    const handleUndo = useCallback(() => {\n        undoableEventEmitter.emit('end', { isUndo: true });\n        setOpen(false);\n    }, []);\n\n    if (!messageInfo) return null;\n\n    return (\n        <StyledSnackbar\n            className={className}\n            open={open}\n            message={\n                messageInfo.message &&\n                translate(\n                    messageInfo.message,\n                    messageInfo.notificationOptions.messageArgs\n                )\n            }\n            autoHideDuration={\n                messageInfo.notificationOptions.autoHideDuration ||\n                autoHideDuration\n            }\n            disableWindowBlurListener={messageInfo.notificationOptions.undoable}\n            TransitionProps={{ onExited: handleExited }}\n            onClose={handleRequestClose}\n            ContentProps={{\n                className: clsx(NotificationClasses[messageInfo.type || type], {\n                    [NotificationClasses.multiLine]:\n                        messageInfo.multiLine || multiLine,\n                }),\n            }}\n            action={\n                messageInfo.notificationOptions.undoable ? (\n                    <Button\n                        color=\"primary\"\n                        className={NotificationClasses.undo}\n                        size=\"small\"\n                        onClick={handleUndo}\n                    >\n                        <>{translate('ra.action.undo')}</>\n                    </Button>\n                ) : null\n            }\n            anchorOrigin={anchorOrigin}\n            {...rest}\n        />\n    );\n};\n\nNotification.propTypes = {\n    type: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    multiLine: PropTypes.bool,\n};\n\nconst PREFIX = 'RaNotification';\n\nexport const NotificationClasses = {\n    success: `${PREFIX}-success`,\n    error: `${PREFIX}-error`,\n    warning: `${PREFIX}-warning`,\n    undo: `${PREFIX}-undo`,\n    multiLine: `${PREFIX}-multiLine`,\n};\n\nconst StyledSnackbar = styled(Snackbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme, type }: NotificationProps & { theme?: Theme }) => ({\n    [`& .${NotificationClasses.success}`]: {\n        backgroundColor: theme.palette.success.main,\n        color: theme.palette.success.contrastText,\n    },\n\n    [`& .${NotificationClasses.error}`]: {\n        backgroundColor: theme.palette.error.dark,\n        color: theme.palette.error.contrastText,\n    },\n\n    [`& .${NotificationClasses.warning}`]: {\n        backgroundColor: theme.palette.error.light,\n        color: theme.palette.error.contrastText,\n    },\n\n    [`& .${NotificationClasses.undo}`]: {\n        color:\n            type === 'success'\n                ? theme.palette.success.contrastText\n                : theme.palette.primary.light,\n    },\n    [`& .${NotificationClasses.multiLine}`]: {\n        whiteSpace: 'pre-wrap',\n    },\n}));\n\nexport interface NotificationProps extends Omit<SnackbarProps, 'open'> {\n    type?: string;\n    autoHideDuration?: number;\n    multiLine?: boolean;\n}\n","import { useStore } from 'ra-core';\nimport { ThemeOptions } from '@mui/material';\n\nexport type ThemeSetter = (theme: ThemeOptions) => void;\n\nexport const useTheme = (\n    themeOverride?: ThemeOptions\n): [ThemeOptions, ThemeSetter] => useStore('theme', themeOverride);\n","import * as React from 'react';\nimport { ReactNode, useMemo } from 'react';\nimport {\n    ThemeProvider as MuiThemeProvider,\n    createTheme,\n} from '@mui/material/styles';\nimport { ThemeOptions } from '@mui/material';\n\nimport { useTheme } from './useTheme';\n\n/**\n * This sets the MUI theme based on the store.\n *\n * @param props\n * @param props.children The children of the component.\n * @param props.theme The initial theme.\n */\nexport const ThemeProvider = ({\n    children,\n    theme: themeOverride,\n}: ThemeProviderProps) => {\n    const [theme] = useTheme(themeOverride);\n    const themeValue = useMemo(() => {\n        try {\n            return createTheme(theme);\n        } catch (e) {\n            console.warn('Failed to reuse custom theme from store', e);\n            return createTheme();\n        }\n    }, [theme]);\n\n    return <MuiThemeProvider theme={themeValue}>{children}</MuiThemeProvider>;\n};\n\nexport interface ThemeProviderProps {\n    children: ReactNode;\n    theme: ThemeOptions;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Toolbar, { ToolbarProps } from '@mui/material/Toolbar';\n\nexport const TopToolbar = (props: ToolbarProps) => <StyledToolbar {...props} />;\n\nTopToolbar.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nexport default TopToolbar;\nconst PREFIX = 'RaTopToolbar';\n\nconst StyledToolbar = styled(Toolbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    paddingBottom: theme.spacing(1),\n    gap: theme.spacing(1),\n    [theme.breakpoints.up('sm')]: {\n        minHeight: theme.spacing(6),\n    },\n    [theme.breakpoints.up('xs')]: {\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    [theme.breakpoints.down('md')]: {\n        paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.down('sm')]: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n","import { useContext } from 'react';\nimport { UserMenuContext } from './UserMenuContext';\n\n/**\n * A hook to retrieve the user menu context, which provides access to a function for closing the user menu.\n * @returns {UserMenuContextValue}\n *\n * @example\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\n *\n * const ConfigurationMenu = () => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItemLink\n *             to=\"/configuration\"\n *             primaryText=\"pos.configuration\"\n *             leftIcon={<SettingsIcon />}\n *             sidebarIsOpen\n *             onClick={onClose}\n *         />\n *     );\n * };\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n */\nexport const useUserMenu = () => useContext(UserMenuContext);\n","import * as React from 'react';\nimport { isValidElement, ReactElement } from 'react';\nimport { useTranslate, ValidationError, ValidationErrorMessage } from 'ra-core';\n\nexport const InputHelperText = (props: InputHelperTextProps) => {\n    const { helperText, touched, error } = props;\n    const translate = useTranslate();\n\n    return touched && error ? (\n        <ValidationError error={error} />\n    ) : isValidElement(helperText) ? (\n        helperText\n    ) : typeof helperText === 'string' ? (\n        <>{translate(helperText, { _: helperText })}</>\n    ) : helperText !== false ? (\n        // MUI's HelperText cannot reserve space unless we pass a single\n        // space as child, which isn't possible when the child is a component.\n        // Therefore, we must reserve the space ourselves by passing the same\n        // markup as MUI.\n        // @see https://github.com/mui-org/material-ui/blob/62e439b7022d519ab638d65201e204b59b77f8da/packages/material-ui/src/FormHelperText/FormHelperText.js#L85-L90\n        // eslint-disable-next-line react/no-danger\n        <span dangerouslySetInnerHTML={defaultInnerHTML} />\n    ) : null;\n};\n\nconst defaultInnerHTML = { __html: '&#8203;' };\n\nexport interface InputHelperTextProps {\n    helperText?: string | ReactElement | boolean;\n    error?: ValidationErrorMessage;\n    touched: boolean;\n}\n","export const sanitizeInputRestProps = ({\n    afterSubmit,\n    allowNull,\n    alwaysOn,\n    beforeSubmit,\n    component,\n    data,\n    defaultValue,\n    error,\n    format,\n    formatOnBlur,\n    formClassName,\n    initialValue,\n    initializeForm,\n    input,\n    isEqual,\n    isRequired,\n    label,\n    limitChoicesToValue,\n    locale,\n    meta,\n    multiple,\n    name,\n    options,\n    optionText,\n    optionValue,\n    parse,\n    record,\n    ref,\n    refetch,\n    render,\n    resource,\n    setFilter,\n    setPagination,\n    setSort,\n    source,\n    submitError,\n    subscription,\n    textAlign,\n    translate,\n    translateChoice,\n    validate,\n    validateFields,\n    value,\n    ...rest\n}: any) => rest;\n","import * as React from 'react';\nimport { ElementType, ReactElement } from 'react';\nimport { Stack, StackProps, Theme, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Property } from 'csstype';\nimport clsx from 'clsx';\n\nimport { FieldTitle } from 'ra-core';\nimport { ResponsiveStyleValue } from '@mui/system';\n\n/**\n * Wrap a field or an input with a label if necessary.\n *\n * The label is displayed if:\n * - the field or input has a label prop that is not false, or\n * - the field or input has a source prop\n *\n * @example\n * <Labeled>\n *     <FooComponent source=\"title\" />\n * </Labeled>\n */\nexport const Labeled = ({\n    children,\n    className = '',\n    color = 'textSecondary',\n    component = 'span',\n    fullWidth,\n    isRequired,\n    label,\n    resource,\n    source,\n    ...rest\n}: LabeledProps) =>\n    label !== false &&\n    children.props.label !== false &&\n    typeof children.type !== 'string' &&\n    // @ts-ignore\n    children.type?.displayName !== 'Labeled' &&\n    // @ts-ignore\n    children.type?.displayName !== 'Labeled' ? (\n        <Root\n            // @ts-ignore https://github.com/mui/material-ui/issues/29875\n            component={component}\n            className={clsx(className, {\n                [LabeledClasses.fullWidth]: fullWidth,\n            })}\n            {...rest}\n        >\n            <Typography color={color} className={LabeledClasses.label}>\n                <FieldTitle\n                    label={label || children.props.label}\n                    source={source || children.props.source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            </Typography>\n            {children}\n        </Root>\n    ) : (\n        <div className={className}>{children}</div>\n    );\n\nLabeled.displayName = 'Labeled';\n\nexport interface LabeledProps extends StackProps {\n    children: ReactElement;\n    className?: string;\n    color?:\n        | ResponsiveStyleValue<Property.Color | Property.Color[]>\n        | ((\n              theme: Theme\n          ) => ResponsiveStyleValue<Property.Color | Property.Color[]>);\n    component?: ElementType;\n    fullWidth?: boolean;\n    htmlFor?: string;\n    isRequired?: boolean;\n    label?: string | ReactElement | false;\n    resource?: string;\n    source?: string;\n}\n\nconst PREFIX = 'RaLabeled';\n\nexport const LabeledClasses = {\n    label: `${PREFIX}-label`,\n    fullWidth: `${PREFIX}-fullWidth`,\n};\n\nconst Root = styled(Stack, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'inline-flex',\n    marginBottom: '0.2em',\n\n    [`&.${LabeledClasses.fullWidth}`]: {\n        width: '100%',\n    },\n\n    [`& .${LabeledClasses.label}`]: {\n        fontSize: '0.75em',\n        marginBottom: '0.2em',\n    },\n}));\n","import { createContext } from 'react';\nimport { UseFieldArrayReturn } from 'react-hook-form';\n\n/**\n * A React context that provides access to an ArrayInput methods as provided by react-hook-form\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see {@link https://react-hook-form.com/api/usefieldarray}\n */\nexport const ArrayInputContext = createContext<ArrayInputContextValue>(\n    undefined\n);\n\nexport type ArrayInputContextValue = UseFieldArrayReturn;\n","import * as React from 'react';\nimport {\n    cloneElement,\n    MouseEvent,\n    MouseEventHandler,\n    ReactElement,\n    ReactNode,\n    useCallback,\n    useMemo,\n} from 'react';\nimport { styled } from '@mui/material';\nimport clsx from 'clsx';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport { RaRecord } from 'ra-core';\nimport { UseFieldArrayReturn } from 'react-hook-form';\n\nimport { useArrayInput } from './useArrayInput';\nimport { SimpleFormIteratorClasses } from './useSimpleFormIteratorStyles';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\nimport {\n    DisableRemoveFunction,\n    SimpleFormIteratorItem,\n} from './SimpleFormIteratorItem';\nimport { AddItemButton as DefaultAddItemButton } from './AddItemButton';\nimport { RemoveItemButton as DefaultRemoveItemButton } from './RemoveItemButton';\nimport { ReOrderButtons as DefaultReOrderButtons } from './ReOrderButtons';\n\nexport const SimpleFormIterator = (props: SimpleFormIteratorProps) => {\n    const {\n        addButton = <DefaultAddItemButton />,\n        removeButton = <DefaultRemoveItemButton />,\n        reOrderButtons = <DefaultReOrderButtons />,\n        children,\n        className,\n        record,\n        resource,\n        source,\n        disabled,\n        disableAdd,\n        disableRemove,\n        disableReordering,\n        getItemLabel = DefaultLabelFn,\n    } = props;\n    const { append, fields, move, remove } = useArrayInput(props);\n\n    const removeField = useCallback(\n        (index: number) => {\n            remove(index);\n        },\n        [remove]\n    );\n\n    const addField = useCallback(\n        (item: any = undefined) => {\n            append(item);\n        },\n        [append]\n    );\n\n    // add field and call the onClick event of the button passed as addButton prop\n    const handleAddButtonClick = (\n        originalOnClickHandler: MouseEventHandler\n    ) => (event: MouseEvent) => {\n        addField();\n        if (originalOnClickHandler) {\n            originalOnClickHandler(event);\n        }\n    };\n\n    const handleReorder = useCallback(\n        (origin: number, destination: number) => {\n            move(origin, destination);\n        },\n        [move]\n    );\n\n    const records = get(record, source);\n\n    const context = useMemo(\n        () => ({\n            total: fields.length,\n            add: addField,\n            remove: removeField,\n            reOrder: handleReorder,\n        }),\n        [fields.length, addField, removeField, handleReorder]\n    );\n    return fields ? (\n        <SimpleFormIteratorContext.Provider value={context}>\n            <Root className={className}>\n                {fields.map((member, index) => (\n                    <SimpleFormIteratorItem\n                        key={member.id}\n                        disabled={disabled}\n                        disableRemove={disableRemove}\n                        disableReordering={disableReordering}\n                        fields={fields}\n                        getItemLabel={getItemLabel}\n                        index={index}\n                        member={`${source}.${index}`}\n                        onRemoveField={removeField}\n                        onReorder={handleReorder}\n                        record={(records && records[index]) || {}}\n                        removeButton={removeButton}\n                        reOrderButtons={reOrderButtons}\n                        resource={resource}\n                        source={source}\n                    >\n                        {children}\n                    </SimpleFormIteratorItem>\n                ))}\n                {!disabled && !disableAdd && (\n                    <li className={SimpleFormIteratorClasses.line}>\n                        <span className={SimpleFormIteratorClasses.action}>\n                            {cloneElement(addButton, {\n                                onClick: handleAddButtonClick(\n                                    addButton.props.onClick\n                                ),\n                                className: clsx(\n                                    'button-add',\n                                    `button-add-${source}`\n                                ),\n                            })}\n                        </span>\n                    </li>\n                )}\n            </Root>\n        </SimpleFormIteratorContext.Provider>\n    ) : null;\n};\n\nSimpleFormIterator.defaultProps = {\n    disableAdd: false,\n    disableRemove: false,\n};\n\nSimpleFormIterator.propTypes = {\n    defaultValue: PropTypes.any,\n    addButton: PropTypes.element,\n    removeButton: PropTypes.element,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    field: PropTypes.object,\n    fields: PropTypes.array,\n    fieldState: PropTypes.object,\n    formState: PropTypes.object,\n    record: PropTypes.object,\n    source: PropTypes.string,\n    resource: PropTypes.string,\n    translate: PropTypes.func,\n    disableAdd: PropTypes.bool,\n    disableRemove: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    TransitionProps: PropTypes.shape({}),\n};\n\nexport interface SimpleFormIteratorProps extends Partial<UseFieldArrayReturn> {\n    addButton?: ReactElement;\n    children?: ReactNode;\n    className?: string;\n    defaultValue?: any;\n    disabled?: boolean;\n    disableAdd?: boolean;\n    disableRemove?: boolean | DisableRemoveFunction;\n    disableReordering?: boolean;\n    getItemLabel?: (index: number) => string;\n    meta?: {\n        // the type defined in FieldArrayRenderProps says error is boolean, which is wrong.\n        error?: any;\n        submitFailed?: boolean;\n    };\n    record?: RaRecord;\n    removeButton?: ReactElement;\n    reOrderButtons?: ReactElement;\n    resource?: string;\n    source?: string;\n}\n\nconst Root = styled('ul')(({ theme }) => ({\n    padding: 0,\n    marginBottom: 0,\n    '& > li:last-child': {\n        borderBottom: 'none',\n    },\n    [`& .${SimpleFormIteratorClasses.line}`]: {\n        display: 'flex',\n        listStyleType: 'none',\n        borderBottom: `solid 1px ${theme.palette.divider}`,\n        [theme.breakpoints.down('sm')]: { display: 'block' },\n    },\n    [`& .${SimpleFormIteratorClasses.index}`]: {\n        [theme.breakpoints.down('md')]: { display: 'none' },\n        marginRight: theme.spacing(1),\n    },\n    [`& .${SimpleFormIteratorClasses.indexContainer}`]: {\n        display: 'flex',\n        paddingTop: '1em',\n        marginRight: theme.spacing(1),\n        alignItems: 'center',\n    },\n    [`& .${SimpleFormIteratorClasses.form}`]: {\n        alignItems: 'flex-start',\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 2,\n    },\n    [`& .${SimpleFormIteratorClasses.action}`]: {\n        paddingTop: '0.5em',\n    },\n    [`& .${SimpleFormIteratorClasses.leftIcon}`]: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst DefaultLabelFn = index => index + 1;\n","import { useContext, useMemo } from 'react';\nimport { ArrayInputContext, ArrayInputContextValue } from './ArrayInputContext';\n\n/**\n * A hook to access an array input methods as provided by react-hook-form.\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see https://react-hook-form.com/api/usefieldarray\n */\nexport const useArrayInput = (\n    props?: Partial<ArrayInputContextValue>\n): ArrayInputContextValue => {\n    const context = useContext(ArrayInputContext);\n    const memo = useMemo(\n        () => ({\n            append: props?.append,\n            fields: props?.fields,\n            insert: props?.insert,\n            move: props?.move,\n            prepend: props?.prepend,\n            remove: props?.remove,\n            replace: props?.replace,\n            swap: props?.swap,\n            update: props?.update,\n        }),\n        [props]\n    );\n\n    if (props?.fields) {\n        return memo;\n    }\n\n    return context;\n};\n","export const SimpleFormIteratorPrefix = 'RaSimpleFormIterator';\n\nexport const SimpleFormIteratorClasses = {\n    line: `${SimpleFormIteratorPrefix}-line`,\n    index: `${SimpleFormIteratorPrefix}-index`,\n    indexContainer: `${SimpleFormIteratorPrefix}-indexContainer`,\n    form: `${SimpleFormIteratorPrefix}-form`,\n    action: `${SimpleFormIteratorPrefix}-action`,\n    leftIcon: `${SimpleFormIteratorPrefix}-leftIcon`,\n};\n","import { createContext } from 'react';\n\n/**\n * A React context that provides access to a SimpleFormIterator data (the total number of items) and mutators (add, reorder and remove).\n * Useful to create custom array input iterators.\n * @see {SimpleFormIterator}\n * @see {ArrayInput}\n */\nexport const SimpleFormIteratorContext = createContext<\n    SimpleFormIteratorContextValue\n>(undefined);\n\nexport type SimpleFormIteratorContextValue = {\n    total: number;\n    add: () => void;\n    remove: (index: number) => void;\n    reOrder: (index: number, newIndex: number) => void;\n};\n","import * as React from 'react';\nimport {\n    Children,\n    cloneElement,\n    MouseEvent,\n    MouseEventHandler,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n    useMemo,\n} from 'react';\nimport { Typography } from '@mui/material';\nimport clsx from 'clsx';\nimport { RaRecord } from 'ra-core';\n\nimport { SimpleFormIteratorClasses } from './useSimpleFormIteratorStyles';\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\nimport { ArrayInputContextValue } from './ArrayInputContext';\nimport {\n    SimpleFormIteratorItemContext,\n    SimpleFormIteratorItemContextValue,\n} from './SimpleFormIteratorItemContext';\n\nexport const SimpleFormIteratorItem = React.forwardRef(\n    (props: SimpleFormIteratorItemProps, ref: any) => {\n        const {\n            children,\n            disabled,\n            disableReordering,\n            disableRemove,\n            getItemLabel,\n            index,\n            member,\n            record,\n            removeButton,\n            reOrderButtons,\n            resource,\n            source,\n        } = props;\n\n        const { total, reOrder, remove } = useSimpleFormIterator();\n        // Returns a boolean to indicate whether to disable the remove button for certain fields.\n        // If disableRemove is a function, then call the function with the current record to\n        // determining if the button should be disabled. Otherwise, use a boolean property that\n        // enables or disables the button for all of the fields.\n        const disableRemoveField = (record: RaRecord) => {\n            if (typeof disableRemove === 'boolean') {\n                return disableRemove;\n            }\n            return disableRemove && disableRemove(record);\n        };\n\n        // remove field and call the onClick event of the button passed as removeButton prop\n        const handleRemoveButtonClick = (\n            originalOnClickHandler: MouseEventHandler,\n            index: number\n        ) => (event: MouseEvent) => {\n            remove(index);\n            if (originalOnClickHandler) {\n                originalOnClickHandler(event);\n            }\n        };\n\n        const context = useMemo<SimpleFormIteratorItemContextValue>(\n            () => ({\n                index,\n                total,\n                reOrder: newIndex => reOrder(index, newIndex),\n                remove: () => remove(index),\n            }),\n            [index, total, reOrder, remove]\n        );\n\n        return (\n            <SimpleFormIteratorItemContext.Provider value={context}>\n                <li className={SimpleFormIteratorClasses.line} ref={ref}>\n                    <div>\n                        <div\n                            className={SimpleFormIteratorClasses.indexContainer}\n                        >\n                            <Typography\n                                variant=\"body1\"\n                                className={SimpleFormIteratorClasses.index}\n                            >\n                                {getItemLabel(index)}\n                            </Typography>\n                            {!disabled &&\n                                !disableReordering &&\n                                cloneElement(reOrderButtons, {\n                                    index,\n                                    max: total,\n                                    reOrder,\n                                    className: clsx(\n                                        'button-reorder',\n                                        `button-reorder-${source}-${index}`\n                                    ),\n                                })}\n                        </div>\n                    </div>\n                    <section className={SimpleFormIteratorClasses.form}>\n                        {Children.map(\n                            children,\n                            (input: ReactElement, index2) => {\n                                if (!isValidElement<any>(input)) {\n                                    return null;\n                                }\n                                const { source, ...inputProps } = input.props;\n                                return cloneElement(input, {\n                                    source: source\n                                        ? `${member}.${source}`\n                                        : member,\n                                    index: source ? undefined : index2,\n                                    label:\n                                        typeof input.props.label === 'undefined'\n                                            ? source\n                                                ? `resources.${resource}.fields.${source}`\n                                                : undefined\n                                            : input.props.label,\n                                    disabled,\n                                    ...inputProps,\n                                });\n                            }\n                        )}\n                    </section>\n                    {!disabled && !disableRemoveField(record) && (\n                        <span className={SimpleFormIteratorClasses.action}>\n                            {cloneElement(removeButton, {\n                                onClick: handleRemoveButtonClick(\n                                    removeButton.props.onClick,\n                                    index\n                                ),\n                                className: clsx(\n                                    'button-remove',\n                                    `button-remove-${source}-${index}`\n                                ),\n                            })}\n                        </span>\n                    )}\n                </li>\n            </SimpleFormIteratorItemContext.Provider>\n        );\n    }\n);\n\nexport type DisableRemoveFunction = (record: RaRecord) => boolean;\n\nexport type SimpleFormIteratorItemProps = Partial<ArrayInputContextValue> & {\n    children?: ReactNode;\n    disabled?: boolean;\n    disableRemove?: boolean | DisableRemoveFunction;\n    disableReordering?: boolean;\n    getItemLabel?: (index: number) => string;\n    index: number;\n    member: string;\n    onRemoveField: (index: number) => void;\n    onReorder: (origin: number, destination: number) => void;\n    record: RaRecord;\n    removeButton?: ReactElement;\n    reOrderButtons?: ReactElement;\n    resource: string;\n    source: string;\n};\n","import { useContext } from 'react';\nimport { SimpleFormIteratorContext } from './SimpleFormIteratorContext';\n\n/**\n * A hook that provides access to a SimpleFormIterator data (the total number of items) and mutators (add, reorder and remove).\n * Useful to create custom array input iterators.\n * @see {SimpleFormIterator}\n * @see {ArrayInput}\n */\nexport const useSimpleFormIterator = () =>\n    useContext(SimpleFormIteratorContext);\n","import { createContext } from 'react';\n\n/**\n * A React context that provides access to a SimpleFormIterator item meta (its index and the total number of items) and mutators (reorder and remove this remove).\n * Useful to create custom array input iterators.\n * @see {SimpleFormIterator}\n * @see {ArrayInput}\n */\nexport const SimpleFormIteratorItemContext = createContext<\n    SimpleFormIteratorItemContextValue\n>(undefined);\n\nexport type SimpleFormIteratorItemContextValue = {\n    index: number;\n    total: number;\n    remove: () => void;\n    reOrder: (newIndex: number) => void;\n};\n","import * as React from 'react';\nimport AddIcon from '@mui/icons-material/AddCircleOutline';\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\n\nimport { Button, ButtonProps } from '../../button';\n\nexport const AddItemButton = (props: Omit<ButtonProps, 'onClick'>) => {\n    const { add } = useSimpleFormIterator();\n    return (\n        <Button label=\"ra.action.add\" onClick={() => add()} {...props}>\n            <AddIcon />\n        </Button>\n    );\n};\n","import * as React from 'react';\nimport CloseIcon from '@mui/icons-material/RemoveCircleOutline';\n\nimport { Button, ButtonProps } from '../../button';\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\n\nexport const RemoveItemButton = (props: Omit<ButtonProps, 'onClick'>) => {\n    const { remove } = useSimpleFormIteratorItem();\n\n    return (\n        <Button label=\"ra.action.remove\" onClick={() => remove()} {...props}>\n            <CloseIcon />\n        </Button>\n    );\n};\n","import { useContext } from 'react';\nimport { SimpleFormIteratorItemContext } from './SimpleFormIteratorItemContext';\n\n/**\n * A hook that provides access to a SimpleFormIterator item meta (its index and the total number of items) and mutators (reorder and remove this remove).\n * Useful to create custom array input iterators.\n * @see {SimpleFormIterator}\n * @see {ArrayInput}\n */\nexport const useSimpleFormIteratorItem = () =>\n    useContext(SimpleFormIteratorItemContext);\n","import * as React from 'react';\n\nimport { IconButtonWithTooltip } from '../../button';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\n\nexport const ReOrderButtons = ({ className }: { className?: string }) => {\n    const { index, total, reOrder } = useSimpleFormIteratorItem();\n\n    return (\n        <div className={className}>\n            <IconButtonWithTooltip\n                label=\"ra.action.move_up\"\n                size=\"small\"\n                onClick={() => reOrder(index - 1)}\n                disabled={index <= 0}\n            >\n                <ArrowUpwardIcon />\n            </IconButtonWithTooltip>\n            <IconButtonWithTooltip\n                label=\"ra.action.move_down\"\n                size=\"small\"\n                onClick={() => reOrder(index + 1)}\n                disabled={total == null || index >= total - 1}\n            >\n                <ArrowDownwardIcon />\n            </IconButtonWithTooltip>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport {\n    isValidElement,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport clsx from 'clsx';\nimport {\n    Autocomplete,\n    AutocompleteProps,\n    Chip,\n    TextField,\n    TextFieldProps,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n    ChoicesProps,\n    FieldTitle,\n    RaRecord,\n    useChoicesContext,\n    useInput,\n    useSuggestions,\n    UseSuggestionsOptions,\n    useTimeout,\n    useTranslate,\n    warning,\n} from 'ra-core';\nimport {\n    SupportCreateSuggestionOptions,\n    useSupportCreateSuggestion,\n} from './useSupportCreateSuggestion';\nimport { CommonInputProps } from './CommonInputProps';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\n\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` and `inputText` props\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\n * const inputText = (record) => `${record.fullName} (${record.language})`;\n *\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n * <AutocompleteInput source=\"author\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} inputText={inputText} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <TextField> component\n *\n * @example\n * <AutocompleteInput source=\"author_id\" options={{ color: 'secondary', InputLabelProps: { shrink: true } }} />\n */\nexport const AutocompleteInput = <\n    OptionType extends RaRecord = RaRecord,\n    Multiple extends boolean | undefined = false,\n    DisableClearable extends boolean | undefined = false,\n    SupportCreate extends boolean | undefined = false\n>(\n    props: AutocompleteInputProps<\n        OptionType,\n        Multiple,\n        DisableClearable,\n        SupportCreate\n    >\n) => {\n    const {\n        choices: choicesProp,\n        className,\n        clearText = 'ra.action.clear_input_value',\n        closeText = 'ra.action.close',\n        create,\n        createLabel,\n        createItemLabel,\n        createValue,\n        debounce: debounceDelay = 250,\n        defaultValue = '',\n        emptyText,\n        emptyValue = '',\n        field: fieldOverride,\n        format,\n        helperText,\n        id: idOverride,\n        inputText,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        isRequired: isRequiredOverride,\n        label,\n        limitChoicesToValue,\n        matchSuggestion,\n        margin = 'dense',\n        fieldState: fieldStateOverride,\n        filterToQuery = DefaultFilterToQuery,\n        formState: formStateOverride,\n        multiple = false,\n        noOptionsText,\n        onBlur,\n        onChange,\n        onCreate,\n        openText = 'ra.action.open',\n        optionText = 'name',\n        optionValue = 'id',\n        parse,\n        resource: resourceProp,\n        shouldRenderSuggestions,\n        setFilter,\n        size = 'small',\n        source: sourceProp,\n        suggestionLimit,\n        TextFieldProps,\n        translateChoice,\n        validate,\n        variant = 'filled',\n        ...rest\n    } = props;\n\n    const {\n        allChoices,\n        isLoading,\n        resource,\n        source,\n        setFilters,\n    } = useChoicesContext({\n        choices: choicesProp,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n\n    const translate = useTranslate();\n    const {\n        id,\n        field,\n        isRequired,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n    } = useInput({\n        defaultValue,\n        format,\n        id: idOverride,\n        field: fieldOverride,\n        fieldState: fieldStateOverride,\n        formState: formStateOverride,\n        onBlur,\n        onChange,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const selectedChoice = useSelectedChoice<\n        OptionType,\n        Multiple,\n        DisableClearable,\n        SupportCreate\n    >(field.value, {\n        choices: allChoices,\n        // @ts-ignore\n        multiple,\n        optionValue,\n    });\n\n    useEffect(() => {\n        // eslint-disable-next-line eqeqeq\n        if (isValidElement(optionText) && inputText == undefined) {\n            throw new Error(`\nIf you provided a React element for the optionText prop, you must also provide the inputText prop (used for the text input)`);\n        }\n        // eslint-disable-next-line eqeqeq\n        if (isValidElement(optionText) && matchSuggestion == undefined) {\n            throw new Error(`\nIf you provided a React element for the optionText prop, you must also provide the matchSuggestion prop (used to match the user input with a choice)`);\n        }\n    }, [optionText, inputText, matchSuggestion]);\n\n    useEffect(() => {\n        warning(\n            /* eslint-disable eqeqeq */\n            shouldRenderSuggestions != undefined && noOptionsText == undefined,\n            `When providing a shouldRenderSuggestions function, we recommend you also provide the noOptionsText prop and set it to a text explaining users why no options are displayed. It supports translation keys.`\n        );\n        /* eslint-enable eqeqeq */\n    }, [shouldRenderSuggestions, noOptionsText]);\n\n    const { getChoiceText, getChoiceValue, getSuggestions } = useSuggestions({\n        choices: allChoices,\n        emptyText,\n        emptyValue,\n        limitChoicesToValue,\n        matchSuggestion,\n        optionText,\n        optionValue,\n        selectedItem: selectedChoice,\n        suggestionLimit,\n        translateChoice,\n    });\n\n    const [filterValue, setFilterValue] = useState('');\n\n    const handleChange = (newValue: any) => {\n        if (multiple) {\n            if (Array.isArray(newValue)) {\n                field.onChange(newValue.map(getChoiceValue));\n            } else {\n                field.onChange([\n                    ...(field.value ?? []),\n                    getChoiceValue(newValue),\n                ]);\n            }\n        } else {\n            field.onChange(getChoiceValue(newValue) || '');\n        }\n    };\n\n    // eslint-disable-next-line\n    const debouncedSetFilter = useCallback(\n        debounce(filter => {\n            if (setFilter) {\n                return setFilter(filter);\n            }\n\n            if (choicesProp) {\n                return;\n            }\n\n            setFilters(filterToQuery(filter), undefined, true);\n        }, debounceDelay),\n        [debounceDelay, setFilters, setFilter]\n    );\n\n    // We must reset the filter every time the value changes to ensure we\n    // display at least some choices even if the input has a value.\n    // Otherwise, it would only display the currently selected one and the user\n    // would have to first clear the input before seeing any other choices\n    const currentValue = useRef(field.value);\n    useEffect(() => {\n        if (!isEqual(currentValue.current, field.value)) {\n            currentValue.current = field.value;\n            debouncedSetFilter('');\n        }\n    }, [field.value]); // eslint-disable-line\n\n    const {\n        getCreateItem,\n        handleChange: handleChangeWithCreateSupport,\n        createElement,\n    } = useSupportCreateSuggestion({\n        create,\n        createLabel,\n        createItemLabel,\n        createValue,\n        handleChange,\n        filter: filterValue,\n        onCreate,\n        optionText,\n    });\n\n    const getOptionLabel = useCallback(\n        (option: any) => {\n            // eslint-disable-next-line eqeqeq\n            if (option == undefined) {\n                return '';\n            }\n            // Value selected with enter, right from the input\n            if (typeof option === 'string') {\n                return option;\n            }\n\n            // eslint-disable-next-line eqeqeq\n            if (inputText != undefined) {\n                return inputText(option);\n            }\n\n            return getChoiceText(option);\n        },\n        [getChoiceText, inputText]\n    );\n\n    useEffect(() => {\n        if (!multiple) {\n            const optionLabel = getOptionLabel(selectedChoice);\n            if (typeof optionLabel === 'string') {\n                setFilterValue(optionLabel);\n            } else {\n                throw new Error(\n                    'When optionText returns a React element, you must also provide the inputText prop'\n                );\n            }\n        }\n    }, [getOptionLabel, multiple, selectedChoice]);\n\n    const handleInputChange = (\n        event: any,\n        newInputValue: string,\n        reason: string\n    ) => {\n        setFilterValue(newInputValue);\n        debouncedSetFilter(newInputValue);\n    };\n\n    const doesQueryMatchSuggestion = useCallback(\n        filter => {\n            let selectedItemTexts = [];\n\n            if (multiple) {\n                selectedItemTexts = selectedChoice.map(item =>\n                    getOptionLabel(item)\n                );\n            } else {\n                selectedItemTexts = [getOptionLabel(selectedChoice)];\n            }\n\n            const hasOption = !!allChoices\n                ? allChoices.some(choice => getOptionLabel(choice) === filter)\n                : false;\n\n            return selectedItemTexts.includes(filter) || hasOption;\n        },\n        [allChoices, getOptionLabel, multiple, selectedChoice]\n    );\n\n    const filterOptions = (options, params) => {\n        const { inputValue } = params;\n        if (\n            (onCreate || create) &&\n            inputValue !== '' &&\n            !doesQueryMatchSuggestion(filterValue)\n        ) {\n            return options.concat(getCreateItem(inputValue));\n        }\n\n        return options;\n    };\n\n    const handleAutocompleteChange = (\n        event: any,\n        newValue: any,\n        reason: string\n    ) => {\n        handleChangeWithCreateSupport(newValue != null ? newValue : '');\n    };\n\n    const oneSecondHasPassed = useTimeout(1000, filterValue);\n\n    // To avoid displaying an empty list of choices while a search is in progress,\n    // we store the last choices in a ref. We'll display those last choices until\n    // a second has passed.\n    const currentChoices = useRef(allChoices);\n    useEffect(() => {\n        if (allChoices && (allChoices.length > 0 || oneSecondHasPassed)) {\n            currentChoices.current = allChoices;\n        }\n    }, [allChoices, oneSecondHasPassed]);\n\n    const suggestions = useMemo(() => {\n        if (setFilters && allChoices?.length === 0 && !oneSecondHasPassed) {\n            return currentChoices.current;\n        }\n        return getSuggestions(filterValue);\n    }, [\n        allChoices,\n        filterValue,\n        getSuggestions,\n        oneSecondHasPassed,\n        setFilters,\n    ]);\n\n    const isOptionEqualToValue = (option, value) => {\n        // eslint-disable-next-line eqeqeq\n        return getChoiceValue(option) == getChoiceValue(value);\n    };\n\n    return (\n        <>\n            <StyledAutocomplete\n                blurOnSelect\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                clearText={translate(clearText, { _: clearText })}\n                closeText={translate(closeText, { _: closeText })}\n                openOnFocus\n                openText={translate(openText, { _: openText })}\n                id={id}\n                isOptionEqualToValue={isOptionEqualToValue}\n                filterSelectedOptions\n                renderInput={params => (\n                    <TextField\n                        name={field.name}\n                        label={\n                            <FieldTitle\n                                label={label}\n                                source={source}\n                                resource={resource}\n                                isRequired={\n                                    typeof isRequiredOverride !== 'undefined'\n                                        ? isRequiredOverride\n                                        : isRequired\n                                }\n                            />\n                        }\n                        error={(isTouched || isSubmitted) && invalid}\n                        helperText={\n                            <InputHelperText\n                                touched={isTouched || isSubmitted}\n                                error={error?.message}\n                                helperText={helperText}\n                            />\n                        }\n                        margin={margin}\n                        variant={variant}\n                        className={AutocompleteInputClasses.textField}\n                        {...TextFieldProps}\n                        {...params}\n                        size={size}\n                    />\n                )}\n                multiple={multiple}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            label={\n                                isValidElement(optionText)\n                                    ? inputText(option)\n                                    : getChoiceText(option)\n                            }\n                            sx={{\n                                '.MuiSvgIcon-root': {\n                                    // FIXME: Workaround to allow choices deletion\n                                    // Maybe related to storybook and mui using different versions of emotion\n                                    zIndex: 100,\n                                },\n                            }}\n                            size=\"small\"\n                            {...getTagProps({ index })}\n                        />\n                    ))\n                }\n                noOptionsText={\n                    typeof noOptionsText === 'string'\n                        ? translate(noOptionsText, { _: noOptionsText })\n                        : noOptionsText\n                }\n                selectOnFocus\n                clearOnBlur\n                {...sanitizeInputRestProps(rest)}\n                freeSolo={!!create || !!onCreate}\n                handleHomeEndKeys={!!create || !!onCreate}\n                filterOptions={filterOptions}\n                options={\n                    shouldRenderSuggestions == undefined || // eslint-disable-line eqeqeq\n                    shouldRenderSuggestions(filterValue)\n                        ? suggestions\n                        : []\n                }\n                getOptionLabel={getOptionLabel}\n                inputValue={filterValue}\n                loading={\n                    isLoading && suggestions.length === 0 && oneSecondHasPassed\n                }\n                value={selectedChoice}\n                onChange={handleAutocompleteChange}\n                onBlur={field.onBlur}\n                onInputChange={handleInputChange}\n                renderOption={(props, record) => (\n                    <li {...props}>{getChoiceText(record)}</li>\n                )}\n            />\n            {createElement}\n        </>\n    );\n};\n\nconst PREFIX = 'RaAutocompleteInput';\n\nexport const AutocompleteInputClasses = {\n    textField: `${PREFIX}-textField`,\n};\n\nconst StyledAutocomplete = styled(Autocomplete, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${AutocompleteInputClasses.textField}`]: {\n        minWidth: theme.spacing(20),\n    },\n}));\n\n// @ts-ignore\nexport interface AutocompleteInputProps<\n    OptionType extends any = RaRecord,\n    Multiple extends boolean | undefined = false,\n    DisableClearable extends boolean | undefined = false,\n    SupportCreate extends boolean | undefined = false\n> extends Omit<CommonInputProps, 'source'>,\n        ChoicesProps,\n        UseSuggestionsOptions,\n        Omit<SupportCreateSuggestionOptions, 'handleChange' | 'optionText'>,\n        Omit<\n            AutocompleteProps<\n                OptionType,\n                Multiple,\n                DisableClearable,\n                SupportCreate\n            >,\n            'onChange' | 'options' | 'renderInput'\n        > {\n    debounce?: number;\n    filterToQuery?: (searchText: string) => any;\n    inputText?: (option: any) => string;\n    setFilter?: (value: string) => void;\n    shouldRenderSuggestions?: any;\n    // Source is optional as AutocompleteInput can be used inside a ReferenceInput that already defines the source\n    source?: string;\n    TextFieldProps?: TextFieldProps;\n}\n\n/**\n * Returns the selected choice (or choices if multiple) by matching the input value with the choices.\n */\nconst useSelectedChoice = <\n    OptionType extends any = RaRecord,\n    Multiple extends boolean | undefined = false,\n    DisableClearable extends boolean | undefined = false,\n    SupportCreate extends boolean | undefined = false\n>(\n    value: any,\n    {\n        choices,\n        multiple,\n        optionValue,\n    }: AutocompleteInputProps<\n        OptionType,\n        Multiple,\n        DisableClearable,\n        SupportCreate\n    >\n) => {\n    const selectedChoiceRef = useRef(\n        getSelectedItems(choices, value, optionValue, multiple)\n    );\n    const [selectedChoice, setSelectedChoice] = useState<RaRecord | RaRecord[]>(\n        () => getSelectedItems(choices, value, optionValue, multiple)\n    );\n\n    // As the selected choices are objects, we want to ensure we pass the same\n    // reference to the Autocomplete as it would reset its filter value otherwise.\n    useEffect(() => {\n        const newSelectedItems = getSelectedItems(\n            choices,\n            value,\n            optionValue,\n            multiple\n        );\n\n        if (!isEqual(selectedChoiceRef.current, newSelectedItems)) {\n            selectedChoiceRef.current = newSelectedItems;\n            setSelectedChoice(newSelectedItems);\n        }\n    }, [choices, value, multiple, optionValue]);\n    return selectedChoice || null;\n};\n\nconst getSelectedItems = (\n    choices = [],\n    value,\n    optionValue = 'id',\n    multiple\n) => {\n    if (multiple) {\n        return (value || [])\n            .map(item =>\n                choices.find(choice => item === get(choice, optionValue))\n            )\n            .filter(item => !!item);\n    }\n    return choices.find(choice => get(choice, optionValue) === value) || '';\n};\n\nconst DefaultFilterToQuery = searchText => ({ q: searchText });\n","import * as React from 'react';\nimport {\n    ChangeEvent,\n    createContext,\n    isValidElement,\n    ReactElement,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Identifier, OptionText, useTranslate } from 'ra-core';\nimport set from 'lodash/set';\n\n/**\n * This hook provides support for suggestion creation in inputs which have choices.\n *\n * @param options The hook option\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\n * @returns {UseSupportCreateValue} An object with the following properties:\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\n */\nexport const useSupportCreateSuggestion = (\n    options: SupportCreateSuggestionOptions\n): UseSupportCreateValue => {\n    const {\n        create,\n        createLabel = 'ra.action.create',\n        createItemLabel = 'ra.action.create_item',\n        createValue = '@@ra-create',\n        optionText = 'name',\n        filter,\n        handleChange,\n        onCreate,\n    } = options;\n    const translate = useTranslate();\n    const [renderOnCreate, setRenderOnCreate] = useState(false);\n    const filterRef = useRef(filter);\n\n    useEffect(() => {\n        if (filterRef.current !== filter && filter !== '') {\n            filterRef.current = filter;\n        }\n    }, [filter]);\n\n    const context = useMemo(\n        () => ({\n            filter: filterRef.current,\n            onCancel: () => setRenderOnCreate(false),\n            onCreate: item => {\n                setRenderOnCreate(false);\n                handleChange(item);\n            },\n        }),\n        [handleChange]\n    );\n\n    return {\n        getCreateItem: () => {\n            if (typeof optionText !== 'string') {\n                return {\n                    id: createValue,\n                    name:\n                        filter && createItemLabel\n                            ? translate(createItemLabel, {\n                                  item: filter,\n                                  _: createItemLabel,\n                              })\n                            : translate(createLabel, { _: createLabel }),\n                };\n            }\n            return set(\n                {\n                    id: createValue,\n                },\n                optionText,\n                filter && createItemLabel\n                    ? translate(createItemLabel, {\n                          item: filter,\n                          _: createItemLabel,\n                      })\n                    : translate(createLabel, { _: createLabel })\n            );\n        },\n        handleChange: async (eventOrValue: MouseEvent | any) => {\n            const value = eventOrValue?.target?.value || eventOrValue;\n            const finalValue = Array.isArray(value) ? [...value].pop() : value;\n\n            if (finalValue?.id === createValue || finalValue === createValue) {\n                if (!isValidElement(create)) {\n                    const newSuggestion = await onCreate(filter);\n                    if (newSuggestion) {\n                        handleChange(newSuggestion);\n                        return;\n                    }\n                } else {\n                    setRenderOnCreate(true);\n                    return;\n                }\n            }\n            handleChange(eventOrValue);\n        },\n        createElement:\n            renderOnCreate && isValidElement(create) ? (\n                <CreateSuggestionContext.Provider value={context}>\n                    {create}\n                </CreateSuggestionContext.Provider>\n            ) : null,\n    };\n};\n\nexport interface SupportCreateSuggestionOptions {\n    create?: ReactElement;\n    createValue?: string;\n    createLabel?: string;\n    createItemLabel?: string;\n    filter?: string;\n    handleChange: (value: any) => void;\n    onCreate?: OnCreateHandler;\n    optionText?: OptionText;\n}\n\nexport interface UseSupportCreateValue {\n    getCreateItem: (\n        filterValue?: string\n    ) => { id: Identifier; [key: string]: any };\n    handleChange: (eventOrValue: ChangeEvent | any) => Promise<void>;\n    createElement: ReactElement | null;\n}\n\nconst CreateSuggestionContext = createContext<CreateSuggestionContextValue>(\n    undefined\n);\n\ninterface CreateSuggestionContextValue {\n    filter?: string;\n    onCreate: (choice: any) => void;\n    onCancel: () => void;\n}\nexport const useCreateSuggestionContext = () =>\n    useContext(CreateSuggestionContext);\n\nexport type OnCreateHandler = (filter?: string) => any | Promise<any>;\n","import * as React from 'react';\nimport { RaRecord } from 'ra-core';\nimport { AutocompleteInput, AutocompleteInputProps } from './AutocompleteInput';\n\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * Note that you must also specify the `matchSuggestion` and `inputText` props\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const matchSuggestion = (filterValue, choice) => choice.first_name.match(filterValue) || choice.last_name.match(filterValue)\n * const inputText = (record) => `${record.fullName} (${record.language})`;\n *\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n *\n * <AutocompleteArrayInput source=\"gender\" choices={choices} optionText={<FullNameField />} matchSuggestion={matchSuggestion} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n */\nexport const AutocompleteArrayInput = <\n    OptionType extends RaRecord = RaRecord,\n    DisableClearable extends boolean | undefined = false,\n    SupportCreate extends boolean | undefined = false\n>({\n    defaultValue,\n    ...props\n}: AutocompleteArrayInputProps) => (\n    // @ts-ignore\n    <AutocompleteInput<OptionType, true, DisableClearable, SupportCreate>\n        {...props}\n        multiple\n        defaultValue={defaultValue ?? []}\n    />\n);\n\nexport type AutocompleteArrayInputProps<\n    OptionType extends any = RaRecord,\n    DisableClearable extends boolean | undefined = false,\n    SupportCreate extends boolean | undefined = false\n> = Omit<\n    AutocompleteInputProps<OptionType, true, DisableClearable, SupportCreate>,\n    'defaultValue'\n> & {\n    defaultValue?: any[];\n};\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormGroup, { FormGroupProps } from '@mui/material/FormGroup';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport { FieldTitle, useInput } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { InputPropTypes } from './InputPropTypes';\n\nexport const BooleanInput = (props: BooleanInputProps) => {\n    const {\n        className,\n        defaultValue = false,\n        format,\n        label,\n        fullWidth,\n        helperText,\n        onBlur,\n        onChange,\n        onFocus,\n        disabled,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest\n    } = props;\n    const {\n        id,\n        field,\n        isRequired,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n    } = useInput({\n        defaultValue,\n        format,\n        parse,\n        resource,\n        source,\n        onBlur,\n        onChange,\n        type: 'checkbox',\n        validate,\n        ...rest,\n    });\n\n    const handleChange = useCallback(\n        event => {\n            field.onChange(event);\n            // Ensure field is considered as touched\n            field.onBlur();\n        },\n        [field]\n    );\n\n    return (\n        <FormGroup\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            {...sanitizeInputRestProps(rest)}\n        >\n            <FormControlLabel\n                control={\n                    <Switch\n                        id={id}\n                        name={field.name}\n                        color=\"primary\"\n                        onChange={handleChange}\n                        onFocus={onFocus}\n                        checked={field.value}\n                        {...sanitizeInputRestProps(rest)}\n                        disabled={disabled}\n                    />\n                }\n                label={\n                    <FieldTitle\n                        label={label}\n                        source={source}\n                        resource={resource}\n                        isRequired={isRequired}\n                    />\n                }\n            />\n            <FormHelperText error={(isTouched || isSubmitted) && invalid}>\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            </FormHelperText>\n        </FormGroup>\n    );\n};\n\nBooleanInput.propTypes = {\n    ...InputPropTypes,\n    // @ts-ignore\n    options: PropTypes.shape(Switch.propTypes),\n    disabled: PropTypes.bool,\n};\n\nBooleanInput.defaultProps = {\n    options: {},\n};\n\nexport type BooleanInputProps = CommonInputProps &\n    SwitchProps &\n    Omit<FormGroupProps, 'defaultValue' | 'onChange' | 'onBlur' | 'onFocus'>;\n","import PropTypes from 'prop-types';\n\n/**\n * Common PropTypes for all react-admin inputs\n */\nexport const InputPropTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { useCallback, FunctionComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl, { FormControlProps } from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { CheckboxProps } from '@mui/material/Checkbox';\nimport {\n    FieldTitle,\n    useInput,\n    ChoicesProps,\n    warning,\n    useChoicesContext,\n} from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { CheckboxGroupInputItem } from './CheckboxGroupInputItem';\nimport { InputHelperText } from './InputHelperText';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\n\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * };\n *\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"tags\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Checkbox> components\n */\nexport const CheckboxGroupInput: FunctionComponent<CheckboxGroupInputProps> = props => {\n    const {\n        choices: choicesProp,\n        className,\n        classes: classesOverride,\n        format,\n        helperText,\n        label,\n        isLoading: isLoadingProp,\n        isFetching: isFetchingProp,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        optionText = 'name',\n        optionValue = 'id',\n        parse,\n        resource: resourceProp,\n        row = true,\n        source: sourceProp,\n        translateChoice = true,\n        validate,\n        ...rest\n    } = props;\n\n    const { allChoices, isLoading, resource, source } = useChoicesContext({\n        choices: choicesProp,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n\n    warning(\n        source === undefined,\n        `If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop`\n    );\n\n    warning(\n        allChoices === undefined,\n        `If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop`\n    );\n\n    const {\n        field: { onChange: formOnChange, onBlur: formOnBlur, value },\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n        id,\n        isRequired,\n    } = useInput({\n        format,\n        parse,\n        resource,\n        source,\n        validate,\n        onChange,\n        onBlur,\n        ...rest,\n    });\n\n    const handleCheck = useCallback(\n        (event, isChecked) => {\n            let newValue;\n\n            if (\n                allChoices.every(\n                    item => typeof get(item, optionValue) === 'number'\n                )\n            ) {\n                try {\n                    // try to convert string value to number, e.g. '123'\n                    newValue = JSON.parse(event.target.value);\n                } catch (e) {\n                    // impossible to convert value, e.g. 'abc'\n                    newValue = event.target.value;\n                }\n            } else {\n                newValue = event.target.value;\n            }\n\n            if (isChecked) {\n                formOnChange([...(value || []), ...[newValue]]);\n            } else {\n                formOnChange(value.filter(v => v != newValue)); // eslint-disable-line eqeqeq\n            }\n            formOnBlur(); // Ensure field is flagged as touched\n        },\n        [allChoices, formOnChange, formOnBlur, optionValue, value]\n    );\n\n    if (isLoading && allChoices?.length === 0) {\n        return (\n            <Labeled\n                id={id}\n                label={label}\n                source={source}\n                resource={resource}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                isRequired={isRequired}\n                {...rest}\n            >\n                <LinearProgress />\n            </Labeled>\n        );\n    }\n\n    return (\n        <StyledFormControl\n            component=\"fieldset\"\n            margin={margin}\n            error={(isTouched || isSubmitted) && invalid}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            {...sanitizeRestProps(rest)}\n        >\n            <FormLabel\n                component=\"legend\"\n                className={CheckboxGroupInputClasses.label}\n            >\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            </FormLabel>\n            <FormGroup row={row}>\n                {allChoices?.map(choice => (\n                    <CheckboxGroupInputItem\n                        key={get(choice, optionValue)}\n                        choice={choice}\n                        id={id}\n                        onChange={handleCheck}\n                        optionText={optionText}\n                        optionValue={optionValue}\n                        translateChoice={translateChoice}\n                        value={value}\n                        {...sanitizeRestProps(rest)}\n                    />\n                ))}\n            </FormGroup>\n            <FormHelperText>\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            </FormHelperText>\n        </StyledFormControl>\n    );\n};\n\nconst sanitizeRestProps = ({\n    refetch,\n    setFilter,\n    setPagination,\n    setSort,\n    loaded,\n    touched,\n    ...rest\n}: any) => sanitizeInputRestProps(rest);\n\nCheckboxGroupInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.any),\n    className: PropTypes.string,\n    source: PropTypes.string,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    row: PropTypes.bool,\n    resource: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nexport type CheckboxGroupInputProps = Omit<CommonInputProps, 'source'> &\n    ChoicesProps &\n    CheckboxProps &\n    FormControlProps & {\n        row?: boolean;\n        // Optional as this input can be used inside a ReferenceInput\n        source?: string;\n    };\n\nconst PREFIX = 'RaCheckboxGroupInput';\n\nexport const CheckboxGroupInputClasses = {\n    label: `${PREFIX}-label`,\n};\n\nconst StyledFormControl = styled(FormControl, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${CheckboxGroupInputClasses.label}`]: {\n        transform: 'translate(0, 8px) scale(0.75)',\n        transformOrigin: `top ${theme.direction === 'ltr' ? 'left' : 'right'}`,\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useChoices } from 'ra-core';\n\nexport const CheckboxGroupInputItem = props => {\n    const {\n        id,\n        choice,\n        className,\n        fullWidth,\n        onChange,\n        optionText,\n        optionValue,\n        options,\n        translateChoice,\n        value,\n        ...rest\n    } = props;\n\n    const { getChoiceText, getChoiceValue } = useChoices({\n        optionText,\n        optionValue,\n        translateChoice,\n    });\n\n    const choiceName = getChoiceText(choice);\n\n    return (\n        <StyledFormControlLabel\n            htmlFor={`${id}_${getChoiceValue(choice)}`}\n            key={getChoiceValue(choice)}\n            onChange={onChange}\n            className={className}\n            control={\n                <Checkbox\n                    id={`${id}_${getChoiceValue(choice)}`}\n                    color=\"primary\"\n                    className={CheckboxGroupInputItemClasses.checkbox}\n                    checked={\n                        value\n                            ? value.find(v => v == getChoiceValue(choice)) !== // eslint-disable-line eqeqeq\n                              undefined\n                            : false\n                    }\n                    value={String(getChoiceValue(choice))}\n                    {...options}\n                    {...rest}\n                />\n            }\n            label={choiceName}\n        />\n    );\n};\n\nconst PREFIX = 'RaCheckboxGroupInputItem';\n\nexport const CheckboxGroupInputItemClasses = {\n    checkbox: `${PREFIX}-checkbox`,\n};\n\nconst StyledFormControlLabel = styled(FormControlLabel, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`& .${CheckboxGroupInputItemClasses.checkbox}`]: {\n        height: 32,\n    },\n});\n","import * as React from 'react';\nimport { cloneElement, ReactElement, ReactNode, useCallback } from 'react';\nimport clsx from 'clsx';\nimport {\n    ChoicesProps,\n    Identifier,\n    ListContextProvider,\n    useChoicesContext,\n    useInput,\n} from 'ra-core';\nimport {\n    CommonInputProps,\n    InputHelperText,\n    SupportCreateSuggestionOptions,\n} from '.';\nimport { Datagrid, DatagridProps } from '../list/datagrid';\nimport { FilterButton, FilterForm } from '../list/filter';\nimport { FilterContext } from '../list/FilterContext';\nimport { Pagination as DefaultPagination } from '../list/pagination';\n\nconst defaultPagination = <DefaultPagination />;\n\n/**\n * WIP: This component is not yet ready to be used.\n *\n * An input for selecting items displayed in a datagrid\n *\n * @example\n * const membersFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n * ];\n * const TeamEdit = () => (\n *    <Edit>\n *        <SimpleForm>\n *            <TextInput source=\"name\" />\n *            <ReferenceArrayInput\n *                source=\"members\"\n *                reference=\"users\"\n *                filter={{ is_retired: false }}\n *                perPage={50}\n *                sort={{ field: 'lastName', order: 'ASC' }}\n *            >\n *                <DatagridInput\n *                    filters={membersFilters}\n *                >\n *                    <TextField source=\"firstName\" />\n *                    <TextField source=\"lastName\" />\n *                </DatagridInput>\n *            </ReferenceArrayInput>\n *        </SimpleForm>\n *    </Edit>\n * );\n */\nexport const DatagridInput = (props: DatagridInputProps) => {\n    const {\n        choices,\n        className,\n        pagination = defaultPagination,\n        filters,\n        source: sourceProp,\n        resource: resourceProp,\n        ...rest\n    } = props;\n\n    const {\n        allChoices,\n        availableChoices,\n        selectedChoices,\n        source,\n        ...choicesContext\n    } = useChoicesContext({\n        choices,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n    const { field, fieldState, formState } = useInput({\n        ...props,\n        ...choicesContext,\n        source,\n    });\n\n    const onSelect = useCallback(\n        (idsToAdd: Identifier[]) => {\n            field.onChange(idsToAdd);\n        },\n        [field]\n    );\n\n    const onToggleItem = useCallback(\n        (id: Identifier) => {\n            if (field.value.includes(id)) {\n                field.onChange(field.value.filter(item => item !== id));\n            } else {\n                field.onChange([...field.value, id]);\n            }\n        },\n        [field]\n    );\n\n    const onUnselectItems = useCallback(() => {\n        field.onChange([]);\n    }, [field]);\n\n    const listContext = React.useMemo(\n        () => ({\n            ...choicesContext,\n            data: availableChoices,\n            onSelect,\n            onToggleItem,\n            onUnselectItems,\n            selectedIds: field.value,\n        }),\n        [\n            availableChoices,\n            choicesContext,\n            field,\n            onSelect,\n            onToggleItem,\n            onUnselectItems,\n        ]\n    );\n    return (\n        <div className={clsx('ra-input', `ra-input-${source}`, className)}>\n            <ListContextProvider value={listContext}>\n                {filters ? (\n                    Array.isArray(filters) ? (\n                        <FilterContext.Provider value={filters}>\n                            <>\n                                <FilterForm />\n                                <FilterButton />\n                            </>\n                        </FilterContext.Provider>\n                    ) : (\n                        <>\n                            {cloneElement(filters, {\n                                context: 'form',\n                            })}\n                            {cloneElement(filters, {\n                                context: 'button',\n                            })}\n                        </>\n                    )\n                ) : null}\n                <Datagrid {...rest} />\n                {pagination !== false && pagination}\n                <InputHelperText\n                    touched={fieldState.isTouched || formState.isSubmitted}\n                    error={fieldState.error?.message}\n                />\n            </ListContextProvider>\n        </div>\n    );\n};\n\nexport type DatagridInputProps = Omit<CommonInputProps, 'source'> &\n    ChoicesProps &\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\n    DatagridProps & {\n        children?: ReactNode;\n        source?: string;\n        filters?: ReactElement | ReactElement[];\n        pagination?: ReactElement | false;\n    };\n","import DatagridBody, {\n    DatagridBodyProps,\n    PureDatagridBody,\n} from './DatagridBody';\nimport DatagridCell, { DatagridCellProps } from './DatagridCell';\nimport DatagridHeaderCell, {\n    DatagridHeaderCellClasses,\n    DatagridHeaderCellProps,\n} from './DatagridHeaderCell';\nimport DatagridLoading, { DatagridLoadingProps } from './DatagridLoading';\nimport DatagridRow, {\n    DatagridRowProps,\n    PureDatagridRow,\n    RowClickFunction,\n} from './DatagridRow';\nimport ExpandRowButton, { ExpandRowButtonProps } from './ExpandRowButton';\n\nexport * from './Datagrid';\nexport * from './DatagridHeader';\nexport * from './useDatagridStyles';\n\nexport {\n    DatagridLoading,\n    DatagridBody,\n    DatagridRow,\n    DatagridHeaderCell,\n    DatagridHeaderCellClasses,\n    DatagridCell,\n    ExpandRowButton,\n    PureDatagridBody,\n    PureDatagridRow,\n};\n\nexport type {\n    DatagridBodyProps,\n    DatagridCellProps,\n    DatagridHeaderCellProps,\n    DatagridLoadingProps,\n    DatagridRowProps,\n    ExpandRowButtonProps,\n    RowClickFunction,\n};\n","import * as React from 'react';\nimport { cloneElement, memo, FC, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableBody, TableBodyProps } from '@mui/material';\nimport clsx from 'clsx';\nimport { Identifier, RaRecord } from 'ra-core';\n\nimport { DatagridClasses } from './useDatagridStyles';\nimport DatagridRow, { PureDatagridRow, RowClickFunction } from './DatagridRow';\n\nconst DatagridBody: FC<DatagridBodyProps> = React.forwardRef(\n    (\n        {\n            children,\n            className,\n            data,\n            expand,\n            hasBulkActions,\n            hover,\n            onToggleItem,\n            resource,\n            row,\n            rowClick,\n            rowStyle,\n            selectedIds,\n            isRowSelectable,\n            ...rest\n        },\n        ref\n    ) => (\n        <TableBody\n            ref={ref}\n            className={clsx('datagrid-body', className, DatagridClasses.tbody)}\n            {...rest}\n        >\n            {data.map((record, rowIndex) =>\n                cloneElement(\n                    row,\n                    {\n                        className: clsx(DatagridClasses.row, {\n                            [DatagridClasses.rowEven]: rowIndex % 2 === 0,\n                            [DatagridClasses.rowOdd]: rowIndex % 2 !== 0,\n                        }),\n                        expand,\n                        hasBulkActions: hasBulkActions && !!selectedIds,\n                        hover,\n                        id: record.id,\n                        key: record.id ?? `row${rowIndex}`,\n                        onToggleItem,\n                        record,\n                        resource,\n                        rowClick,\n                        selectable: !isRowSelectable || isRowSelectable(record),\n                        selected: selectedIds?.includes(record.id),\n                        style: rowStyle ? rowStyle(record, rowIndex) : null,\n                    },\n                    children\n                )\n            )}\n        </TableBody>\n    )\n);\n\nDatagridBody.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    // @ts-ignore\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool.isRequired,\n    hover: PropTypes.bool,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    row: PropTypes.element,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    styles: PropTypes.object,\n    isRowSelectable: PropTypes.func,\n};\n\nDatagridBody.defaultProps = {\n    data: [],\n    hasBulkActions: false,\n    row: <DatagridRow />,\n};\n\nexport interface DatagridBodyProps extends Omit<TableBodyProps, 'classes'> {\n    className?: string;\n    data?: any[];\n    expand?:\n        | ReactElement\n        | FC<{\n              id: Identifier;\n              record: RaRecord;\n              resource: string;\n          }>;\n    hasBulkActions?: boolean;\n    hover?: boolean;\n    onToggleItem?: (\n        id: Identifier,\n        event: React.TouchEvent | React.MouseEvent\n    ) => void;\n    record?: RaRecord;\n    resource?: string;\n    row?: ReactElement;\n    rowClick?: string | RowClickFunction;\n    rowStyle?: (record: RaRecord, index: number) => any;\n    selectedIds?: Identifier[];\n    isRowSelectable?: (record: RaRecord) => boolean;\n}\n\n// trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\nDatagridBody.muiName = 'TableBody';\n\nexport const PureDatagridBody = memo(DatagridBody);\n\n// trick MUI Table into thinking this is one of the child type it supports\n// @ts-ignore\nPureDatagridBody.muiName = 'TableBody';\n// @ts-ignore\nPureDatagridBody.defaultProps = {\n    row: <PureDatagridRow />,\n};\n\nexport default DatagridBody;\n","import { styled } from '@mui/material';\n\nconst PREFIX = 'RaDatagrid';\n\nexport const DatagridClasses = {\n    table: `${PREFIX}-table`,\n    tableWrapper: `${PREFIX}-tableWrapper`,\n    thead: `${PREFIX}-thead`,\n    tbody: `${PREFIX}-tbody`,\n    headerRow: `${PREFIX}-headerRow`,\n    headerCell: `${PREFIX}-headerCell`,\n    checkbox: `${PREFIX}-checkbox`,\n    row: `${PREFIX}-row`,\n    clickableRow: `${PREFIX}-clickableRow`,\n    rowEven: `${PREFIX}-rowEven`,\n    rowOdd: `${PREFIX}-rowOdd`,\n    rowCell: `${PREFIX}-rowCell`,\n    selectable: `${PREFIX}-selectable`,\n    expandHeader: `${PREFIX}-expandHeader`,\n    expandIconCell: `${PREFIX}-expandIconCell`,\n    expandIcon: `${PREFIX}-expandIcon`,\n    expandable: `${PREFIX}-expandable`,\n    expanded: `${PREFIX}-expanded`,\n    expandedPanel: `${PREFIX}-expandedPanel`,\n};\n\nexport const DatagridRoot = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${DatagridClasses.table}`]: {\n        tableLayout: 'auto',\n    },\n    [`& .${DatagridClasses.tableWrapper}`]: {},\n    [`& .${DatagridClasses.thead}`]: {},\n    [`& .${DatagridClasses.tbody}`]: {},\n    [`& .${DatagridClasses.headerRow}`]: {},\n    [`& .${DatagridClasses.headerCell}`]: {\n        position: 'sticky',\n        top: 0,\n        zIndex: 2,\n        backgroundColor: theme.palette.background.paper,\n        '&:first-of-type': {\n            borderTopLeftRadius: theme.shape.borderRadius,\n        },\n        '&:last-child': {\n            borderTopRightRadius: theme.shape.borderRadius,\n        },\n    },\n    [`& .${DatagridClasses.checkbox}`]: {},\n    [`& .${DatagridClasses.row}`]: {},\n    [`& .${DatagridClasses.clickableRow}`]: {\n        cursor: 'pointer',\n    },\n    [`& .${DatagridClasses.rowEven}`]: {},\n    [`& .${DatagridClasses.rowOdd}`]: {},\n    [`& .${DatagridClasses.rowCell}`]: {},\n    [`& .${DatagridClasses.expandHeader}`]: {\n        padding: 0,\n        width: theme.spacing(6),\n    },\n    [`& .${DatagridClasses.expandIconCell}`]: {\n        width: theme.spacing(6),\n    },\n    [`& .${DatagridClasses.expandIcon}`]: {\n        padding: theme.spacing(1),\n        transform: 'rotate(-90deg)',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    [`& .${DatagridClasses.expandIcon}.${DatagridClasses.expanded}`]: {\n        transform: 'rotate(0deg)',\n    },\n    [`& .${DatagridClasses.expandedPanel}`]: {},\n}));\n","import React, {\n    isValidElement,\n    cloneElement,\n    createElement,\n    useState,\n    useEffect,\n    useCallback,\n    memo,\n    FC,\n    ReactElement,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { TableCell, TableRow, TableRowProps, Checkbox } from '@mui/material';\nimport {\n    Identifier,\n    RaRecord,\n    RecordContextProvider,\n    shallowEqual,\n    useExpanded,\n    useResourceContext,\n    useTranslate,\n    useCreatePath,\n    useRecordContext,\n} from 'ra-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport DatagridCell from './DatagridCell';\nimport ExpandRowButton from './ExpandRowButton';\nimport { DatagridClasses } from './useDatagridStyles';\nimport { useDatagridContext } from './useDatagridContext';\n\nconst computeNbColumns = (expand, children, hasBulkActions) =>\n    expand\n        ? 1 + // show expand button\n          (hasBulkActions ? 1 : 0) + // checkbox column\n          React.Children.toArray(children).filter(child => !!child).length // non-null children\n        : 0; // we don't need to compute columns if there is no expand panel;\n\nconst DatagridRow: FC<DatagridRowProps> = React.forwardRef((props, ref) => {\n    const {\n        children,\n        className,\n        expand,\n        hasBulkActions,\n        hover,\n        id,\n        onToggleItem,\n        record: recordOverride,\n        rowClick,\n        selected,\n        style,\n        selectable,\n        ...rest\n    } = props;\n\n    const context = useDatagridContext();\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const expandable =\n        (!context ||\n            !context.isRowExpandable ||\n            context.isRowExpandable(record)) &&\n        expand;\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    const [expanded, toggleExpanded] = useExpanded(\n        resource,\n        id,\n        context && context.expandSingle\n    );\n    const [nbColumns, setNbColumns] = useState(() =>\n        computeNbColumns(expandable, children, hasBulkActions)\n    );\n    useEffect(() => {\n        // Fields can be hidden dynamically based on permissions;\n        // The expand panel must span over the remaining columns\n        // So we must recompute the number of columns to span on\n        const newNbColumns = computeNbColumns(\n            expandable,\n            children,\n            hasBulkActions\n        );\n        if (newNbColumns !== nbColumns) {\n            setNbColumns(newNbColumns);\n        }\n    }, [expandable, nbColumns, children, hasBulkActions]);\n\n    const navigate = useNavigate();\n\n    const handleToggleExpand = useCallback(\n        event => {\n            toggleExpanded();\n            event.stopPropagation();\n        },\n        [toggleExpanded]\n    );\n    const handleToggleSelection = useCallback(\n        event => {\n            if (!selectable) return;\n            onToggleItem(id, event);\n            event.stopPropagation();\n        },\n        [id, onToggleItem, selectable]\n    );\n    const handleClick = useCallback(\n        async event => {\n            event.persist();\n            const type =\n                typeof rowClick === 'function'\n                    ? await rowClick(id, resource, record)\n                    : rowClick;\n            if (type === false || type == null) {\n                return;\n            }\n            if (['edit', 'show'].includes(type)) {\n                navigate(createPath({ resource, id, type }));\n                return;\n            }\n            if (type === 'expand') {\n                handleToggleExpand(event);\n                return;\n            }\n            if (type === 'toggleSelection') {\n                handleToggleSelection(event);\n                return;\n            }\n            navigate(type);\n        },\n        [\n            rowClick,\n            id,\n            resource,\n            record,\n            navigate,\n            createPath,\n            handleToggleExpand,\n            handleToggleSelection,\n        ]\n    );\n\n    return (\n        <RecordContextProvider value={record}>\n            <TableRow\n                ref={ref}\n                className={clsx(className, {\n                    [DatagridClasses.expandable]: expandable,\n                    [DatagridClasses.selectable]: selectable,\n                    [DatagridClasses.clickableRow]:\n                        typeof rowClick === 'function' ? true : rowClick,\n                })}\n                key={id}\n                style={style}\n                hover={hover}\n                onClick={handleClick}\n                {...rest}\n            >\n                {expand && (\n                    <TableCell\n                        padding=\"none\"\n                        className={DatagridClasses.expandIconCell}\n                    >\n                        {expandable && (\n                            <ExpandRowButton\n                                className={clsx(DatagridClasses.expandIcon, {\n                                    [DatagridClasses.expanded]: expanded,\n                                })}\n                                expanded={expanded}\n                                onClick={handleToggleExpand}\n                                expandContentId={`${id}-expand`}\n                            />\n                        )}\n                    </TableCell>\n                )}\n                {hasBulkActions && (\n                    <TableCell padding=\"checkbox\">\n                        {selectable && (\n                            <Checkbox\n                                aria-label={translate('ra.action.select_row', {\n                                    _: 'Select this row',\n                                })}\n                                color=\"primary\"\n                                className={`select-item ${DatagridClasses.checkbox}`}\n                                checked={selected}\n                                onClick={handleToggleSelection}\n                            />\n                        )}\n                    </TableCell>\n                )}\n                {React.Children.map(children, (field, index) =>\n                    isValidElement(field) ? (\n                        <DatagridCell\n                            key={`${id}-${\n                                (field.props as any).source || index\n                            }`}\n                            className={clsx(\n                                `column-${(field.props as any).source}`,\n                                DatagridClasses.rowCell\n                            )}\n                            record={record}\n                            {...{ field, resource }}\n                        />\n                    ) : null\n                )}\n            </TableRow>\n            {expandable && expanded && (\n                <TableRow\n                    key={`${id}-expand`}\n                    id={`${id}-expand`}\n                    className={DatagridClasses.expandedPanel}\n                >\n                    <TableCell colSpan={nbColumns}>\n                        {isValidElement(expand)\n                            ? cloneElement(expand, {\n                                  // @ts-ignore\n                                  record,\n                                  resource,\n                                  id: String(id),\n                              })\n                            : createElement(expand, {\n                                  record,\n                                  resource,\n                                  id: String(id),\n                              })}\n                    </TableCell>\n                </TableRow>\n            )}\n        </RecordContextProvider>\n    );\n});\n\nDatagridRow.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool.isRequired,\n    hover: PropTypes.bool,\n    id: PropTypes.any,\n    onToggleItem: PropTypes.func,\n    // @ts-ignore\n    record: PropTypes.object,\n    resource: PropTypes.string,\n    // @ts-ignore\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    selected: PropTypes.bool,\n    style: PropTypes.object,\n    selectable: PropTypes.bool,\n};\n\nDatagridRow.defaultProps = {\n    hasBulkActions: false,\n    hover: true,\n    selected: false,\n    selectable: true,\n};\n\nexport interface DatagridRowProps\n    extends Omit<TableRowProps, 'id' | 'classes'> {\n    className?: string;\n    expand?:\n        | ReactElement\n        | FC<{\n              id: Identifier;\n              record: RaRecord;\n              resource: string;\n          }>;\n    hasBulkActions?: boolean;\n    hover?: boolean;\n    id?: Identifier;\n    onToggleItem?: (\n        id: Identifier,\n        event: React.TouchEvent | React.MouseEvent\n    ) => void;\n    record?: RaRecord;\n    resource?: string;\n    rowClick?: RowClickFunction | string | false;\n    selected?: boolean;\n    style?: any;\n    selectable?: boolean;\n}\n\nexport type RowClickFunction = (\n    id: Identifier,\n    resource: string,\n    record: RaRecord\n) => string | Promise<string>;\n\nconst areEqual = (prevProps, nextProps) => {\n    const { children: _1, expand: _2, ...prevPropsWithoutChildren } = prevProps;\n    const { children: _3, expand: _4, ...nextPropsWithoutChildren } = nextProps;\n    return shallowEqual(prevPropsWithoutChildren, nextPropsWithoutChildren);\n};\n\nexport const PureDatagridRow = memo(DatagridRow, areEqual);\n\nPureDatagridRow.displayName = 'PureDatagridRow';\n\nexport default DatagridRow;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell, { TableCellProps } from '@mui/material/TableCell';\nimport clsx from 'clsx';\nimport { RaRecord } from 'ra-core';\n\nconst DatagridCell = React.forwardRef<HTMLTableCellElement, DatagridCellProps>(\n    ({ className, field, record, resource, ...rest }, ref) => (\n        <TableCell\n            className={clsx(className, field.props.cellClassName)}\n            align={field.props.textAlign}\n            ref={ref}\n            {...rest}\n        >\n            {field}\n        </TableCell>\n    )\n);\n\nDatagridCell.propTypes = {\n    className: PropTypes.string,\n    field: PropTypes.element,\n    // @ts-ignore\n    record: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    resource: PropTypes.string,\n};\n\nexport interface DatagridCellProps extends TableCellProps {\n    className?: string;\n    field?: JSX.Element;\n    record?: RaRecord;\n    resource?: string;\n}\n\n// What? TypeScript loses the displayName if we don't set it explicitly\nDatagridCell.displayName = 'DatagridCell';\n\nexport default DatagridCell;\n","import * as React from 'react';\nimport { ElementType, memo } from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { useTranslate } from 'ra-core';\n\nconst ExpandRowButton = ({\n    expanded,\n    expandContentId,\n    ...props\n}: ExpandRowButtonProps) => {\n    const translate = useTranslate();\n    return (\n        <IconButton\n            aria-label={translate(\n                expanded ? 'ra.action.close' : 'ra.action.expand'\n            )}\n            aria-expanded={expanded}\n            aria-controls={expandContentId}\n            tabIndex={-1}\n            aria-hidden=\"true\"\n            component=\"div\"\n            {...props}\n            size=\"small\"\n        >\n            <ExpandMoreIcon fontSize=\"inherit\" />\n        </IconButton>\n    );\n};\n\nexport interface ExpandRowButtonProps extends IconButtonProps {\n    component?: ElementType;\n    expanded: boolean;\n    expandContentId?: string;\n}\n\nexport default memo(ExpandRowButton);\n","import { useContext, useMemo } from 'react';\nimport { DatagridProps } from './Datagrid';\nimport DatagridContext, { DatagridContextValue } from './DatagridContext';\nimport defaults from 'lodash/defaults';\n\nexport const useDatagridContext = (\n    props?: DatagridProps\n): DatagridContextValue => {\n    const context = useContext(DatagridContext);\n\n    return useMemo(\n        () =>\n            defaults(\n                {},\n                props != null ? { isRowExpandable: props.isRowExpandable } : {},\n                context\n            ),\n        [context, props]\n    );\n};\n","import { createContext } from 'react';\nimport { RaRecord } from 'ra-core';\n\nconst DatagridContext = createContext<DatagridContextValue>({});\n\nDatagridContext.displayName = 'DatagridContext';\n\nexport type DatagridContextValue = {\n    isRowExpandable?: (record: RaRecord) => boolean;\n    expandSingle?: boolean;\n};\n\nexport default DatagridContext;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { TableCell, TableSortLabel, Tooltip } from '@mui/material';\nimport { TableCellProps } from '@mui/material/TableCell';\nimport {\n    FieldTitle,\n    useTranslate,\n    SortPayload,\n    useResourceContext,\n} from 'ra-core';\n\nexport const DatagridHeaderCell = (\n    props: DatagridHeaderCellProps\n): JSX.Element => {\n    const { className, field, sort, updateSort, isSorting, ...rest } = props;\n    const resource = useResourceContext(props);\n\n    const translate = useTranslate();\n\n    return (\n        <StyledTableCell\n            className={clsx(className, field.props.headerClassName)}\n            align={field.props.textAlign}\n            variant=\"head\"\n            {...rest}\n        >\n            {updateSort &&\n            field.props.sortable !== false &&\n            (field.props.sortBy || field.props.source) ? (\n                <Tooltip\n                    title={translate('ra.action.sort')}\n                    placement={\n                        field.props.textAlign === 'right'\n                            ? 'bottom-end'\n                            : 'bottom-start'\n                    }\n                    enterDelay={300}\n                >\n                    <TableSortLabel\n                        active={\n                            sort.field ===\n                            (field.props.sortBy || field.props.source)\n                        }\n                        direction={sort.order === 'ASC' ? 'asc' : 'desc'}\n                        data-field={field.props.sortBy || field.props.source}\n                        data-order={field.props.sortByOrder || 'ASC'}\n                        onClick={updateSort}\n                        classes={DatagridHeaderCellClasses}\n                    >\n                        <FieldTitle\n                            label={field.props.label}\n                            source={field.props.source}\n                            resource={resource}\n                        />\n                    </TableSortLabel>\n                </Tooltip>\n            ) : (\n                <FieldTitle\n                    label={field.props.label}\n                    source={field.props.source}\n                    resource={resource}\n                />\n            )}\n        </StyledTableCell>\n    );\n};\n\nDatagridHeaderCell.propTypes = {\n    className: PropTypes.string,\n    field: PropTypes.element,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }).isRequired,\n    isSorting: PropTypes.bool,\n    resource: PropTypes.string,\n    updateSort: PropTypes.func,\n};\n\nexport interface DatagridHeaderCellProps\n    extends Omit<TableCellProps, 'classes'> {\n    className?: string;\n    field?: JSX.Element;\n    isSorting?: boolean;\n    resource: string;\n    sort: SortPayload;\n    updateSort?: (event: any) => void;\n}\n\nexport default memo(\n    DatagridHeaderCell,\n    (props, nextProps) =>\n        props.updateSort === nextProps.updateSort &&\n        props.sort.field === nextProps.sort.field &&\n        props.sort.order === nextProps.sort.order &&\n        props.isSorting === nextProps.isSorting &&\n        props.resource === nextProps.resource\n);\n\nconst PREFIX = 'RaDatagridHeaderCell';\n\nexport const DatagridHeaderCellClasses = {\n    icon: `${PREFIX}-icon`,\n};\n\n// Remove the sort icons when not active\nconst StyledTableCell = styled(TableCell, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .MuiTableSortLabel-icon`]: {\n        display: 'none',\n    },\n    [`& .Mui-active .MuiTableSortLabel-icon`]: {\n        display: 'inline',\n    },\n}));\n","import * as React from 'react';\nimport { ReactElement, FC, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Table,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableBody,\n    IconButton,\n    Checkbox,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport clsx from 'clsx';\nimport { useTimeout, Identifier, RaRecord } from 'ra-core';\n\nimport { DatagridClasses } from './useDatagridStyles';\nimport { Placeholder } from '../Placeholder';\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst DatagridLoading = ({\n    className,\n    expand,\n    hasBulkActions,\n    nbChildren,\n    nbFakeLines = 5,\n    size,\n}: DatagridLoadingProps): JSX.Element => {\n    const oneSecondHasPassed = useTimeout(1000);\n\n    return oneSecondHasPassed ? (\n        <Table className={clsx(DatagridClasses.table, className)} size={size}>\n            <TableHead>\n                <TableRow className={DatagridClasses.row}>\n                    {expand && (\n                        <TableCell\n                            padding=\"none\"\n                            className={DatagridClasses.expandHeader}\n                        />\n                    )}\n                    {hasBulkActions && (\n                        <TableCell\n                            padding=\"checkbox\"\n                            className={DatagridClasses.expandIconCell}\n                        >\n                            <Checkbox\n                                className=\"select-all\"\n                                color=\"primary\"\n                                checked={false}\n                            />\n                        </TableCell>\n                    )}\n                    {times(nbChildren, key => (\n                        <TableCell\n                            variant=\"head\"\n                            className={DatagridClasses.headerCell}\n                            key={key}\n                        >\n                            <Placeholder />\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {times(nbFakeLines, key1 => (\n                    <TableRow key={key1} style={{ opacity: 1 / (key1 + 1) }}>\n                        {expand && (\n                            <TableCell\n                                padding=\"none\"\n                                className={DatagridClasses.expandIconCell}\n                            >\n                                <IconButton\n                                    className={DatagridClasses.expandIcon}\n                                    component=\"div\"\n                                    aria-hidden=\"true\"\n                                    size=\"large\"\n                                >\n                                    <ExpandMoreIcon />\n                                </IconButton>\n                            </TableCell>\n                        )}\n                        {hasBulkActions && (\n                            <TableCell\n                                padding=\"checkbox\"\n                                className={DatagridClasses.expandIconCell}\n                            >\n                                <Checkbox\n                                    className=\"select-all\"\n                                    color=\"primary\"\n                                    checked={false}\n                                />\n                            </TableCell>\n                        )}\n                        {times(nbChildren, key2 => (\n                            <TableCell\n                                className={DatagridClasses.rowCell}\n                                key={key2}\n                            >\n                                <Placeholder />\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    ) : null;\n};\n\nDatagridLoading.propTypes = {\n    className: PropTypes.string,\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool,\n    nbChildren: PropTypes.number,\n    nbFakeLines: PropTypes.number,\n    size: PropTypes.oneOf(['small', 'medium']),\n};\n\nexport interface DatagridLoadingProps {\n    className?: string;\n    expand?:\n        | ReactElement\n        | FC<{\n              id: Identifier;\n              record: RaRecord;\n              resource: string;\n          }>;\n    hasBulkActions?: boolean;\n    nbChildren: number;\n    nbFakeLines?: number;\n    size?: 'small' | 'medium';\n}\n\nexport default memo(DatagridLoading);\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\n\ninterface PlaceholderProps {\n    className?: string;\n}\n\nexport const Placeholder = (props: PlaceholderProps) => (\n    <Root className={props.className}>&nbsp;</Root>\n);\n\nconst PREFIX = 'RaPlaceholder';\n\nconst Root = styled('span', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    backgroundColor: theme.palette.grey[300],\n    display: 'flex',\n}));\n","import * as React from 'react';\nimport {\n    cloneElement,\n    createElement,\n    isValidElement,\n    useCallback,\n    useRef,\n    useEffect,\n    FC,\n    ComponentType,\n    ReactElement,\n    useMemo,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    sanitizeListRestProps,\n    useListContext,\n    Identifier,\n    RaRecord,\n    SortPayload,\n} from 'ra-core';\nimport { Table, TableProps } from '@mui/material';\nimport clsx from 'clsx';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\n\nimport { DatagridHeader } from './DatagridHeader';\nimport DatagridLoading from './DatagridLoading';\nimport DatagridBody, { PureDatagridBody } from './DatagridBody';\nimport { RowClickFunction } from './DatagridRow';\nimport DatagridContextProvider from './DatagridContextProvider';\nimport { DatagridClasses, DatagridRoot } from './useDatagridStyles';\nimport { BulkActionsToolbar } from '../BulkActionsToolbar';\nimport { BulkDeleteButton } from '../../button';\n\nconst defaultBulkActionButtons = <BulkDeleteButton />;\n\n/**\n * The Datagrid component renders a list of records as a table.\n * It is usually used as a child of the <List> and <ReferenceManyField> components.\n *\n * Props:\n *  - body\n *  - bulkActionButtons\n *  - children\n *  - empty\n *  - expand\n *  - header\n *  - hover\n *  - isRowExpandable\n *  - isRowSelectable\n *  - optimized\n *  - rowStyle\n *  - rowClick\n *  - size\n *  - sx\n *\n * @example // Display all posts as a datagrid\n * const postRowStyle = (record, index) => ({\n *     backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\n * });\n * export const PostList = (props) => (\n *     <List {...props}>\n *         <Datagrid rowStyle={postRowStyle}>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <TextField source=\"body\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n *\n * @example // Display all the comments of the current post as a datagrid\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"body\" />\n *         <DateField source=\"created_at\" />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceManyField>\n *\n * @example // Usage outside of a <List> or a <ReferenceManyField>.\n *\n * const sort = { field: 'published_at', order: 'DESC' };\n *\n * export const MyCustomList = (props) => {\n *     const { data, total, isLoading } = useGetList(\n *         'posts',\n *         { pagination: { page: 1, perPage: 10 }, sort: sort }\n *     );\n *\n *     return (\n *         <Datagrid\n *             data={data}\n *             total={total}\n *             isLoading={isLoading}\n *             sort={sort}\n *             selectedIds={[]}\n *             setSort={() => {\n *                 console.log('set sort');\n *             }}\n *             onSelect={() => {\n *                 console.log('on select');\n *             }}\n *             onToggleItem={() => {\n *                 console.log('on toggle item');\n *             }}\n *         >\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *         </Datagrid>\n *     );\n * }\n */\nexport const Datagrid: FC<DatagridProps> = React.forwardRef((props, ref) => {\n    const {\n        optimized = false,\n        body = optimized ? PureDatagridBody : DatagridBody,\n        header = DatagridHeader,\n        children,\n        className,\n        empty,\n        expand,\n        bulkActionButtons = defaultBulkActionButtons,\n        hover,\n        isRowSelectable,\n        isRowExpandable,\n        resource,\n        rowClick,\n        rowStyle,\n        size = 'small',\n        sx,\n        expandSingle = false,\n        ...rest\n    } = props;\n\n    const {\n        sort,\n        data,\n        isLoading,\n        onSelect,\n        onToggleItem,\n        selectedIds,\n        setSort,\n        total,\n    } = useListContext(props);\n\n    const hasBulkActions = !!bulkActionButtons !== false;\n\n    const contextValue = useMemo(() => ({ isRowExpandable, expandSingle }), [\n        isRowExpandable,\n        expandSingle,\n    ]);\n\n    const lastSelected = useRef(null);\n\n    useEffect(() => {\n        if (!selectedIds || selectedIds.length === 0) {\n            lastSelected.current = null;\n        }\n    }, [JSON.stringify(selectedIds)]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // we manage row selection at the datagrid level to allow shift+click to select an array of rows\n    const handleToggleItem = useCallback(\n        (id, event) => {\n            const ids = data.map(record => record.id);\n            const lastSelectedIndex = ids.indexOf(lastSelected.current);\n            lastSelected.current = event.target.checked ? id : null;\n\n            if (event.shiftKey && lastSelectedIndex !== -1) {\n                const index = ids.indexOf(id);\n                const idsBetweenSelections = ids.slice(\n                    Math.min(lastSelectedIndex, index),\n                    Math.max(lastSelectedIndex, index) + 1\n                );\n\n                const newSelectedIds = event.target.checked\n                    ? union(selectedIds, idsBetweenSelections)\n                    : difference(selectedIds, idsBetweenSelections);\n\n                onSelect(\n                    isRowSelectable\n                        ? newSelectedIds.filter((id: Identifier) =>\n                              isRowSelectable(\n                                  data.find(record => record.id === id)\n                              )\n                          )\n                        : newSelectedIds\n                );\n            } else {\n                onToggleItem(id);\n            }\n        },\n        [data, isRowSelectable, onSelect, onToggleItem, selectedIds]\n    );\n\n    if (isLoading === true) {\n        return (\n            <DatagridLoading\n                className={className}\n                expand={expand}\n                hasBulkActions={hasBulkActions}\n                nbChildren={React.Children.count(children)}\n                size={size}\n            />\n        );\n    }\n\n    /**\n     * Once loaded, the data for the list may be empty. Instead of\n     * displaying the table header with zero data rows,\n     * the datagrid displays nothing or a custom empty component.\n     */\n    if (data.length === 0 || total === 0) {\n        if (empty) {\n            return empty;\n        }\n\n        return null;\n    }\n\n    /**\n     * After the initial load, if the data for the list isn't empty,\n     * and even if the data is refreshing (e.g. after a filter change),\n     * the datagrid displays the current data.\n     */\n    return (\n        <DatagridContextProvider value={contextValue}>\n            <DatagridRoot sx={sx}>\n                {bulkActionButtons !== false ? (\n                    <BulkActionsToolbar selectedIds={selectedIds}>\n                        {isValidElement(bulkActionButtons)\n                            ? bulkActionButtons\n                            : defaultBulkActionButtons}\n                    </BulkActionsToolbar>\n                ) : null}\n                <div className={DatagridClasses.tableWrapper}>\n                    <Table\n                        ref={ref}\n                        className={clsx(DatagridClasses.table, className)}\n                        size={size}\n                        {...sanitizeRestProps(rest)}\n                    >\n                        {createOrCloneElement(\n                            header,\n                            {\n                                children,\n                                sort,\n                                data,\n                                hasExpand: !!expand,\n                                hasBulkActions,\n                                isRowSelectable,\n                                onSelect,\n                                resource,\n                                selectedIds,\n                                setSort,\n                            },\n                            children\n                        )}\n                        {createOrCloneElement(\n                            body,\n                            {\n                                expand,\n                                rowClick,\n                                data,\n                                hasBulkActions,\n                                hover,\n                                onToggleItem: handleToggleItem,\n                                resource,\n                                rowStyle,\n                                selectedIds,\n                                isRowSelectable,\n                            },\n                            children\n                        )}\n                    </Table>\n                </div>\n            </DatagridRoot>\n        </DatagridContextProvider>\n    );\n});\n\nconst createOrCloneElement = (element, props, children) =>\n    isValidElement(element)\n        ? cloneElement(element, props, children)\n        : createElement(element, props, children);\n\nDatagrid.propTypes = {\n    // @ts-ignore\n    body: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    // @ts-ignore-line\n    bulkActionButtons: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    data: PropTypes.arrayOf(PropTypes.any),\n    empty: PropTypes.element,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    // @ts-ignore\n    header: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hover: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    setSort: PropTypes.func,\n    total: PropTypes.number,\n    isRowSelectable: PropTypes.func,\n    isRowExpandable: PropTypes.func,\n    expandSingle: PropTypes.bool,\n};\n\nexport interface DatagridProps<RecordType extends RaRecord = any>\n    extends Omit<TableProps, 'size' | 'classes' | 'onSelect'> {\n    body?: ReactElement | ComponentType;\n    className?: string;\n    bulkActionButtons?: ReactElement | false;\n    expand?:\n        | ReactElement\n        | FC<{\n              id: Identifier;\n              record: RecordType;\n              resource: string;\n          }>;\n    header?: ReactElement | ComponentType;\n    hover?: boolean;\n    empty?: ReactElement;\n    isRowSelectable?: (record: RecordType) => boolean;\n    isRowExpandable?: (record: RecordType) => boolean;\n    optimized?: boolean;\n    rowClick?: string | RowClickFunction;\n    rowStyle?: (record: RecordType, index: number) => any;\n    size?: 'medium' | 'small';\n    // can be injected when using the component without context\n    sort?: SortPayload;\n    data?: RecordType[];\n    isLoading?: boolean;\n    onSelect?: (ids: Identifier[]) => void;\n    onToggleItem?: (id: Identifier) => void;\n    setSort?: (sort: SortPayload) => void;\n    selectedIds?: Identifier[];\n    expandSingle?: boolean;\n    total?: number;\n}\n\nconst injectedProps = [\n    'isRequired',\n    'setFilter',\n    'setPagination',\n    'limitChoicesToValue',\n    'translateChoice',\n    // Datagrid may be used as an alternative to SelectInput\n    'field',\n    'fieldState',\n    'formState',\n];\n\nconst sanitizeRestProps = props =>\n    Object.keys(sanitizeListRestProps(props))\n        .filter(propName => !injectedProps.includes(propName))\n        .reduce((acc, key) => ({ ...acc, [key]: props[key] }), {});\n\nDatagrid.displayName = 'Datagrid';\n","import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    useListContext,\n    useResourceContext,\n    Identifier,\n    RaRecord,\n    SortPayload,\n    useTranslate,\n} from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\nimport clsx from 'clsx';\n\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport { DatagridClasses } from './useDatagridStyles';\n\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\nexport const DatagridHeader = (props: DatagridHeaderProps) => {\n    const {\n        children,\n        className,\n        hasExpand = false,\n        hasBulkActions = false,\n        isRowSelectable,\n    } = props;\n    const resource = useResourceContext(props);\n    const translate = useTranslate();\n    const { sort, data, onSelect, selectedIds, setSort } = useListContext(\n        props\n    );\n\n    const updateSortCallback = useCallback(\n        event => {\n            event.stopPropagation();\n            const newField = event.currentTarget.dataset.field;\n            const newOrder =\n                sort.field === newField\n                    ? sort.order === 'ASC'\n                        ? 'DESC'\n                        : 'ASC'\n                    : event.currentTarget.dataset.order;\n\n            setSort({ field: newField, order: newOrder });\n        },\n        [sort.field, sort.order, setSort]\n    );\n\n    const updateSort = setSort ? updateSortCallback : null;\n\n    const handleSelectAll = useCallback(\n        event =>\n            onSelect(\n                event.target.checked\n                    ? selectedIds.concat(\n                          data\n                              .filter(\n                                  record => !selectedIds.includes(record.id)\n                              )\n                              .filter(record =>\n                                  isRowSelectable\n                                      ? isRowSelectable(record)\n                                      : true\n                              )\n                              .map(record => record.id)\n                      )\n                    : []\n            ),\n        [data, onSelect, isRowSelectable, selectedIds]\n    );\n\n    const selectableIds = Array.isArray(data)\n        ? isRowSelectable\n            ? data\n                  .filter(record => isRowSelectable(record))\n                  .map(record => record.id)\n            : data.map(record => record.id)\n        : [];\n\n    return (\n        <TableHead className={clsx(className, DatagridClasses.thead)}>\n            <TableRow\n                className={clsx(DatagridClasses.row, DatagridClasses.headerRow)}\n            >\n                {hasExpand && (\n                    <TableCell\n                        padding=\"none\"\n                        className={clsx(\n                            DatagridClasses.headerCell,\n                            DatagridClasses.expandHeader\n                        )}\n                    />\n                )}\n                {hasBulkActions && selectedIds && (\n                    <TableCell\n                        padding=\"checkbox\"\n                        className={DatagridClasses.headerCell}\n                    >\n                        <Checkbox\n                            aria-label={translate('ra.action.select_all', {\n                                _: 'Select all',\n                            })}\n                            className=\"select-all\"\n                            color=\"primary\"\n                            checked={\n                                selectedIds.length > 0 &&\n                                selectableIds.length > 0 &&\n                                selectableIds.every(id =>\n                                    selectedIds.includes(id)\n                                )\n                            }\n                            onChange={handleSelectAll}\n                        />\n                    </TableCell>\n                )}\n                {Children.map(children, (field, index) =>\n                    isValidElement(field) ? (\n                        <DatagridHeaderCell\n                            className={clsx(\n                                DatagridClasses.headerCell,\n                                `column-${(field.props as any).source}`\n                            )}\n                            sort={sort}\n                            field={field}\n                            isSorting={\n                                sort.field ===\n                                ((field.props as any).sortBy ||\n                                    (field.props as any).source)\n                            }\n                            key={(field.props as any).source || index}\n                            resource={resource}\n                            updateSort={updateSort}\n                        />\n                    ) : null\n                )}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nDatagridHeader.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    data: PropTypes.arrayOf(PropTypes.any),\n    hasExpand: PropTypes.bool,\n    hasBulkActions: PropTypes.bool,\n    isRowSelectable: PropTypes.func,\n    isRowExpandable: PropTypes.func,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    setSort: PropTypes.func,\n};\n\nexport interface DatagridHeaderProps<RecordType extends RaRecord = any> {\n    children?: React.ReactNode;\n    className?: string;\n    hasExpand?: boolean;\n    hasBulkActions?: boolean;\n    isRowSelectable?: (record: RecordType) => boolean;\n    isRowExpandable?: (record: RecordType) => boolean;\n    size?: 'medium' | 'small';\n    // can be injected when using the component without context\n    sort?: SortPayload;\n    data?: RecordType[];\n    onSelect?: (ids: Identifier[]) => void;\n    onToggleItem?: (id: Identifier) => void;\n    resource?: string;\n    selectedIds?: Identifier[];\n    setSort?: (sort: SortPayload) => void;\n}\n\nDatagridHeader.displayName = 'DatagridHeader';\n","import React, { ReactElement, ReactNode } from 'react';\nimport DatagridContext, { DatagridContextValue } from './DatagridContext';\n\nconst DatagridContextProvider = ({\n    children,\n    value,\n}: {\n    children: ReactNode;\n    value: DatagridContextValue;\n}): ReactElement => (\n    <DatagridContext.Provider value={value}>\n        {children}\n    </DatagridContext.Provider>\n);\n\nexport default DatagridContextProvider;\n","import * as React from 'react';\nimport {\n    Children,\n    ReactNode,\n    cloneElement,\n    isValidElement,\n    useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { lighten } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n    useTranslate,\n    sanitizeListRestProps,\n    useListContext,\n    Identifier,\n} from 'ra-core';\n\nimport TopToolbar from '../layout/TopToolbar';\n\nexport const BulkActionsToolbar = (props: BulkActionsToolbarProps) => {\n    const {\n        label = 'ra.action.bulk_actions',\n        children,\n        className,\n        ...rest\n    } = props;\n    const {\n        filterValues,\n        resource,\n        selectedIds = [],\n        onUnselectItems,\n    } = useListContext(props);\n\n    const translate = useTranslate();\n\n    const handleUnselectAllClick = useCallback(() => {\n        onUnselectItems();\n    }, [onUnselectItems]);\n\n    return (\n        <Root className={className}>\n            <Toolbar\n                data-test=\"bulk-actions-toolbar\"\n                className={clsx(BulkActionsToolbarClasses.toolbar, {\n                    [BulkActionsToolbarClasses.collapsed]:\n                        selectedIds.length === 0,\n                })}\n                {...sanitizeListRestProps(rest)}\n            >\n                <div className={BulkActionsToolbarClasses.title}>\n                    <IconButton\n                        className={BulkActionsToolbarClasses.icon}\n                        aria-label={translate('ra.action.unselect')}\n                        title={translate('ra.action.unselect')}\n                        onClick={handleUnselectAllClick}\n                        size=\"small\"\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        {translate(label, {\n                            _: label,\n                            smart_count: selectedIds.length,\n                        })}\n                    </Typography>\n                </div>\n                <TopToolbar className={BulkActionsToolbarClasses.topToolbar}>\n                    {Children.map(children, child =>\n                        isValidElement(child)\n                            ? cloneElement(child, {\n                                  filterValues,\n                                  resource,\n                                  selectedIds,\n                              })\n                            : null\n                    )}\n                </TopToolbar>\n            </Toolbar>\n        </Root>\n    );\n};\n\nBulkActionsToolbar.propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string,\n};\n\nexport interface BulkActionsToolbarProps {\n    children?: ReactNode;\n    label?: string;\n    selectedIds?: Identifier[];\n    className?: string;\n}\n\nconst PREFIX = 'RaBulkActionsToolbar';\n\nexport const BulkActionsToolbarClasses = {\n    toolbar: `${PREFIX}-toolbar`,\n    topToolbar: `${PREFIX}-topToolbar`,\n    buttons: `${PREFIX}-buttons`,\n    collapsed: `${PREFIX}-collapsed`,\n    title: `${PREFIX}-title`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    position: 'relative',\n    [`& .${BulkActionsToolbarClasses.toolbar}`]: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        zIndex: 3,\n        color:\n            theme.palette.mode === 'light'\n                ? theme.palette.primary.main\n                : theme.palette.text.primary,\n        justifyContent: 'space-between',\n        backgroundColor:\n            theme.palette.mode === 'light'\n                ? lighten(theme.palette.primary.light, 0.8)\n                : theme.palette.primary.dark,\n        minHeight: theme.spacing(6),\n        height: theme.spacing(6),\n        transform: `translateY(-${theme.spacing(6)})`,\n        transition: `${theme.transitions.create(\n            'height'\n        )}, ${theme.transitions.create(\n            'min-height'\n        )}, ${theme.transitions.create('transform')}`,\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n    },\n\n    [`& .${BulkActionsToolbarClasses.topToolbar}`]: {\n        paddingBottom: 0,\n        minHeight: 'auto',\n    },\n\n    [`& .${BulkActionsToolbarClasses.buttons}`]: {},\n\n    [`& .${BulkActionsToolbarClasses.collapsed}`]: {\n        minHeight: 0,\n        height: 0,\n        transform: `translateY(0)`,\n        overflowY: 'hidden',\n    },\n\n    [`& .${BulkActionsToolbarClasses.title}`]: {\n        display: 'flex',\n        flex: '0 0 auto',\n    },\n\n    [`& .${BulkActionsToolbarClasses.icon}`]: {\n        marginLeft: '-0.5em',\n        marginRight: '0.5em',\n    },\n}));\n","import * as React from 'react';\nimport { Children, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterForm } from './FilterForm';\nimport { FilterButton } from './FilterButton';\nimport { FilterContext } from '../FilterContext';\n\n/**\n * Filter button/form combo\n *\n * @example\n *\n * const PostFilter = (props) => (\n *     <Filter {...props}>\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n *     </Filter>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} filters={<PostFilter />}>\n *         ...\n *     </List>\n * );\n *\n */\nexport const Filter = (props: FilterProps) => {\n    const { children } = props;\n    const renderButton = () => {\n        return <FilterButton className={FilterClasses.button} />;\n    };\n\n    const renderForm = () => {\n        return <FilterForm className={FilterClasses.form} />;\n    };\n\n    return (\n        <FilterContext.Provider value={Children.toArray(children)}>\n            {props.context === 'button' ? renderButton() : renderForm()}\n        </FilterContext.Provider>\n    );\n};\n\nFilter.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    context: PropTypes.oneOf(['form', 'button']),\n};\n\nconst PREFIX = 'RaFilter';\n\nexport const FilterClasses = {\n    button: `${PREFIX}-button`,\n    form: `${PREFIX}-form`,\n};\n\nexport interface FilterProps {\n    children: ReactNode;\n    context?: 'form' | 'button';\n    variant?: string;\n}\n","import * as React from 'react';\nimport {\n    HtmlHTMLAttributes,\n    ReactNode,\n    useEffect,\n    useCallback,\n    useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport {\n    ListFilterContextValue,\n    useListContext,\n    useResourceContext,\n} from 'ra-core';\nimport {\n    FieldValues,\n    FormProvider,\n    useForm,\n    useFormContext,\n} from 'react-hook-form';\nimport lodashSet from 'lodash/set';\nimport lodashUnset from 'lodash/unset';\nimport lodashGet from 'lodash/get';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { FilterFormInput } from './FilterFormInput';\nimport { FilterContext } from '../FilterContext';\n\nexport const FilterForm = (props: FilterFormProps) => {\n    const { defaultValues, filters: filtersProps, ...rest } = props;\n\n    const { setFilters, displayedFilters, filterValues } = useListContext(\n        props\n    );\n    const filters = useContext(FilterContext) || filtersProps;\n\n    const mergedInitialValuesWithDefaultValues = mergeInitialValuesWithDefaultValues(\n        defaultValues || filterValues,\n        filters\n    );\n\n    const form = useForm({\n        defaultValues: mergedInitialValuesWithDefaultValues,\n    });\n\n    // Reapply filterValues when the URL changes or a user removes a filter\n    useEffect(() => {\n        const newValues = getFilterFormValues(form.getValues(), filterValues);\n        form.reset(newValues);\n    }, [filterValues, form]);\n\n    useEffect(() => {\n        const subscription = form.watch(async (values, { name, type }) => {\n            // We must check whether the form is valid as watch will not check that for us.\n            // We can't rely on form state as it might not be synchronized yet\n            const isFormValid = await form.trigger();\n\n            if (isFormValid) {\n                if (lodashGet(values, name) === '') {\n                    const newValues = cloneDeep(values);\n                    lodashUnset(newValues, name);\n                    setFilters(newValues, displayedFilters);\n                } else {\n                    setFilters(values, displayedFilters);\n                }\n            }\n        });\n        return () => subscription.unsubscribe();\n    }, [displayedFilters, form, setFilters]);\n\n    return (\n        <FormProvider {...form}>\n            <FilterFormBase\n                onSubmit={handleFormSubmit}\n                filters={filters}\n                {...rest}\n            />\n        </FormProvider>\n    );\n};\n\nexport type FilterFormProps = FilterFormBaseProps & {\n    defaultValues?: FieldValues;\n};\n\nexport const FilterFormBase = (props: FilterFormBaseProps) => {\n    const { className, filters, ...rest } = props;\n    const resource = useResourceContext(props);\n    const form = useFormContext();\n    const { displayedFilters = {}, hideFilter } = useListContext(props);\n\n    useEffect(() => {\n        filters.forEach((filter: JSX.Element) => {\n            if (filter.props.alwaysOn && filter.props.defaultValue) {\n                throw new Error(\n                    'Cannot use alwaysOn and defaultValue on a filter input. Please set the filterDefaultValues props on the <List> element instead.'\n                );\n            }\n        });\n    }, [filters]);\n\n    const getShownFilters = () => {\n        const values = form.getValues();\n        return filters.filter((filterElement: JSX.Element) => {\n            const filterValue = lodashGet(values, filterElement.props.source);\n            return (\n                filterElement.props.alwaysOn ||\n                displayedFilters[filterElement.props.source] ||\n                (filterValue !== '' && typeof filterValue !== 'undefined')\n            );\n        });\n    };\n\n    const handleHide = useCallback(\n        event => hideFilter(event.currentTarget.dataset.key),\n        [hideFilter]\n    );\n\n    return (\n        <StyledForm\n            className={className}\n            {...sanitizeRestProps(rest)}\n            onSubmit={handleSubmit}\n        >\n            {getShownFilters().map((filterElement: JSX.Element) => (\n                <FilterFormInput\n                    key={filterElement.props.source}\n                    filterElement={filterElement}\n                    handleHide={handleHide}\n                    resource={resource}\n                />\n            ))}\n            <div className={FilterFormClasses.clearFix} />\n        </StyledForm>\n    );\n};\n\nconst handleSubmit = event => {\n    event.preventDefault();\n    return false;\n};\n\nFilterFormBase.propTypes = {\n    resource: PropTypes.string,\n    filters: PropTypes.arrayOf(PropTypes.node).isRequired,\n    displayedFilters: PropTypes.object,\n    hideFilter: PropTypes.func,\n    initialValues: PropTypes.object,\n    className: PropTypes.string,\n};\n\nconst sanitizeRestProps = ({\n    displayedFilters,\n    filterValues,\n    hasCreate,\n    hideFilter,\n    setFilters,\n    resource,\n    ...props\n}: Partial<FilterFormBaseProps> & { hasCreate?: boolean }) => props;\n\nexport type FilterFormBaseProps = Omit<\n    HtmlHTMLAttributes<HTMLFormElement>,\n    'children'\n> &\n    Partial<ListFilterContextValue> & {\n        className?: string;\n        resource?: string;\n        filters?: ReactNode[];\n    };\n\nexport const mergeInitialValuesWithDefaultValues = (\n    initialValues,\n    filters\n) => ({\n    ...filters\n        .filter(\n            (filterElement: JSX.Element) =>\n                filterElement.props.alwaysOn && filterElement.props.defaultValue\n        )\n        .reduce(\n            (acc, filterElement: JSX.Element) =>\n                lodashSet(\n                    { ...acc },\n                    filterElement.props.source,\n                    filterElement.props.defaultValue\n                ),\n            {} as any\n        ),\n    ...initialValues,\n});\n\nconst handleFormSubmit = () => {};\n\nconst PREFIX = 'RaFilterForm';\n\nexport const FilterFormClasses = {\n    clearFix: `${PREFIX}-clearFix`,\n};\n\nconst StyledForm = styled('form', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    marginTop: theme.spacing(-0.5),\n    marginBottom: theme.spacing(0.5),\n    minHeight: theme.spacing(8),\n    display: 'flex',\n    alignItems: 'flex-end',\n    flexWrap: 'wrap',\n    pointerEvents: 'none',\n\n    [`& .${FilterFormClasses.clearFix}`]: { clear: 'right' },\n    '& .MuiFormHelperText-root': { display: 'none' },\n}));\n\n/**\n * Because we are using controlled inputs with react-hook-form, we must provide a default value\n * for each input when resetting the form. (see https://react-hook-form.com/api/useform/reset).\n * To ensure we don't provide undefined which will result to the current input value being reapplied\n * and due to the dynamic nature of the filter form, we rebuild the filter form values from its current\n * values and make sure to pass at least an empty string for each input.\n */\nexport const getFilterFormValues = (\n    formValues: Record<string, any>,\n    filterValues: Record<string, any>\n) => {\n    return Object.keys(formValues).reduce((acc, key) => {\n        acc[key] = getInputValue(formValues, key, filterValues);\n        return acc;\n    }, cloneDeep(filterValues) ?? {});\n};\n\nconst getInputValue = (\n    formValues: Record<string, any>,\n    key: string,\n    filterValues: Record<string, any>\n) => {\n    if (formValues[key] === undefined || formValues[key] === null) {\n        return '';\n    }\n    if (Array.isArray(formValues[key])) {\n        return lodashGet(filterValues, key, '');\n    }\n    if (formValues[key] instanceof Date) {\n        return lodashGet(filterValues, key, '');\n    }\n    if (typeof formValues[key] === 'object') {\n        return Object.keys(formValues[key]).reduce((acc, innerKey) => {\n            acc[innerKey] = getInputValue(\n                formValues[key],\n                innerKey,\n                (filterValues || {})[key] ?? {}\n            );\n            return acc;\n        }, {});\n    }\n    return lodashGet(filterValues, key, '');\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport ActionHide from '@mui/icons-material/HighlightOff';\nimport clsx from 'clsx';\nimport { useResourceContext, useTranslate } from 'ra-core';\n\nexport const FilterFormInput = props => {\n    const { filterElement, handleHide, className } = props;\n    const resource = useResourceContext(props);\n    const translate = useTranslate();\n\n    return (\n        <Root\n            data-source={filterElement.props.source}\n            className={clsx('filter-field', className)}\n        >\n            {!filterElement.props.alwaysOn && (\n                <IconButton\n                    className={clsx(\n                        'hide-filter',\n                        FilterFormInputClasses.hideButton\n                    )}\n                    onClick={handleHide}\n                    data-key={filterElement.props.source}\n                    title={translate('ra.action.remove_filter')}\n                    size=\"small\"\n                >\n                    <ActionHide />\n                </IconButton>\n            )}\n            {React.cloneElement(filterElement, {\n                resource,\n                record: emptyRecord,\n                size: 'small',\n                helperText: false,\n                // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\n                defaultValue: undefined,\n            })}\n            <div className={FilterFormInputClasses.spacer}>&nbsp;</div>\n        </Root>\n    );\n};\n\nFilterFormInput.propTypes = {\n    filterElement: PropTypes.node,\n    handleHide: PropTypes.func,\n    resource: PropTypes.string,\n};\n\nconst PREFIX = 'RaFilterFormInput';\n\nexport const FilterFormInputClasses = {\n    spacer: `${PREFIX}-spacer`,\n    hideButton: `${PREFIX}-hideButton`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'flex-end',\n    pointerEvents: 'auto',\n\n    [`& .${FilterFormInputClasses.spacer}`]: { width: theme.spacing(2) },\n    [`& .${FilterFormInputClasses.hideButton}`]: {\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nconst emptyRecord = {};\n","import * as React from 'react';\n\nexport type FilterContextType = React.ReactNode[];\n\n/**\n * Make filters accessible to sub components\n */\nexport const FilterContext = React.createContext<FilterContextType>(undefined);\n","import * as React from 'react';\nimport {\n    useState,\n    useCallback,\n    useRef,\n    ReactNode,\n    HtmlHTMLAttributes,\n    useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, MenuItem, styled } from '@mui/material';\nimport ContentFilter from '@mui/icons-material/FilterList';\nimport lodashGet from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useResourceContext, useTranslate } from 'ra-core';\nimport { stringify } from 'query-string';\nimport { useNavigate } from 'react-router';\n\nimport { FilterButtonMenuItem } from './FilterButtonMenuItem';\nimport { Button } from '../../button';\nimport { FilterContext } from '../FilterContext';\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\nimport { AddSavedQueryDialog } from './AddSavedQueryDialog';\nimport { RemoveSavedQueryDialog } from './RemoveSavedQueryDialog';\n\nexport const FilterButton = (props: FilterButtonProps): JSX.Element => {\n    const { filters: filtersProp, className, ...rest } = props;\n    const filters = useContext(FilterContext) || filtersProp;\n    const resource = useResourceContext(props);\n    const translate = useTranslate();\n    const [savedQueries] = useSavedQueries(resource);\n    const navigate = useNavigate();\n    const {\n        displayedFilters = {},\n        filterValues,\n        perPage,\n        showFilter,\n        sort,\n    } = useListContext(props);\n    const hasFilterValues = !isEqual(filterValues, {});\n    const validSavedQueries = extractValidSavedQueries(savedQueries);\n    const hasSavedCurrentQuery = validSavedQueries.some(savedQuery =>\n        isEqual(savedQuery.value, {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        })\n    );\n    const [open, setOpen] = useState(false);\n    const anchorEl = useRef();\n\n    if (filters === undefined) {\n        throw new Error('FilterButton requires filters prop to be set');\n    }\n\n    const hiddenFilters = filters.filter(\n        (filterElement: JSX.Element) =>\n            !filterElement.props.alwaysOn &&\n            !displayedFilters[filterElement.props.source] &&\n            typeof lodashGet(filterValues, filterElement.props.source) ===\n                'undefined'\n    );\n\n    const handleClickButton = useCallback(\n        event => {\n            // This prevents ghost click.\n            event.preventDefault();\n            setOpen(true);\n            anchorEl.current = event.currentTarget;\n        },\n        [anchorEl, setOpen]\n    );\n\n    const handleRequestClose = useCallback(() => {\n        setOpen(false);\n    }, [setOpen]);\n\n    const handleShow = useCallback(\n        ({ source, defaultValue }) => {\n            showFilter(source, defaultValue === '' ? undefined : defaultValue);\n            setOpen(false);\n        },\n        [showFilter, setOpen]\n    );\n\n    // add query dialog state\n    const [addSavedQueryDialogOpen, setAddSavedQueryDialogOpen] = useState(\n        false\n    );\n    const hideAddSavedQueryDialog = (): void => {\n        setAddSavedQueryDialogOpen(false);\n    };\n    const showAddSavedQueryDialog = (): void => {\n        setOpen(false);\n        setAddSavedQueryDialogOpen(true);\n    };\n\n    // remove query dialog state\n    const [\n        removeSavedQueryDialogOpen,\n        setRemoveSavedQueryDialogOpen,\n    ] = useState(false);\n    const hideRemoveSavedQueryDialog = (): void => {\n        setRemoveSavedQueryDialogOpen(false);\n    };\n    const showRemoveSavedQueryDialog = (): void => {\n        setOpen(false);\n        setRemoveSavedQueryDialogOpen(true);\n    };\n\n    return (\n        <Root className={className} {...sanitizeRestProps(rest)}>\n            <Button\n                className=\"add-filter\"\n                label=\"ra.action.add_filter\"\n                aria-haspopup=\"true\"\n                onClick={handleClickButton}\n            >\n                <ContentFilter />\n            </Button>\n            <Menu\n                open={open}\n                anchorEl={anchorEl.current}\n                onClose={handleRequestClose}\n            >\n                {hiddenFilters.map((filterElement: JSX.Element, index) => (\n                    <FilterButtonMenuItem\n                        key={filterElement.props.source}\n                        filter={filterElement}\n                        resource={resource}\n                        onShow={handleShow}\n                        autoFocus={index === 0}\n                    />\n                ))}\n                {validSavedQueries.map((savedQuery, index) =>\n                    isEqual(savedQuery.value, {\n                        filter: filterValues,\n                        sort,\n                        perPage,\n                        displayedFilters,\n                    }) ? (\n                        <MenuItem\n                            onClick={showRemoveSavedQueryDialog}\n                            key={index}\n                        >\n                            {translate(\n                                'ra.saved_queries.remove_label_with_name',\n                                {\n                                    _: 'Remove query \"%{name}\"',\n                                    name: savedQuery.label,\n                                }\n                            )}\n                        </MenuItem>\n                    ) : (\n                        <MenuItem\n                            onClick={(): void => {\n                                navigate({\n                                    search: stringify({\n                                        filter: JSON.stringify(\n                                            savedQuery.value.filter\n                                        ),\n                                        sort: savedQuery.value.sort.field,\n                                        order: savedQuery.value.sort.order,\n                                        page: 1,\n                                        perPage: savedQuery.value.perPage,\n                                        displayedFilters: JSON.stringify(\n                                            savedQuery.value.displayedFilters\n                                        ),\n                                    }),\n                                });\n                                setOpen(false);\n                            }}\n                            key={index}\n                        >\n                            {savedQuery.label}\n                        </MenuItem>\n                    )\n                )}\n                {hasFilterValues && !hasSavedCurrentQuery ? (\n                    <MenuItem onClick={showAddSavedQueryDialog}>\n                        {translate('ra.saved_queries.new_label', {\n                            _: 'Save current query...',\n                        })}\n                    </MenuItem>\n                ) : null}\n            </Menu>\n            <AddSavedQueryDialog\n                open={addSavedQueryDialogOpen}\n                onClose={hideAddSavedQueryDialog}\n            />\n            <RemoveSavedQueryDialog\n                open={removeSavedQueryDialogOpen}\n                onClose={hideRemoveSavedQueryDialog}\n            />\n        </Root>\n    );\n};\n\nconst sanitizeRestProps = ({\n    displayedFilters = null,\n    filterValues = null,\n    showFilter = null,\n    ...rest\n}) => rest;\n\nFilterButton.propTypes = {\n    resource: PropTypes.string,\n    filters: PropTypes.arrayOf(PropTypes.node),\n    displayedFilters: PropTypes.object,\n    filterValues: PropTypes.object,\n    showFilter: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport interface FilterButtonProps extends HtmlHTMLAttributes<HTMLDivElement> {\n    className?: string;\n    resource?: string;\n    filterValues?: any;\n    showFilter?: (filterName: string, defaultValue: any) => void;\n    displayedFilters?: any;\n    filters?: ReactNode[];\n}\n\nconst PREFIX = 'RaFilterButton';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'inline-block',\n}));\n","import * as React from 'react';\nimport { forwardRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { FieldTitle, useResourceContext } from 'ra-core';\n\nexport const FilterButtonMenuItem = forwardRef<any, FilterButtonMenuItemProps>(\n    (props, ref) => {\n        const { filter, onShow, autoFocus } = props;\n        const resource = useResourceContext(props);\n        const handleShow = useCallback(() => {\n            onShow({\n                source: filter.props.source,\n                defaultValue: filter.props.defaultValue,\n            });\n        }, [filter.props.defaultValue, filter.props.source, onShow]);\n\n        return (\n            <MenuItem\n                className=\"new-filter-item\"\n                data-key={filter.props.source}\n                data-default-value={filter.props.defaultValue}\n                key={filter.props.source}\n                onClick={handleShow}\n                autoFocus={autoFocus}\n                ref={ref}\n                disabled={filter.props.disabled}\n            >\n                <FieldTitle\n                    label={filter.props.label}\n                    source={filter.props.source}\n                    resource={resource}\n                />\n            </MenuItem>\n        );\n    }\n);\n\nFilterButtonMenuItem.propTypes = {\n    filter: PropTypes.element.isRequired,\n    onShow: PropTypes.func.isRequired,\n    resource: PropTypes.string,\n    autoFocus: PropTypes.bool,\n};\n\nexport interface FilterButtonMenuItemProps {\n    filter: JSX.Element;\n    onShow: (params: { source: string; defaultValue: any }) => void;\n    resource: string;\n    autoFocus?: boolean;\n}\n","import { SortPayload, useStore } from 'ra-core';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useSavedQueries = (resource: string) => {\n    return useStore<SavedQuery[]>(`${resource}.savedQueries`, []);\n};\n\nexport interface SavedQuery {\n    label: string;\n    value: {\n        filter?: any;\n        displayedFilters?: any[];\n        sort?: SortPayload;\n        perPage?: number;\n    };\n}\n\nexport const extractValidSavedQueries = (savedQueries: SavedQuery[]) => {\n    if (Array.isArray(savedQueries)) {\n        return savedQueries.filter(query => isValidSavedQuery(query));\n    }\n\n    return [];\n};\n\nexport const areValidSavedQueries = (savedQueries: SavedQuery[]) => {\n    if (\n        Array.isArray(savedQueries) &&\n        savedQueries.every(query => isValidSavedQuery(query))\n    ) {\n        return true;\n    }\n};\n\nexport const isValidSavedQuery = (savedQuery: SavedQuery) => {\n    if (\n        savedQuery.label &&\n        typeof savedQuery.label === 'string' &&\n        savedQuery.value &&\n        typeof Array.isArray(savedQuery.value.displayedFilters) &&\n        typeof savedQuery.value.perPage === 'number' &&\n        typeof savedQuery.value.sort?.field === 'string' &&\n        typeof savedQuery.value.sort?.order === 'string' &&\n        typeof savedQuery.value.filter === 'object'\n    ) {\n        return true;\n    }\n\n    return false;\n};\n","import * as React from 'react';\nimport { ReactElement, ChangeEvent, FormEvent, useState } from 'react';\nimport { useListContext, useTranslate } from 'ra-core';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n} from '@mui/material';\n\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\n\nexport const AddSavedQueryDialog = ({\n    open,\n    onClose,\n}: AddSavedQueryDialogProps): ReactElement => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        displayedFilters,\n        sort,\n        perPage,\n    } = useListContext();\n\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\n\n    // input state\n    const [queryName, setQueryName] = useState('');\n    const handleQueryNameChange = (\n        event: ChangeEvent<HTMLInputElement>\n    ): void => {\n        setQueryName(event.target.value);\n    };\n\n    const handleFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        addQuery();\n    };\n\n    const addQuery = (): void => {\n        const newSavedQuery = {\n            label: queryName,\n            value: {\n                filter: filterValues,\n                sort,\n                perPage,\n                displayedFilters,\n            },\n        };\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\n        setSavedQueries(newSavedQueries.concat(newSavedQuery));\n        setQueryName('');\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {translate('ra.saved_queries.new_dialog_title', {\n                    _: 'Save current query as',\n                })}\n            </DialogTitle>\n            <DialogContent>\n                <form onSubmit={handleFormSubmit}>\n                    <TextField\n                        // eslint-disable-next-line jsx-a11y/no-autofocus\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label={translate('ra.saved_queries.query_name', {\n                            _: 'Query name',\n                        })}\n                        fullWidth\n                        value={queryName}\n                        onChange={handleQueryNameChange}\n                    />\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {translate('ra.action.cancel')}\n                </Button>\n                <Button onClick={addQuery} color=\"primary\">\n                    {translate('ra.action.save')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport interface AddSavedQueryDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useTranslate } from 'ra-core';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from '@mui/material';\n\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\n\nexport interface RemoveSavedQueryDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const RemoveSavedQueryDialog = ({\n    open,\n    onClose,\n}: RemoveSavedQueryDialogProps): ReactElement => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        sort,\n        perPage,\n        displayedFilters,\n    } = useListContext();\n\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\n\n    const removeQuery = (): void => {\n        let savedQueryToRemove = {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        };\n\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\n        const index = newSavedQueries.findIndex(savedFilter =>\n            isEqual(savedFilter.value, savedQueryToRemove)\n        );\n        setSavedQueries([\n            ...newSavedQueries.slice(0, index),\n            ...newSavedQueries.slice(index + 1),\n        ]);\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {translate('ra.saved_queries.remove_dialog_title', {\n                    _: 'Remove saved query?',\n                })}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {translate('ra.saved_queries.remove_message', {\n                        _:\n                            'Are you sure you want to remove that item from your list of saved queries?',\n                    })}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {translate('ra.action.cancel')}\n                </Button>\n                <Button\n                    onClick={removeQuery}\n                    color=\"primary\"\n                    // eslint-disable-next-line jsx-a11y/no-autofocus\n                    autoFocus\n                >\n                    {translate('ra.action.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { Box, BoxProps, List, Typography } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n\n/**\n * Header and container for a list of filter list items\n *\n * Expects 2 props, and a list of <FilterListItem> as children:\n *\n * - label: The label for this filter section. Will be translated.\n * - icon: An icon react element\n *\n * @see FilterListItem\n *\n * @example\n *\n * import * as React from 'react';\n * import { Card, CardContent } from '@mui/material';\n * import MailIcon from '@mui/icons-material/MailOutline';\n * import { FilterList, FilterListItem } from 'react-admin';\n *\n * const FilterSidebar = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterList\n *                 label=\"Subscribed to newsletter\"\n *                 icon={<MailIcon />}\n *             >\n *                 <FilterListItem\n *                     label=\"Yes\"\n *                     value={{ has_newsletter: true }}\n *                  />\n *                 <FilterListItem\n *                     label=\"No\"\n *                     value={{ has_newsletter: false }}\n *                  />\n *             </FilterList>\n *         </CardContent>\n *     </Card>\n * );\n */\nexport const FilterList = (props: FilterListProps) => {\n    const { label, icon, children, ...rest } = props;\n    const translate = useTranslate();\n    return (\n        <Box {...rest}>\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\n                <Box mr={1}>{icon}</Box>\n                <Typography variant=\"overline\">{translate(label)}</Typography>\n            </Box>\n            <List dense disablePadding>\n                {children}\n            </List>\n        </Box>\n    );\n};\n\nexport interface FilterListProps extends BoxProps {\n    label: string;\n    icon: ReactNode;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo, isValidElement, ReactElement } from 'react';\nimport {\n    IconButton,\n    ListItem,\n    ListItemButton,\n    ListItemProps,\n    ListItemText,\n    ListItemSecondaryAction,\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\nimport { useTranslate, useListFilterContext, shallowEqual } from 'ra-core';\nimport matches from 'lodash/matches';\nimport pickBy from 'lodash/pickBy';\n\nconst arePropsEqual = (prevProps, nextProps) =>\n    prevProps.label === nextProps.label &&\n    shallowEqual(prevProps.value, nextProps.value);\n\n/**\n * Button to enable/disable a list filter.\n *\n * Expects 2 props:\n *\n * - label: The text (or React element) to be displayed for this item.\n *   If it's a string, the component will translate it.\n * - value: An object to be merged into the filter value when enabling the filter\n *   (e.g. { is_published: true, published_at_gte: '2020-07-08' })\n *\n * @example\n *\n * import * as React from 'react';\n * import { Card, CardContent } from '@mui/material';\n * import MailIcon from '@mui/icons-material/MailOutline';\n * import { FilterList, FilterListItem } from 'react-admin';\n *\n * const FilterSidebar = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterList\n *                 label=\"Subscribed to newsletter\"\n *                 icon={<MailIcon />}\n *             >\n *                 <FilterListItem\n *                     label=\"Yes\"\n *                     value={{ has_newsletter: true }}\n *                  />\n *                 <FilterListItem\n *                     label=\"No\"\n *                     value={{ has_newsletter: false }}\n *                  />\n *             </FilterList>\n *         </CardContent>\n *     </Card>\n * );\n *\n * @example // The value prop can contain multiple keys\n *\n * import * as React from 'react';\n * import {\n *     endOfYesterday,\n *     startOfWeek,\n *     subWeeks,\n *     startOfMonth,\n *     subMonths,\n * } from 'date-fns';\n * import { Card, CardContent } from '@mui/material';\n * import AccessTimeIcon from '@mui/icons-material/AccessTime';\n * import { FilterList, FilterListItem } from 'react-admin';\n *\n * const FilterSidebar = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterList\n *                 label=\"Last visited\"\n *                 icon={<AccessTimeIcon />}\n *             >\n *                 <FilterListItem\n *                     label=\"Today\"\n *                     value={{\n *                         last_seen_gte: endOfYesterday().toISOString(),\n *                         last_seen_lte: undefined,\n *                     }}\n *                 />\n *                 <FilterListItem\n *                     label=\"This week\"\n *                     value={{\n *                         last_seen_gte: startOfWeek(\n *                             new Date()\n *                         ).toISOString(),\n *                         last_seen_lte: undefined,\n *                     }}\n *                 />\n *                 <FilterListItem\n *                     label=\"Last week\"\n *                     value={{\n *                         last_seen_gte: subWeeks(\n *                             startOfWeek(new Date()),\n *                             1\n *                         ).toISOString(),\n *                         last_seen_lte: startOfWeek(\n *                             new Date()\n *                         ).toISOString(),\n *                     }}\n *                 />\n *                 <FilterListItem\n *                     label=\"This month\"\n *                     value={{\n *                         last_seen_gte: startOfMonth(\n *                             new Date()\n *                         ).toISOString(),\n *                         last_seen_lte: undefined,\n *                     }}\n *                 />\n *                 <FilterListItem\n *                     label=\"Last month\"\n *                     value={{\n *                         last_seen_gte: subMonths(\n *                             startOfMonth(new Date()),\n *                             1\n *                         ).toISOString(),\n *                         last_seen_lte: startOfMonth(\n *                             new Date()\n *                         ).toISOString(),\n *                     }}\n *                 />\n *                 <FilterListItem\n *                     label=\"Earlier\"\n *                     value={{\n *                         last_seen_gte: undefined,\n *                         last_seen_lte: subMonths(\n *                             startOfMonth(new Date()),\n *                             1\n *                         ).toISOString(),\n *                     }}\n *                 />\n *             </FilterList>\n *         </CardContent>\n *     </Card>\n * );\n */\nexport const FilterListItem = memo((props: FilterListItemProps) => {\n    const { label, value, ...rest } = props;\n    const { filterValues, setFilters } = useListFilterContext();\n    const translate = useTranslate();\n\n    const isSelected = matches(\n        pickBy(value, val => typeof val !== 'undefined')\n    )(filterValues);\n\n    const addFilter = () => {\n        setFilters({ ...filterValues, ...value }, null, false);\n    };\n\n    const removeFilter = () => {\n        const keysToRemove = Object.keys(value);\n        const filters = Object.keys(filterValues).reduce(\n            (acc, key) =>\n                keysToRemove.includes(key)\n                    ? acc\n                    : { ...acc, [key]: filterValues[key] },\n            {}\n        );\n\n        setFilters(filters, null, false);\n    };\n\n    const toggleFilter = () => (isSelected ? removeFilter() : addFilter());\n\n    return (\n        <StyledListItem\n            onClick={toggleFilter}\n            selected={isSelected}\n            disablePadding\n            {...rest}\n        >\n            <ListItemButton\n                disableGutters\n                className={FilterListItemClasses.listItemButton}\n            >\n                <ListItemText\n                    primary={\n                        isValidElement(label)\n                            ? label\n                            : translate(label, { _: label })\n                    }\n                    className={FilterListItemClasses.listItemText}\n                    data-selected={isSelected ? 'true' : 'false'}\n                />\n                {isSelected && (\n                    <ListItemSecondaryAction>\n                        <IconButton size=\"small\" onClick={toggleFilter}>\n                            <CancelIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                )}\n            </ListItemButton>\n        </StyledListItem>\n    );\n}, arePropsEqual);\n\nconst PREFIX = 'RaFilterListItem';\n\nexport const FilterListItemClasses = {\n    listItemButton: `${PREFIX}-listItemButton`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledListItem = styled(ListItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${FilterListItemClasses.listItemButton}`]: {\n        paddingRight: '2em',\n        paddingLeft: '2em',\n    },\n    [`& .${FilterListItemClasses.listItemText}`]: {\n        margin: 0,\n    },\n}));\n\nexport interface FilterListItemProps extends Omit<ListItemProps, 'value'> {\n    label: string | ReactElement;\n    value: any;\n}\n","import * as React from 'react';\nimport { ChangeEvent, memo, useMemo } from 'react';\nimport { InputAdornment } from '@mui/material';\nimport { SxProps } from '@mui/system';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Form, useTranslate, useListFilterContext } from 'ra-core';\n\nimport { TextInput } from '../../input';\n\n/**\n * Form and search input for doing a full-text search filter.\n *\n * Triggers a search on change (with debounce).\n *\n * @example\n *\n * const FilterPanel = () => (\n *     <Card>\n *         <CardContent>\n *             <FilterLiveSearch source=\"title\" />\n *         </CardContent>\n *     </Card>\n * );\n */\nexport const FilterLiveSearch = memo(\n    (props: {\n        source?: string;\n        sx?: SxProps;\n        variant?: 'filled' | 'outlined';\n    }) => {\n        const { source = 'q', variant = 'filled', ...rest } = props;\n        const { filterValues, setFilters } = useListFilterContext();\n        const translate = useTranslate();\n\n        const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target) {\n                setFilters(\n                    { ...filterValues, [source]: event.target.value },\n                    null\n                );\n            } else {\n                const { [source]: _, ...filters } = filterValues;\n                setFilters(filters, null);\n            }\n        };\n\n        const initialValues = useMemo(\n            () => ({\n                [source]: filterValues[source],\n            }),\n            [filterValues, source]\n        );\n\n        const onSubmit = () => undefined;\n        let label = translate('ra.action.search');\n\n        return (\n            <Form defaultValues={initialValues} onSubmit={onSubmit}>\n                <TextInput\n                    resettable\n                    helperText={false}\n                    source={source}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position=\"end\">\n                                <SearchIcon color=\"disabled\" />\n                            </InputAdornment>\n                        ),\n                    }}\n                    onChange={handleChange}\n                    size=\"small\"\n                    {...(variant === 'outlined'\n                        ? { variant: 'outlined', label }\n                        : {\n                              placeholder: label,\n                              label: false,\n                              hiddenLabel: true,\n                          })}\n                    {...rest}\n                />\n            </Form>\n        );\n    }\n);\n","import * as React from 'react';\nimport { ReactElement, useState } from 'react';\nimport { IconButton, IconButtonProps } from '@mui/material';\nimport AddIcon from '@mui/icons-material/AddCircleOutline';\nimport { useTranslate } from 'ra-core';\n\nimport { AddSavedQueryDialog } from './AddSavedQueryDialog';\n\nexport const AddSavedQueryIconButton = (\n    props: IconButtonProps\n): ReactElement => {\n    const [open, setOpen] = useState(false);\n    const handleOpen = (): void => {\n        setOpen(true);\n    };\n    const handleClose = (): void => {\n        setOpen(false);\n    };\n    const translate = useTranslate();\n\n    return (\n        <>\n            <IconButton\n                aria-label={translate('ra.saved_queries.new_label', {\n                    _: 'Save current query...',\n                })}\n                size=\"small\"\n                onClick={handleOpen}\n                {...props}\n            >\n                <AddIcon />\n            </IconButton>\n\n            <AddSavedQueryDialog open={open} onClose={handleClose} />\n        </>\n    );\n};\n","import * as React from 'react';\nimport { ReactElement, useState } from 'react';\nimport { IconButton, IconButtonProps } from '@mui/material';\nimport RemoveIcon from '@mui/icons-material/RemoveCircleOutline';\nimport { useTranslate } from 'ra-core';\n\nimport { RemoveSavedQueryDialog } from './RemoveSavedQueryDialog';\n\nexport const RemoveSavedQueryIconButton = (\n    props: IconButtonProps\n): ReactElement => {\n    const [confirmationOpen, setConfirmationOpen] = useState(false);\n    const handleConfirmationClose = (): void => {\n        setConfirmationOpen(false);\n    };\n\n    const handleRemoveQueryClick = (): void => {\n        setConfirmationOpen(true);\n    };\n    const translate = useTranslate();\n\n    return (\n        <>\n            <IconButton\n                aria-label={translate('ra.saved_queries.remove_label', {\n                    _: 'Remove saved query',\n                })}\n                size=\"small\"\n                onClick={handleRemoveQueryClick}\n                {...props}\n            >\n                <RemoveIcon />\n            </IconButton>\n\n            <RemoveSavedQueryDialog\n                open={confirmationOpen}\n                onClose={handleConfirmationClose}\n            />\n        </>\n    );\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { styled, Tooltip } from '@mui/material';\nimport BookmarkIcon from '@mui/icons-material/BookmarkBorder';\nimport HelpIcon from '@mui/icons-material/HelpOutline';\nimport { useListContext, useTranslate } from 'ra-core';\nimport isEqual from 'lodash/isEqual';\n\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\nimport { RemoveSavedQueryIconButton } from './RemoveSavedQueryIconButton';\nimport { AddSavedQueryIconButton } from './AddSavedQueryIconButton';\nimport { SavedQueryFilterListItem } from './SavedQueryFilterListItem';\nimport { FilterList } from './FilterList';\n\n/**\n * FilterList-like component allowing to save and restore a query (filters, sort, perPage).\n *\n * Use this component in a Filter sidebar to let users store custom queries\n * that they can reuse later. The saved queries will appear as FilterListItems,\n * and can be removed.\n *\n * This component uses useStore under the hood to store saved queries in\n * localStorage, one set of saved queries per resource.\n *\n * @example\n *\n * import { FilterList, FilterListItem, List, Datagrid, SavedQueriesList } from 'react-admin';\n * import { Card, CardContent } from '@mui/material';\n *\n * const PostFilterSidebar = () => (\n *     <Card>\n *         <CardContent>\n *             <SavedQueriesList />\n *             <FilterList label=\"Category\" icon={<CategoryIcon />}>\n *                 ...\n *             </FilterList>\n *             <FilterList label=\"Published\" icon={<DateRangeIcon />}>\n *                ...\n *             </FilterList>\n *             <FilterList label=\"Popularity\" icon={<DateRangeIcon />}>\n *                ...\n *             </FilterList>\n *         </CardContent>\n *     </Card>\n * );\n *\n * const PostList = () => (\n *     <List aside={<PostFilterSidebar />}>\n *         <Datagrid>\n *             ...\n *         </Datagrid>\n *     </List>\n * );\n *\n */\nexport const SavedQueriesList = ({\n    icon = defaultIcon,\n}: SavedQueriesListProps) => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        displayedFilters,\n        sort,\n        perPage,\n    } = useListContext();\n\n    const [savedQueries] = useSavedQueries(resource);\n    const validSavedQueries = extractValidSavedQueries(savedQueries);\n    const hasSavedCurrentFilterValue = validSavedQueries.some(savedQuery =>\n        isEqual(savedQuery.value, {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        })\n    );\n    const hasFilterValues = !isEqual(filterValues, {});\n\n    return (\n        <Root label=\"ra.saved_queries.label\" icon={icon}>\n            {hasSavedCurrentFilterValue ? (\n                <RemoveSavedQueryIconButton\n                    className={SavedQueriesListClasses.floatingIcon}\n                />\n            ) : hasFilterValues ? (\n                <AddSavedQueryIconButton\n                    className={SavedQueriesListClasses.floatingIcon}\n                />\n            ) : (\n                <Tooltip\n                    title={translate('ra.saved_queries.help')}\n                    className={SavedQueriesListClasses.floatingTooltip}\n                >\n                    <HelpIcon />\n                </Tooltip>\n            )}\n            {validSavedQueries.map((savedQuery, index) => (\n                <SavedQueryFilterListItem\n                    label={savedQuery.label}\n                    value={savedQuery.value}\n                    key={index}\n                />\n            ))}\n        </Root>\n    );\n};\n\nconst PREFIX = 'RaSavedQueriesList';\n\nexport const SavedQueriesListClasses = {\n    floatingIcon: `${PREFIX}-floatingIcon`,\n    floatingTooltip: `${PREFIX}-floatingTooltip`,\n    titleContainer: `${PREFIX}-titleContainer`,\n    titleIcon: `${PREFIX}-titleIcon`,\n};\n\nconst Root = styled(FilterList, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${SavedQueriesListClasses.floatingIcon}`]: {\n        position: 'absolute',\n        top: '-1.8em',\n        right: 0,\n    },\n    [`& .${SavedQueriesListClasses.floatingTooltip}`]: {\n        position: 'absolute',\n        top: '-1.2em',\n        right: 3,\n        color: theme.palette.action.disabled,\n    },\n}));\n\nconst defaultIcon = <BookmarkIcon />;\n\nexport interface SavedQueriesListProps {\n    icon?: ReactNode;\n}\n","import * as React from 'react';\nimport { ReactElement, memo } from 'react';\nimport {\n    IconButton,\n    ListItem,\n    ListItemButton,\n    ListItemProps,\n    ListItemText,\n    ListItemSecondaryAction,\n    styled,\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\nimport isEqual from 'lodash/isEqual';\nimport { useNavigate } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useListContext } from 'ra-core';\n\nimport { SavedQuery } from './useSavedQueries';\n\nconst arePropsEqual = (\n    prevProps: SavedQueryFilterListItemProps,\n    nextProps: SavedQueryFilterListItemProps\n): boolean =>\n    prevProps.label === nextProps.label &&\n    isEqual(prevProps.value, nextProps.value);\n\nexport const SavedQueryFilterListItem = memo(\n    (props: SavedQueryFilterListItemProps): ReactElement => {\n        const { className, label, sx, value } = props;\n        const {\n            filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        } = useListContext();\n        const navigate = useNavigate();\n\n        const isSelected = isEqual(value, {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        });\n\n        const addFilter = (): void => {\n            navigate({\n                search: stringify({\n                    filter: JSON.stringify(value.filter),\n                    sort: value.sort.field,\n                    order: value.sort.order,\n                    page: 1,\n                    perPage: value.perPage,\n                    displayedFilters: value.displayedFilters,\n                }),\n            });\n        };\n\n        const removeFilter = (): void => {\n            navigate({\n                search: stringify({\n                    filter: JSON.stringify({}),\n                }),\n            });\n        };\n\n        const toggleFilter = (): void =>\n            isSelected ? removeFilter() : addFilter();\n\n        return (\n            // @ts-ignore\n            <StyledListItem\n                onClick={toggleFilter}\n                selected={isSelected}\n                className={className}\n                sx={sx}\n                disablePadding\n            >\n                <ListItemButton\n                    disableGutters\n                    className={SavedQueryFilterListItemClasses.listItemButton}\n                >\n                    <ListItemText\n                        primary={label}\n                        className={SavedQueryFilterListItemClasses.listItemText}\n                    />\n                    {isSelected && (\n                        <ListItemSecondaryAction>\n                            <IconButton size=\"small\" onClick={toggleFilter}>\n                                <CancelIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    )}\n                </ListItemButton>\n            </StyledListItem>\n        );\n    },\n    arePropsEqual\n);\n\nconst PREFIX = 'RaSavedQueryFilterListItem';\nexport const SavedQueryFilterListItemClasses = {\n    listItemButton: `${PREFIX}-listItemButton`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledListItem = styled(ListItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(() => ({\n    [`& .${SavedQueryFilterListItemClasses.listItemButton}`]: {\n        paddingRight: '2em',\n        paddingLeft: '2em',\n    },\n    [`& .${SavedQueryFilterListItemClasses.listItemText}`]: {\n        margin: 0,\n    },\n}));\n\nexport interface SavedQueryFilterListItemProps\n    extends SavedQuery,\n        Omit<ListItemProps, 'value'> {}\n","import * as React from 'react';\nimport { useCallback, useMemo, FC, memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    TablePagination,\n    TablePaginationBaseProps,\n    Toolbar,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport {\n    useTranslate,\n    useListPaginationContext,\n    sanitizeListRestProps,\n    ComponentPropType,\n} from 'ra-core';\n\nimport { PaginationActions } from './PaginationActions';\nimport { PaginationLimit } from './PaginationLimit';\n\nexport const Pagination: FC<PaginationProps> = memo(props => {\n    const {\n        rowsPerPageOptions = DefaultRowsPerPageOptions,\n        actions,\n        limit = DefaultLimit,\n        ...rest\n    } = props;\n    const {\n        isLoading,\n        hasNextPage,\n        page,\n        perPage,\n        total,\n        setPage,\n        setPerPage,\n    } = useListPaginationContext(props);\n    const translate = useTranslate();\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('md')\n    );\n\n    const totalPages = useMemo(() => {\n        return total != null ? Math.ceil(total / perPage) : undefined;\n    }, [perPage, total]);\n\n    /**\n     * Warning: MUI's page is 0-based\n     */\n    const handlePageChange = useCallback(\n        (event, page) => {\n            event && event.stopPropagation();\n            if (page < 0 || page > totalPages - 1) {\n                throw new Error(\n                    translate('ra.navigation.page_out_of_boundaries', {\n                        page: page + 1,\n                    })\n                );\n            }\n            setPage(page + 1);\n        },\n        [totalPages, setPage, translate]\n    );\n\n    const handlePerPageChange = useCallback(\n        event => {\n            setPerPage(event.target.value);\n        },\n        [setPerPage]\n    );\n\n    const labelDisplayedRows = useCallback(\n        ({ from, to, count }) =>\n            count === -1 && hasNextPage\n                ? translate('ra.navigation.partial_page_range_info', {\n                      offsetBegin: from,\n                      offsetEnd: to,\n                      _: `%{from}-%{to} of more than %{to}`,\n                  })\n                : translate('ra.navigation.page_range_info', {\n                      offsetBegin: from,\n                      offsetEnd: to,\n                      total: count === -1 ? to : count,\n                      _: `%{from}-%{to} of %{count === -1 ? to : count}`,\n                  }),\n        [translate, hasNextPage]\n    );\n\n    const labelItem = useCallback(\n        type => translate(`ra.navigation.${type}`, { _: `Go to ${type} page` }),\n        [translate]\n    );\n\n    if (isLoading) {\n        return <Toolbar variant=\"dense\" />;\n    }\n\n    // Avoid rendering TablePagination if \"page\" value is invalid\n    if (total === 0 || page < 1 || (total != null && page > totalPages)) {\n        return limit;\n    }\n\n    if (isSmall) {\n        return (\n            <TablePagination\n                count={total == null ? -1 : total}\n                rowsPerPage={perPage}\n                page={page - 1}\n                onPageChange={handlePageChange}\n                rowsPerPageOptions={emptyArray}\n                component=\"span\"\n                labelDisplayedRows={labelDisplayedRows}\n                {...sanitizeListRestProps(rest)}\n            />\n        );\n    }\n\n    const ActionsComponent = actions\n        ? actions // overridden by caller\n        : !isLoading && total != null\n        ? PaginationActions // regular navigation\n        : undefined; // partial navigation (uses default TablePaginationActions)\n\n    return (\n        <TablePagination\n            count={total == null ? -1 : total}\n            rowsPerPage={perPage}\n            page={page - 1}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handlePerPageChange}\n            // @ts-ignore\n            ActionsComponent={ActionsComponent}\n            nextIconButtonProps={{\n                disabled: !hasNextPage,\n            }}\n            component=\"span\"\n            labelRowsPerPage={translate('ra.navigation.page_rows_per_page')}\n            labelDisplayedRows={labelDisplayedRows}\n            getItemAriaLabel={labelItem}\n            rowsPerPageOptions={rowsPerPageOptions}\n            {...sanitizeListRestProps(rest)}\n        />\n    );\n});\n\nPagination.propTypes = {\n    actions: ComponentPropType,\n    limit: PropTypes.element,\n    rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n};\n\nconst DefaultLimit = <PaginationLimit />;\nconst DefaultRowsPerPageOptions = [5, 10, 25];\nconst emptyArray = [];\n\nexport interface PaginationProps extends TablePaginationBaseProps {\n    rowsPerPageOptions?: number[];\n    actions?: FC;\n    limit?: ReactElement;\n}\n","import * as React from 'react';\nimport { memo, FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination, PaginationProps } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'ra-core';\n\nexport const PaginationActions: FC<PaginationActionsProps> = memo(props => {\n    const {\n        page,\n        rowsPerPage,\n        count,\n        onPageChange,\n        size = 'small',\n        className,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n\n    const nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (nbPages === 1) {\n        return <Root className={className} />;\n    }\n\n    const getItemAriaLabel = (\n        type: 'page' | 'first' | 'last' | 'next' | 'previous',\n        page: number,\n        selected: boolean\n    ) => {\n        if (type === 'page') {\n            return selected\n                ? translate('ra.navigation.current_page', {\n                      page,\n                      _: `page ${page}`,\n                  })\n                : translate('ra.navigation.page', {\n                      page,\n                      _: `Go to page ${page}`,\n                  });\n        }\n        return translate(`ra.navigation.${type}`, { _: `Go to ${type} page` });\n    };\n\n    return (\n        <Root className={className}>\n            <Pagination\n                size={size}\n                count={nbPages}\n                // <TablePagination>, the parent, uses 0-based pagination\n                // while <Pagination> uses 1-based pagination\n                page={page + 1}\n                onChange={(e: any, page) => onPageChange(e, page - 1)}\n                {...sanitizeRestProps(rest)}\n                getItemAriaLabel={getItemAriaLabel}\n            />\n        </Root>\n    );\n});\n\nexport interface PaginationActionsProps extends PaginationProps {\n    page: number;\n    rowsPerPage: number;\n    count: number;\n    onPageChange: (event: MouseEvent, page: number) => void;\n}\n/**\n * PaginationActions propTypes are copied over from MUI’s\n * TablePaginationActions propTypes. See\n * https://github.com/mui-org/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\nPaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nconst PREFIX = 'RaPaginationActions';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexShrink: 0,\n    ml: 4,\n}));\n\nconst sanitizeRestProps = ({\n    nextIconButtonProps,\n    backIconButtonProps,\n    ...rest\n}: any) => rest;\n","import * as React from 'react';\nimport { memo } from 'react';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useTranslate } from 'ra-core';\n\nexport const PaginationLimit = memo(() => {\n    const translate = useTranslate();\n    return (\n        <CardContent>\n            <Typography variant=\"body2\">\n                {translate('ra.navigation.no_results')}\n            </Typography>\n        </CardContent>\n    );\n});\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\n\n/**\n * Form input to edit a Date string value in the \"YYYY-MM-DD\" format (e.g. '2021-06-23').\n *\n * Renders a date picker (the exact UI depends on the browser).\n *\n * @example\n * import { Edit, SimpleForm, DateInput } from 'react-admin';\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <DateInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * // If the initial value is a Date object, DateInput converts it to a string\n * // but you must pass a custom parse method to convert the form value\n * // (which is always a date string) back to a Date object.\n * <DateInput source=\"published_at\" parse={val => new Date(val)} />\n */\nexport const DateInput = ({\n    className,\n    defaultValue,\n    format = getStringFromDate,\n    label,\n    name,\n    source,\n    resource,\n    helperText,\n    margin = 'dense',\n    onBlur,\n    onChange,\n    parse,\n    validate,\n    variant = 'filled',\n    ...rest\n}: DateInputProps) => {\n    const { field, fieldState, formState, id, isRequired } = useInput({\n        defaultValue,\n        name,\n        format,\n        parse,\n        onBlur,\n        onChange,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const { error, invalid, isTouched } = fieldState;\n    const { isSubmitted } = formState;\n\n    return (\n        <TextField\n            id={id}\n            {...field}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            type=\"date\"\n            size=\"small\"\n            variant={variant}\n            margin={margin}\n            error={(isTouched || isSubmitted) && invalid}\n            helperText={\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            }\n            label={\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            }\n            InputLabelProps={defaultInputLabelProps}\n            {...sanitizeInputRestProps(rest)}\n        />\n    );\n};\n\nDateInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\n\nexport type DateInputProps = CommonInputProps &\n    Omit<TextFieldProps, 'helperText' | 'label'>;\n\n/**\n * Convert Date object to String\n *\n * @param {Date} value value to convert\n * @returns {String} A standardized date (yyyy-MM-dd), to be passed to an <input type=\"date\" />\n */\nconst convertDateToString = (value: Date) => {\n    if (!(value instanceof Date) || isNaN(value.getDate())) return '';\n    const pad = '00';\n    const yyyy = value.getFullYear().toString();\n    const MM = (value.getMonth() + 1).toString();\n    const dd = value.getDate().toString();\n    return `${yyyy}-${(pad + MM).slice(-2)}-${(pad + dd).slice(-2)}`;\n};\n\nconst dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\nconst defaultInputLabelProps = { shrink: true };\n\nconst getStringFromDate = (value: string | Date) => {\n    // null, undefined and empty string values should not go through dateFormatter\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\n    if (value == null || value === '') {\n        return '';\n    }\n\n    if (value instanceof Date) {\n        return convertDateToString(value);\n    }\n\n    // valid dates should not be converted\n    if (dateRegex.test(value)) {\n        return value;\n    }\n\n    return convertDateToString(new Date(value));\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\n\n/**\n * Converts a datetime string without timezone to a date object\n * with timezone, using the browser timezone.\n *\n * @param {string} value Date string, formatted as yyyy-MM-ddThh:mm\n * @return {Date}\n */\nconst parseDateTime = (value: string) => new Date(value);\n\n/**\n * Input component for entering a date and a time with timezone, using the browser locale\n */\nexport const DateTimeInput = ({\n    className,\n    defaultValue,\n    format = formatDateTime,\n    label,\n    helperText,\n    margin = 'dense',\n    onBlur,\n    onChange,\n    source,\n    resource,\n    parse = parseDateTime,\n    validate,\n    variant = 'filled',\n    ...rest\n}: DateTimeInputProps) => {\n    const { field, fieldState, formState, id, isRequired } = useInput({\n        defaultValue,\n        format,\n        parse,\n        onBlur,\n        onChange,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const { error, invalid, isTouched } = fieldState;\n    const { isSubmitted } = formState;\n\n    return (\n        <TextField\n            id={id}\n            {...field}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            type=\"datetime-local\"\n            size=\"small\"\n            variant={variant}\n            margin={margin}\n            error={(isTouched || isSubmitted) && invalid}\n            helperText={\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            }\n            label={\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            }\n            InputLabelProps={defaultInputLabelProps}\n            {...sanitizeInputRestProps(rest)}\n        />\n    );\n};\n\nDateTimeInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\n\nexport type DateTimeInputProps = CommonInputProps &\n    Omit<TextFieldProps, 'helperText' | 'label'>;\n\nconst leftPad = (nb = 2) => value => ('0'.repeat(nb) + value).slice(-nb);\nconst leftPad4 = leftPad(4);\nconst leftPad2 = leftPad(2);\n\n/**\n * @param {Date} value value to convert\n * @returns {String} A standardized datetime (yyyy-MM-ddThh:mm), to be passed to an <input type=\"datetime-local\" />\n */\nconst convertDateToString = (value: Date) => {\n    if (!(value instanceof Date) || isNaN(value.getDate())) return '';\n    const yyyy = leftPad4(value.getFullYear());\n    const MM = leftPad2(value.getMonth() + 1);\n    const dd = leftPad2(value.getDate());\n    const hh = leftPad2(value.getHours());\n    const mm = leftPad2(value.getMinutes());\n    return `${yyyy}-${MM}-${dd}T${hh}:${mm}`;\n};\n\n// yyyy-MM-ddThh:mm\nconst dateTimeRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/;\nconst defaultInputLabelProps = { shrink: true };\n\n/**\n * Converts a date from the dataProvider, with timezone, to a date string\n * without timezone for use in an <input type=\"datetime-local\" />.\n *\n * @param {Date | String} value date string or object\n */\nconst formatDateTime = (value: string | Date) => {\n    // null, undefined and empty string values should not go through convertDateToString\n    // otherwise, it returns undefined and will make the input an uncontrolled one.\n    if (value == null || value === '') {\n        return '';\n    }\n\n    if (value instanceof Date) {\n        return convertDateToString(value);\n    }\n    // valid dates should not be converted\n    if (dateTimeRegex.test(value)) {\n        return value;\n    }\n\n    return convertDateToString(new Date(value));\n};\n","import React, {\n    Children,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone, DropzoneOptions } from 'react-dropzone';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { useInput, useTranslate, shallowEqual } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { Labeled } from '../Labeled';\nimport { FileInputPreview } from './FileInputPreview';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { SxProps } from '@mui/system';\n\nexport const FileInput = (props: FileInputProps) => {\n    const {\n        accept,\n        children,\n        className,\n        format,\n        helperText,\n        inputProps: inputPropsOptions,\n        label,\n        labelMultiple = 'ra.input.file.upload_several',\n        labelSingle = 'ra.input.file.upload_single',\n        maxSize,\n        minSize,\n        multiple = false,\n        onDrop: onDropProp,\n        onRemove: onRemoveProp,\n        parse,\n        placeholder,\n        resource,\n        source,\n        validate,\n        validateFileRemoval,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n\n    // turn a browser dropped file structure into expected structure\n    const transformFile = file => {\n        if (!(file instanceof File)) {\n            return file;\n        }\n\n        const { source, title } = (Children.only(children) as ReactElement<\n            any\n        >).props;\n\n        const preview = URL.createObjectURL(file);\n        const transformedFile = {\n            rawFile: file,\n            [source]: preview,\n        };\n\n        if (title) {\n            transformedFile[title] = file.name;\n        }\n\n        return transformedFile;\n    };\n\n    const transformFiles = (files: any[]) => {\n        if (!files) {\n            return multiple ? [] : null;\n        }\n\n        if (Array.isArray(files)) {\n            return files.map(transformFile);\n        }\n\n        return transformFile(files);\n    };\n\n    const {\n        id,\n        field: { onChange, value },\n        fieldState,\n        formState: { isSubmitted },\n        isRequired,\n    } = useInput({\n        format: format || transformFiles,\n        parse: parse || transformFiles,\n        source,\n        validate,\n        ...rest,\n    });\n    const { isTouched, error } = fieldState;\n    const files = value ? (Array.isArray(value) ? value : [value]) : [];\n\n    const onDrop = (newFiles, rejectedFiles, event) => {\n        const updatedFiles = multiple ? [...files, ...newFiles] : [...newFiles];\n\n        if (multiple) {\n            onChange(updatedFiles);\n        } else {\n            onChange(updatedFiles[0]);\n        }\n\n        if (onDropProp) {\n            onDropProp(newFiles, rejectedFiles, event);\n        }\n    };\n\n    const onRemove = file => async () => {\n        if (validateFileRemoval) {\n            try {\n                await validateFileRemoval(file);\n            } catch (e) {\n                return;\n            }\n        }\n        if (multiple) {\n            const filteredFiles = files.filter(\n                stateFile => !shallowEqual(stateFile, file)\n            );\n            onChange(filteredFiles as any);\n        } else {\n            onChange(null);\n        }\n\n        if (onRemoveProp) {\n            onRemoveProp(file);\n        }\n    };\n\n    const childrenElement =\n        children && isValidElement(Children.only(children))\n            ? (Children.only(children) as ReactElement<any>)\n            : undefined;\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept,\n        maxSize,\n        minSize,\n        multiple,\n        onDrop,\n        ...rest,\n    });\n\n    return (\n        <StyledLabeled\n            id={id}\n            label={label}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            source={source}\n            resource={resource}\n            isRequired={isRequired}\n            {...sanitizeInputRestProps(rest)}\n        >\n            <>\n                <div\n                    {...getRootProps({\n                        className: FileInputClasses.dropZone,\n                        'data-testid': 'dropzone',\n                    })}\n                >\n                    <input\n                        id={id}\n                        {...getInputProps({\n                            ...inputPropsOptions,\n                        })}\n                    />\n                    {placeholder ? (\n                        placeholder\n                    ) : multiple ? (\n                        <p>{translate(labelMultiple)}</p>\n                    ) : (\n                        <p>{translate(labelSingle)}</p>\n                    )}\n                </div>\n                <FormHelperText>\n                    <InputHelperText\n                        touched={isTouched || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                </FormHelperText>\n                {children && (\n                    <div className=\"previews\">\n                        {files.map((file, index) => (\n                            <FileInputPreview\n                                key={index}\n                                file={file}\n                                onRemove={onRemove(file)}\n                                className={FileInputClasses.removeButton}\n                            >\n                                {cloneElement(childrenElement as ReactElement, {\n                                    record: file,\n                                    className: FileInputClasses.preview,\n                                })}\n                            </FileInputPreview>\n                        ))}\n                    </div>\n                )}\n            </>\n        </StyledLabeled>\n    );\n};\n\nFileInput.propTypes = {\n    accept: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]),\n    children: PropTypes.element,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    isRequired: PropTypes.bool,\n    label: PropTypes.string,\n    labelMultiple: PropTypes.string,\n    labelSingle: PropTypes.string,\n    maxSize: PropTypes.number,\n    minSize: PropTypes.number,\n    multiple: PropTypes.bool,\n    validateFileRemoval: PropTypes.func,\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    placeholder: PropTypes.node,\n};\n\nconst PREFIX = 'RaFileInput';\n\nexport const FileInputClasses = {\n    dropZone: `${PREFIX}-dropZone`,\n    preview: `${PREFIX}-preview`,\n    removeButton: `${PREFIX}-removeButton`,\n};\n\nconst StyledLabeled = styled(Labeled, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    width: '100%',\n    [`& .${FileInputClasses.dropZone}`]: {\n        background: theme.palette.background.default,\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    [`& .${FileInputClasses.preview}`]: {},\n    [`& .${FileInputClasses.removeButton}`]: {},\n}));\n\nexport type FileInputProps = DropzoneOptions &\n    CommonInputProps & {\n        className?: string;\n        children?: ReactNode;\n        labelMultiple?: string;\n        labelSingle?: string;\n        onRemove?: Function;\n        placeholder?: ReactNode;\n        inputProps?: any;\n        validateFileRemoval?(file): boolean | Promise<boolean>;\n        sx?: SxProps;\n    };\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useEffect, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport RemoveCircle from '@mui/icons-material/RemoveCircle';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslate } from 'ra-core';\n\nexport const FileInputPreview = (props: FileInputPreviewProps) => {\n    const { children, className, onRemove, file, ...rest } = props;\n\n    const translate = useTranslate();\n\n    useEffect(() => {\n        return () => {\n            const preview = file.rawFile ? file.rawFile.preview : file.preview;\n\n            if (preview) {\n                window.URL.revokeObjectURL(preview);\n            }\n        };\n    }, [file]);\n\n    return (\n        <Root className={className} {...rest}>\n            <IconButton\n                className={FileInputPreviewClasses.removeButton}\n                onClick={onRemove}\n                aria-label={translate('ra.action.delete')}\n                title={translate('ra.action.delete')}\n                size=\"large\"\n            >\n                <RemoveCircle className={FileInputPreviewClasses.removeIcon} />\n            </IconButton>\n            {children}\n        </Root>\n    );\n};\n\nFileInputPreview.propTypes = {\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    file: PropTypes.object,\n    onRemove: PropTypes.func.isRequired,\n};\n\nFileInputPreview.defaultProps = {\n    file: undefined,\n};\n\nconst PREFIX = 'RaFileInputPreview';\n\nconst FileInputPreviewClasses = {\n    removeButton: `${PREFIX}-removeButton`,\n    removeIcon: `${PREFIX}-removeIcon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${FileInputPreviewClasses.removeButton}`]: {},\n\n    [`& .${FileInputPreviewClasses.removeIcon}`]: {\n        color: theme.palette.error.main,\n    },\n}));\n\nexport interface FileInputPreviewProps {\n    children: ReactNode;\n    className?: string;\n    onRemove: () => void;\n    file: any;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { FileInput, FileInputProps, FileInputClasses } from './FileInput';\n\nexport const ImageInput = (props: ImageInputProps) => (\n    <StyledFileInput\n        labelMultiple=\"ra.input.image.upload_several\"\n        labelSingle=\"ra.input.image.upload_single\"\n        {...props}\n    />\n);\n\nexport type ImageInputProps = FileInputProps;\n\nconst PREFIX = 'RaImageInput';\n\nconst StyledFileInput = styled(FileInput, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    width: '100%',\n\n    [`& .${FileInputClasses.dropZone}`]: {\n        background: theme.palette.background.default,\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n\n    [`& .${FileInputClasses.preview}`]: {\n        display: 'inline-block',\n    },\n\n    [`& .${FileInputClasses.removeButton}`]: {\n        display: 'inline-block',\n        position: 'relative',\n        float: 'left',\n        '& button': {\n            position: 'absolute',\n            top: theme.spacing(1),\n            right: theme.spacing(1),\n            minWidth: theme.spacing(2),\n            opacity: 0,\n        },\n        '&:hover button': {\n            opacity: 1,\n        },\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport clsx from 'clsx';\nimport { useInput, useTranslate, FieldTitle } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\n\nexport const NullableBooleanInput = (props: NullableBooleanInputProps) => {\n    const {\n        className,\n        format = getStringFromBoolean,\n        helperText,\n        label,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        parse = getBooleanFromString,\n        resource,\n        source,\n        validate,\n        variant = 'filled',\n        nullLabel = 'ra.boolean.null',\n        falseLabel = 'ra.boolean.false',\n        trueLabel = 'ra.boolean.true',\n        ...rest\n    } = props;\n\n    const translate = useTranslate();\n\n    const {\n        field,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n        id,\n        isRequired,\n    } = useInput({\n        format,\n        parse,\n        onBlur,\n        onChange,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    return (\n        <StyledTextField\n            id={id}\n            size=\"small\"\n            {...field}\n            className={clsx(\n                'ra-input',\n                `ra-input-${source}`,\n                NullableBooleanInputClasses.input,\n                className\n            )}\n            select\n            margin={margin}\n            label={\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            }\n            error={(isTouched || isSubmitted) && invalid}\n            helperText={\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            }\n            variant={variant}\n            {...sanitizeInputRestProps(rest)}\n        >\n            <MenuItem value=\"\">{translate(nullLabel)}</MenuItem>\n            <MenuItem value=\"false\">{translate(falseLabel)}</MenuItem>\n            <MenuItem value=\"true\">{translate(trueLabel)}</MenuItem>\n        </StyledTextField>\n    );\n};\n\nNullableBooleanInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    nullLabel: PropTypes.string,\n    falseLabel: PropTypes.string,\n    trueLabel: PropTypes.string,\n};\n\nconst PREFIX = 'RaNullableBooleanInput';\n\nexport const NullableBooleanInputClasses = {\n    input: `${PREFIX}-input`,\n};\n\nconst StyledTextField = styled(TextField, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme, fullWidth }) => ({\n    [`&.${NullableBooleanInputClasses.input}`]: {\n        width: fullWidth ? '100%' : theme.spacing(16),\n    },\n}));\n\nconst getBooleanFromString = (value: string): boolean | null => {\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    return null;\n};\n\nconst getStringFromBoolean = (value?: boolean | null): string => {\n    if (value === true) return 'true';\n    if (value === false) return 'false';\n    return '';\n};\n\nexport type NullableBooleanInputProps = CommonInputProps &\n    Omit<TextFieldProps, 'label' | 'helperText'> & {\n        nullLabel?: string;\n        falseLabel?: string;\n        trueLabel?: string;\n    };\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\n\n/**\n * An Input component for a number\n *\n * @example\n * <NumberInput source=\"nb_views\" />\n *\n * You can customize the `step` props (which defaults to \"any\")\n * @example\n * <NumberInput source=\"nb_views\" step={1} />\n *\n * The object passed as `options` props is passed to the MUI <TextField> component\n */\nexport const NumberInput = ({\n    className,\n    defaultValue = '',\n    format = convertNumberToString,\n    helperText,\n    label,\n    margin = 'dense',\n    onBlur,\n    onChange,\n    parse = convertStringToNumber,\n    resource,\n    source,\n    step,\n    min,\n    max,\n    validate,\n    variant = 'filled',\n    inputProps: overrideInputProps,\n    ...rest\n}: NumberInputProps) => {\n    const {\n        field,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n        id,\n        isRequired,\n    } = useInput({\n        defaultValue,\n        format,\n        onBlur,\n        onChange,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const inputProps = { ...overrideInputProps, step, min, max };\n\n    return (\n        <TextField\n            id={id}\n            {...field}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            type=\"number\"\n            size=\"small\"\n            variant={variant}\n            error={(isTouched || isSubmitted) && invalid}\n            helperText={\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            }\n            label={\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            }\n            margin={margin}\n            inputProps={inputProps}\n            {...sanitizeInputRestProps(rest)}\n        />\n    );\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    step: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nNumberInput.defaultProps = {\n    options: {},\n    step: 'any',\n    textAlign: 'right',\n};\n\nexport interface NumberInputProps\n    extends CommonInputProps,\n        Omit<\n            TextFieldProps,\n            'label' | 'helperText' | 'defaultValue' | 'onChange' | 'onBlur'\n        > {\n    step?: string | number;\n    min?: string | number;\n    max?: string | number;\n}\n\nconst convertStringToNumber = value => {\n    const float = parseFloat(value);\n\n    return isNaN(float) ? null : float;\n};\n\nconst convertNumberToString = value => {\n    return value === null ? '' : value.toString();\n};\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport { TextInput, TextInputProps } from './TextInput';\n\nexport const PasswordInput = (props: PasswordInputProps) => {\n    const { initiallyVisible = false, ...rest } = props;\n    const [visible, setVisible] = useState(initiallyVisible);\n    const translate = useTranslate();\n\n    const handleClick = () => {\n        setVisible(!visible);\n    };\n\n    return (\n        <TextInput\n            type={visible ? 'text' : 'password'}\n            size=\"small\"\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label={translate(\n                                visible\n                                    ? 'ra.input.password.toggle_visible'\n                                    : 'ra.input.password.toggle_hidden'\n                            )}\n                            onClick={handleClick}\n                            size=\"large\"\n                        >\n                            {visible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            }}\n            {...rest}\n        />\n    );\n};\n\nexport interface PasswordInputProps extends TextInputProps {\n    initiallyVisible?: boolean;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useInput, FieldTitle } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport {\n    ResettableTextField,\n    ResettableTextFieldProps,\n} from './ResettableTextField';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\n\n/**\n * An Input component for a string\n *\n * @example\n * <TextInput source=\"first_name\" />\n *\n * You can customize the `type` props (which defaults to \"text\").\n * Note that, due to a React bug, you should use `<NumberField>` instead of using type=\"number\".\n * @example\n * <TextInput source=\"email\" type=\"email\" />\n * <NumberInput source=\"nb_views\" />\n *\n * The object passed as `options` props is passed to the <ResettableTextField> component\n */\nexport const TextInput = (props: TextInputProps) => {\n    const {\n        className,\n        defaultValue = '',\n        label,\n        format,\n        helperText,\n        onBlur,\n        onChange,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest\n    } = props;\n    const {\n        field,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n        id,\n        isRequired,\n    } = useInput({\n        defaultValue,\n        format,\n        parse,\n        resource,\n        source,\n        type: 'text',\n        validate,\n        onBlur,\n        onChange,\n        ...rest,\n    });\n    return (\n        <ResettableTextField\n            id={id}\n            {...field}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            label={\n                label !== '' &&\n                label !== false && (\n                    <FieldTitle\n                        label={label}\n                        source={source}\n                        resource={resource}\n                        isRequired={isRequired}\n                    />\n                )\n            }\n            error={(isTouched || isSubmitted) && invalid}\n            helperText={\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            }\n            {...sanitizeInputRestProps(rest)}\n        />\n    );\n};\n\nTextInput.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n};\n\nTextInput.defaultProps = {\n    options: {},\n};\n\nexport type TextInputProps = CommonInputProps &\n    Omit<ResettableTextFieldProps, 'label' | 'helperText'>;\n","import * as React from 'react';\nimport { forwardRef, useCallback } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    InputAdornment,\n    IconButton,\n    TextField as MuiTextField,\n    TextFieldProps,\n} from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { useTranslate } from 'ra-core';\n\n/**\n * An override of the default MUI TextField which is resettable\n */\nexport const ResettableTextField = forwardRef(\n    (props: ResettableTextFieldProps, ref) => {\n        const {\n            clearAlwaysVisible,\n            InputProps,\n            value,\n            resettable,\n            disabled,\n            variant = 'filled',\n            margin = 'dense',\n            className,\n            ...rest\n        } = props;\n\n        const translate = useTranslate();\n\n        const { onChange, onFocus, onBlur } = props;\n        const handleClickClearButton = useCallback(\n            event => {\n                event.preventDefault();\n                onChange('');\n            },\n            [onChange]\n        );\n\n        const handleFocus = useCallback(\n            event => {\n                onFocus && onFocus(event);\n            },\n            [onFocus]\n        );\n\n        const handleBlur = useCallback(\n            event => {\n                onBlur && onBlur(event);\n            },\n            [onBlur]\n        );\n\n        const {\n            clearButton,\n            clearIcon,\n            inputAdornedEnd,\n            selectAdornment,\n            visibleClearIcon,\n        } = ResettableTextFieldClasses;\n\n        const { endAdornment, ...InputPropsWithoutEndAdornment } =\n            InputProps || {};\n\n        if (clearAlwaysVisible && endAdornment) {\n            throw new Error(\n                'ResettableTextField cannot display both an endAdornment and a clear button always visible'\n            );\n        }\n\n        const getEndAdornment = () => {\n            if (!resettable) {\n                return endAdornment;\n            } else if (!value) {\n                if (clearAlwaysVisible) {\n                    // show clear button, inactive\n                    return (\n                        <InputAdornment\n                            position=\"end\"\n                            classes={{\n                                root: props.select ? selectAdornment : null,\n                            }}\n                        >\n                            <IconButton\n                                className={clearButton}\n                                aria-label={translate(\n                                    'ra.action.clear_input_value'\n                                )}\n                                title={translate('ra.action.clear_input_value')}\n                                disableRipple\n                                disabled={true}\n                                size=\"large\"\n                            >\n                                <ClearIcon\n                                    className={clsx(\n                                        clearIcon,\n                                        visibleClearIcon\n                                    )}\n                                />\n                            </IconButton>\n                        </InputAdornment>\n                    );\n                } else {\n                    if (endAdornment) {\n                        return endAdornment;\n                    } else {\n                        // show spacer\n                        return (\n                            <InputAdornment\n                                position=\"end\"\n                                classes={{\n                                    root: props.select ? selectAdornment : null,\n                                }}\n                            >\n                                <span className={clearButton}>&nbsp;</span>\n                            </InputAdornment>\n                        );\n                    }\n                }\n            } else {\n                // show clear\n                return (\n                    <InputAdornment\n                        position=\"end\"\n                        classes={{\n                            root: props.select ? selectAdornment : null,\n                        }}\n                    >\n                        <IconButton\n                            className={clearButton}\n                            aria-label={translate(\n                                'ra.action.clear_input_value'\n                            )}\n                            title={translate('ra.action.clear_input_value')}\n                            disableRipple\n                            onClick={handleClickClearButton}\n                            onMouseDown={handleMouseDownClearButton}\n                            disabled={disabled}\n                            size=\"large\"\n                        >\n                            <ClearIcon\n                                className={clsx(clearIcon, {\n                                    [visibleClearIcon]:\n                                        clearAlwaysVisible || value,\n                                })}\n                            />\n                        </IconButton>\n                    </InputAdornment>\n                );\n            }\n        };\n\n        return (\n            <StyledTextField\n                value={value}\n                InputProps={{\n                    classes:\n                        props.select && variant === 'filled'\n                            ? { adornedEnd: inputAdornedEnd }\n                            : {},\n                    endAdornment: getEndAdornment(),\n                    ...InputPropsWithoutEndAdornment,\n                }}\n                disabled={disabled}\n                variant={variant}\n                margin={margin}\n                className={className}\n                size=\"small\"\n                {...rest}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                inputRef={ref}\n            />\n        );\n    }\n);\n\nResettableTextField.displayName = 'ResettableTextField';\n\nconst handleMouseDownClearButton = event => {\n    event.preventDefault();\n};\n\nResettableTextField.propTypes = {\n    clearAlwaysVisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    InputProps: PropTypes.object,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    resettable: PropTypes.bool,\n    value: PropTypes.any,\n};\n\ninterface Props {\n    clearAlwaysVisible?: boolean;\n    resettable?: boolean;\n}\n\nexport type ResettableTextFieldProps = Props &\n    Omit<TextFieldProps, 'onChange'> & {\n        onChange?: (eventOrValue: any) => void;\n    };\n\nconst PREFIX = 'RaResettableTextField';\n\nexport const ResettableTextFieldClasses = {\n    clearIcon: `${PREFIX}-clearIcon`,\n    visibleClearIcon: `${PREFIX}-visibleClearIcon`,\n    clearButton: `${PREFIX}-clearButton`,\n    selectAdornment: `${PREFIX}-selectAdornment`,\n    inputAdornedEnd: `${PREFIX}-inputAdornedEnd`,\n};\n\nexport const ResettableTextFieldStyles = {\n    [`& .${ResettableTextFieldClasses.clearIcon}`]: {\n        height: 16,\n        width: 0,\n    },\n    [`& .${ResettableTextFieldClasses.visibleClearIcon}`]: {\n        width: 16,\n    },\n    [`& .${ResettableTextFieldClasses.clearButton}`]: {\n        height: 24,\n        width: 24,\n        padding: 0,\n    },\n    [`& .${ResettableTextFieldClasses.selectAdornment}`]: {\n        position: 'absolute',\n        right: 24,\n    },\n    [`& .${ResettableTextFieldClasses.inputAdornedEnd}`]: {\n        paddingRight: 0,\n    },\n};\n\nconst StyledTextField = styled(MuiTextField, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(ResettableTextFieldStyles);\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    FormControl,\n    FormHelperText,\n    FormLabel,\n    RadioGroup,\n} from '@mui/material';\nimport { RadioGroupProps } from '@mui/material/RadioGroup';\nimport { FormControlProps } from '@mui/material/FormControl';\nimport get from 'lodash/get';\nimport {\n    useInput,\n    FieldTitle,\n    ChoicesProps,\n    warning,\n    useChoicesContext,\n} from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { RadioButtonGroupInputItem } from './RadioButtonGroupInputItem';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\n\n/**\n * An Input component for a radio button group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <RadioButtonGroupInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <RadioButtonGroupInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <RadioButtonGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <RadioButtonGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <RadioButtonGroup> component\n */\nexport const RadioButtonGroupInput = (props: RadioButtonGroupInputProps) => {\n    const {\n        choices: choicesProp,\n        className,\n        format,\n        helperText,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        label,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        optionText,\n        optionValue,\n        parse,\n        resource: resourceProp,\n        row,\n        source: sourceProp,\n        translateChoice,\n        validate,\n        ...rest\n    } = props;\n\n    const { allChoices, isLoading, resource, source } = useChoicesContext({\n        choices: choicesProp,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n\n    warning(\n        source === undefined,\n        `If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the source prop`\n    );\n\n    warning(\n        allChoices === undefined,\n        `If you're not wrapping the RadioButtonGroupInput inside a ReferenceInput, you must provide the choices prop`\n    );\n\n    const { id, isRequired, fieldState, field, formState } = useInput({\n        format,\n        onBlur,\n        onChange,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const { error, invalid, isTouched } = fieldState;\n    const { isSubmitted } = formState;\n\n    if (isLoading) {\n        return (\n            <Labeled\n                htmlFor={id}\n                label={label}\n                source={source}\n                resource={resource}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                isRequired={isRequired}\n            >\n                <LinearProgress />\n            </Labeled>\n        );\n    }\n    return (\n        <StyledFormControl\n            component=\"fieldset\"\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            margin={margin}\n            error={(isTouched || isSubmitted) && invalid}\n            {...sanitizeRestProps(rest)}\n        >\n            <FormLabel\n                component=\"legend\"\n                className={RadioButtonGroupInputClasses.label}\n            >\n                <FieldTitle\n                    label={label}\n                    source={source}\n                    resource={resource}\n                    isRequired={isRequired}\n                />\n            </FormLabel>\n\n            <RadioGroup\n                id={id}\n                row={row}\n                {...field}\n                {...sanitizeRestProps(rest)}\n            >\n                {allChoices.map(choice => (\n                    <RadioButtonGroupInputItem\n                        key={get(choice, optionValue)}\n                        choice={choice}\n                        optionText={optionText}\n                        optionValue={optionValue}\n                        source={source}\n                        translateChoice={translateChoice}\n                    />\n                ))}\n            </RadioGroup>\n            <FormHelperText>\n                <InputHelperText\n                    touched={isTouched || isSubmitted}\n                    error={error?.message}\n                    helperText={helperText}\n                />\n            </FormHelperText>\n        </StyledFormControl>\n    );\n};\n\nRadioButtonGroupInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.any),\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nRadioButtonGroupInput.defaultProps = {\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    row: true,\n    translateChoice: true,\n};\n\nconst sanitizeRestProps = ({\n    afterSubmit,\n    allowNull,\n    beforeSubmit,\n    choices,\n    className,\n    crudGetMatching,\n    crudGetOne,\n    data,\n    filter,\n    filterToQuery,\n    formatOnBlur,\n    isEqual,\n    limitChoicesToValue,\n    multiple,\n    name,\n    pagination,\n    perPage,\n    ref,\n    reference,\n    refetch,\n    render,\n    setFilter,\n    setPagination,\n    setSort,\n    sort,\n    subscription,\n    type,\n    validateFields,\n    validation,\n    value,\n    ...rest\n}: any) => sanitizeInputRestProps(rest);\n\nexport type RadioButtonGroupInputProps = CommonInputProps &\n    ChoicesProps &\n    FormControlProps &\n    RadioGroupProps;\n\nconst PREFIX = 'RaRadioButtonGroupInput';\n\nexport const RadioButtonGroupInputClasses = {\n    label: `${PREFIX}-label`,\n};\n\nconst StyledFormControl = styled(FormControl, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${RadioButtonGroupInputClasses.label}`]: {\n        transform: 'translate(0, 5px) scale(0.75)',\n        transformOrigin: `top ${theme.direction === 'ltr' ? 'left' : 'right'}`,\n    },\n}));\n","import * as React from 'react';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport { useChoices } from 'ra-core';\n\nexport const RadioButtonGroupInputItem = ({\n    choice,\n    optionText,\n    optionValue,\n    source,\n    translateChoice,\n}) => {\n    const { getChoiceText, getChoiceValue } = useChoices({\n        optionText,\n        optionValue,\n        translateChoice,\n    });\n    const label = getChoiceText(choice);\n    const value = getChoiceValue(choice);\n\n    const nodeId = `${source}_${value}`;\n\n    return (\n        <FormControlLabel\n            label={label}\n            htmlFor={nodeId}\n            value={value}\n            control={<Radio id={nodeId} color=\"primary\" />}\n        />\n    );\n};\n\nexport default RadioButtonGroupInputItem;\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputProps,\n    useReferenceArrayInputController,\n    ResourceContextProvider,\n    ChoicesContextProvider,\n} from 'ra-core';\nimport { ReferenceError } from './ReferenceError';\n\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using\n * `dataProvider.getMany()`) as well as possible resources (using\n * `dataProvider.getList()`) in the reference endpoint. It then\n * delegates rendering to its child component, to which it makes the possible\n * choices available through the ChoicesContext.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput create a ChoicesContext which provides\n * a `setFilters` function. You can call this function to filter the results.\n */\nexport const ReferenceArrayInput = (props: ReferenceArrayInputProps) => {\n    const { children, label, reference } = props;\n    if (React.Children.count(children) !== 1) {\n        throw new Error(\n            '<ReferenceArrayInput> only accepts a single child (like <Datagrid>)'\n        );\n    }\n\n    const controllerProps = useReferenceArrayInputController(props);\n\n    // This is not a form error but an unrecoverable error from the\n    // useReferenceInputController hook\n    if (controllerProps.error) {\n        return <ReferenceError label={label} error={controllerProps.error} />;\n    }\n\n    return (\n        <ResourceContextProvider value={reference}>\n            <ChoicesContextProvider value={controllerProps}>\n                {children}\n            </ChoicesContextProvider>\n        </ResourceContextProvider>\n    );\n};\n\nReferenceArrayInput.propTypes = {\n    children: PropTypes.element.isRequired,\n    filter: PropTypes.object,\n    label: PropTypes.string,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n};\n\nReferenceArrayInput.defaultProps = {\n    filter: {},\n    page: 1,\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\n\nexport interface ReferenceArrayInputProps extends InputProps {\n    children: ReactElement;\n    label?: string;\n    page?: number;\n    perPage?: number;\n    reference: string;\n    resource?: string;\n    enableGetChoices?: (filters: any) => boolean;\n    [key: string]: any;\n}\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\n\nexport const ReferenceError = ({\n    label,\n    error,\n}: {\n    label?: string | ReactElement | false;\n    error: Error;\n}) => (\n    <TextField\n        error\n        disabled\n        label={label}\n        value={error?.message}\n        margin=\"normal\"\n    />\n);\n\nReferenceError.propTypes = {\n    error: PropTypes.object.isRequired,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.bool,\n    ]),\n};\n","import React, { Children, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ChoicesContextProvider,\n    useReferenceInputController,\n    InputProps,\n    ResourceContextProvider,\n} from 'ra-core';\n\nimport { ReferenceError } from './ReferenceError';\n\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using `dataProvider.getList()`), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput create a ChoicesContext which provides\n * a `setFilters` function. You can call this function to filter the results.\n */\nexport const ReferenceInput = (props: ReferenceInputProps) => {\n    const { children, label, reference } = props;\n\n    const controllerProps = useReferenceInputController(props);\n\n    if (Children.count(children) !== 1) {\n        throw new Error('<ReferenceInput> only accepts a single child');\n    }\n\n    // This is not a form error but an unrecoverable error from the\n    // useReferenceInputController hook\n    if (controllerProps.error) {\n        return <ReferenceError label={label} error={controllerProps.error} />;\n    }\n\n    return (\n        <ResourceContextProvider value={reference}>\n            <ChoicesContextProvider value={controllerProps}>\n                {children}\n            </ChoicesContextProvider>\n        </ResourceContextProvider>\n    );\n};\n\nReferenceInput.propTypes = {\n    children: PropTypes.element.isRequired,\n    filter: PropTypes.object,\n    label: PropTypes.string,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    record: PropTypes.object,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n};\n\nReferenceInput.defaultProps = {\n    filter: {},\n    page: 1,\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\n\nexport interface ReferenceInputProps extends InputProps {\n    children: ReactElement;\n    label?: string;\n    page?: number;\n    perPage?: number;\n    reference: string;\n    // @deprecated\n    referenceSource?: (resource: string, source: string) => string;\n    resource?: string;\n    enableGetChoices?: (filters: any) => boolean;\n    [key: string]: any;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { TextInput, TextInputProps } from './TextInput';\n\nexport const SearchInput = (props: SearchInputProps) => {\n    const translate = useTranslate();\n\n    if (props.label) {\n        throw new Error(\n            \"<SearchInput> isn't designed to be used with a label prop. Use <TextInput> if you need a label.\"\n        );\n    }\n\n    return (\n        <StyledTextInput\n            hiddenLabel\n            label=\"\"\n            resettable\n            placeholder={translate('ra.action.search')}\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <SearchIcon color=\"disabled\" />\n                    </InputAdornment>\n                ),\n            }}\n            size=\"small\"\n            {...props}\n        />\n    );\n};\n\nexport type SearchInputProps = CommonInputProps & TextInputProps;\n\nconst PREFIX = 'RaSearchInput';\n\nconst StyledTextInput = styled(TextInput, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    marginTop: 0,\n});\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Select,\n    MenuItem,\n    InputLabel,\n    FormHelperText,\n    FormControl,\n    Chip,\n} from '@mui/material';\nimport {\n    ChoicesProps,\n    FieldTitle,\n    useInput,\n    useChoicesContext,\n    useChoices,\n} from 'ra-core';\nimport { InputHelperText } from './InputHelperText';\nimport { FormControlProps } from '@mui/material/FormControl';\n\nimport { LinearProgress } from '../layout';\nimport { CommonInputProps } from './CommonInputProps';\nimport { Labeled } from '../Labeled';\nimport {\n    SupportCreateSuggestionOptions,\n    useSupportCreateSuggestion,\n} from './useSupportCreateSuggestion';\n\n/**\n * An Input component for a select box allowing multiple selections, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'programming', name: 'Programming' },\n *    { id: 'lifestyle', name: 'Lifestyle' },\n *    { id: 'photography', name: 'Photography' },\n * ];\n * <SelectArrayInput source=\"tags\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectArrayInput source=\"authors\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectArrayInput source=\"authors\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.tags.programming' },\n *    { id: 'lifestyle', name: 'myroot.tags.lifestyle' },\n *    { id: 'photography', name: 'myroot.tags.photography' },\n * ];\n */\nexport const SelectArrayInput = (props: SelectArrayInputProps) => {\n    const {\n        choices: choicesProp,\n        className,\n        create,\n        createLabel,\n        createValue,\n        disableValue,\n        format,\n        helperText,\n        label,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        onCreate,\n        optionText,\n        optionValue,\n        parse,\n        resource: resourceProp,\n        source: sourceProp,\n        translateChoice,\n        validate,\n        variant = 'filled',\n        ...rest\n    } = props;\n\n    const inputLabel = useRef(null);\n\n    const { allChoices, isLoading, source, resource } = useChoicesContext({\n        choices: choicesProp,\n        isLoading: isLoadingProp,\n        isFetching: isFetchingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n\n    const { getChoiceText, getChoiceValue, getDisableValue } = useChoices({\n        optionText,\n        optionValue,\n        disableValue,\n        translateChoice,\n    });\n\n    const {\n        field,\n        isRequired,\n        fieldState: { error, invalid, isTouched },\n        formState: { isSubmitted },\n    } = useInput({\n        format,\n        onBlur,\n        onChange,\n        parse,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const handleChange = useCallback(\n        (eventOrChoice: any) => {\n            // We might receive an event from the mui component\n            // In this case, it will be the choice id\n            // eslint-disable-next-line eqeqeq\n            if (eventOrChoice?.target?.value != undefined) {\n                field.onChange(eventOrChoice.target.value);\n            } else {\n                // Or we might receive a choice directly, for instance a newly created one\n                field.onChange([\n                    ...(field.value || []),\n                    getChoiceValue(eventOrChoice),\n                ]);\n            }\n        },\n        [field, getChoiceValue]\n    );\n\n    const {\n        getCreateItem,\n        handleChange: handleChangeWithCreateSupport,\n        createElement,\n    } = useSupportCreateSuggestion({\n        create,\n        createLabel,\n        createValue,\n        handleChange,\n        onCreate,\n        optionText,\n    });\n\n    const createItem = create || onCreate ? getCreateItem() : null;\n    const finalChoices =\n        create || onCreate\n            ? [...(allChoices || []), createItem]\n            : allChoices || [];\n\n    const renderMenuItemOption = useCallback(\n        choice =>\n            !!createItem &&\n            choice?.id === createItem.id &&\n            typeof optionText === 'function'\n                ? createItem.name\n                : getChoiceText(choice),\n        [createItem, getChoiceText, optionText]\n    );\n\n    const renderMenuItem = useCallback(\n        choice => {\n            return choice ? (\n                <MenuItem\n                    key={getChoiceValue(choice)}\n                    value={getChoiceValue(choice)}\n                    disabled={getDisableValue(choice)}\n                >\n                    {renderMenuItemOption(\n                        !!createItem && choice?.id === createItem.id\n                            ? createItem\n                            : choice\n                    )}\n                </MenuItem>\n            ) : null;\n        },\n        [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]\n    );\n\n    if (isLoading) {\n        return (\n            <Labeled\n                label={label}\n                source={source}\n                resource={resource}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                isRequired={isRequired}\n            >\n                <LinearProgress />\n            </Labeled>\n        );\n    }\n\n    return (\n        <>\n            <StyledFormControl\n                margin={margin}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                error={(isTouched || isSubmitted) && invalid}\n                variant={variant}\n                {...sanitizeRestProps(rest)}\n            >\n                <InputLabel\n                    ref={inputLabel}\n                    id={`${label}-outlined-label`}\n                    error={(isTouched || isSubmitted) && invalid}\n                >\n                    <FieldTitle\n                        label={label}\n                        source={source}\n                        resource={resource}\n                        isRequired={isRequired}\n                    />\n                </InputLabel>\n                <Select\n                    autoWidth\n                    labelId={`${label}-outlined-label`}\n                    multiple\n                    error={(isTouched || isSubmitted) && invalid}\n                    renderValue={(selected: any[]) => (\n                        <div className={SelectArrayInputClasses.chips}>\n                            {selected\n                                .map(item =>\n                                    (allChoices || []).find(\n                                        choice =>\n                                            getChoiceValue(choice) === item\n                                    )\n                                )\n                                .filter(item => !!item)\n                                .map(item => (\n                                    <Chip\n                                        key={getChoiceValue(item)}\n                                        label={renderMenuItemOption(item)}\n                                        className={SelectArrayInputClasses.chip}\n                                        size=\"small\"\n                                    />\n                                ))}\n                        </div>\n                    )}\n                    data-testid=\"selectArray\"\n                    size=\"small\"\n                    {...field}\n                    onChange={handleChangeWithCreateSupport}\n                    value={field.value || []}\n                >\n                    {finalChoices.map(renderMenuItem)}\n                </Select>\n                <FormHelperText error={isTouched && !!error}>\n                    <InputHelperText\n                        touched={isTouched || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                </FormHelperText>\n            </StyledFormControl>\n            {createElement}\n        </>\n    );\n};\n\nexport type SelectArrayInputProps = ChoicesProps &\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\n    Omit<CommonInputProps, 'source'> &\n    Omit<FormControlProps, 'defaultValue' | 'onBlur' | 'onChange'> & {\n        disableValue?: string;\n        source?: string;\n    };\n\nSelectArrayInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.object),\n    className: PropTypes.string,\n    children: PropTypes.node,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    disableValue: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nSelectArrayInput.defaultProps = {\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    disableValue: 'disabled',\n    translateChoice: true,\n};\n\nconst sanitizeRestProps = ({\n    alwaysOn,\n    choices,\n    classNamInputWithOptionsPropse,\n    componenInputWithOptionsPropst,\n    crudGetMInputWithOptionsPropsatching,\n    crudGetOInputWithOptionsPropsne,\n    defaultValue,\n    disableValue,\n    emptyText,\n    enableGetChoices,\n    filter,\n    filterToQuery,\n    formClassName,\n    initializeForm,\n    initialValue,\n    input,\n    isRequired,\n    label,\n    limitChoicesToValue,\n    loaded,\n    locale,\n    meta,\n    onChange,\n    options,\n    optionValue,\n    optionText,\n    perPage,\n    record,\n    reference,\n    resource,\n    setFilter,\n    setPagination,\n    setSort,\n    sort,\n    source,\n    textAlign,\n    translate,\n    translateChoice,\n    validation,\n    ...rest\n}: any) => rest;\n\nconst PREFIX = 'RaSelectArrayInput';\n\nexport const SelectArrayInputClasses = {\n    chips: `${PREFIX}-chips`,\n    chip: `${PREFIX}-chip`,\n};\n\nconst StyledFormControl = styled(FormControl, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    minWidth: theme.spacing(20),\n    [`& .${SelectArrayInputClasses.chips}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${SelectArrayInputClasses.chip}`]: {\n        marginTop: theme.spacing(0.5),\n        marginRight: theme.spacing(0.5),\n    },\n}));\n","import * as React from 'react';\nimport { ReactElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport MenuItem from '@mui/material/MenuItem';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport {\n    useChoicesContext,\n    useInput,\n    FieldTitle,\n    useTranslate,\n    ChoicesProps,\n    useChoices,\n} from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport {\n    ResettableTextField,\n    ResettableTextFieldStyles,\n} from './ResettableTextField';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\nimport {\n    useSupportCreateSuggestion,\n    SupportCreateSuggestionOptions,\n} from './useSupportCreateSuggestion';\n\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n * <SelectInput source=\"author\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\nexport const SelectInput = (props: SelectInputProps) => {\n    const {\n        choices: choicesProp,\n        className,\n        create,\n        createLabel,\n        createValue,\n        defaultValue = '',\n        disableValue,\n        emptyText,\n        emptyValue,\n        format,\n        filter,\n        helperText,\n        isFetching: isFetchingProp,\n        isLoading: isLoadingProp,\n        label,\n        margin = 'dense',\n        onBlur,\n        onChange,\n        onCreate,\n        optionText,\n        optionValue,\n        parse,\n        resource: resourceProp,\n        source: sourceProp,\n        translateChoice,\n        validate,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const { allChoices, isLoading, source, resource } = useChoicesContext({\n        choices: choicesProp,\n        isLoading: isLoadingProp,\n        isFetching: isFetchingProp,\n        resource: resourceProp,\n        source: sourceProp,\n    });\n\n    const { getChoiceText, getChoiceValue, getDisableValue } = useChoices({\n        optionText,\n        optionValue,\n        disableValue,\n        translateChoice,\n    });\n    const {\n        field,\n        fieldState,\n        id,\n        isRequired,\n        formState: { isSubmitted },\n    } = useInput({\n        defaultValue,\n        format,\n        parse,\n        onBlur,\n        onChange,\n        resource,\n        source,\n        validate,\n        ...rest,\n    });\n\n    const { error, invalid, isTouched } = fieldState;\n\n    const renderEmptyItemOption = useCallback(() => {\n        return React.isValidElement(emptyText)\n            ? emptyText\n            : emptyText === ''\n            ? ' ' // em space, forces the display of an empty line of normal height\n            : translate(emptyText, { _: emptyText });\n    }, [emptyText, translate]);\n\n    const renderMenuItemOption = useCallback(choice => getChoiceText(choice), [\n        getChoiceText,\n    ]);\n\n    const handleChange = useCallback(\n        async (eventOrChoice: any) => {\n            // We might receive an event from the mui component\n            // In this case, it will be the choice id\n            // eslint-disable-next-line eqeqeq\n            if (eventOrChoice?.target?.value != undefined) {\n                field.onChange(eventOrChoice.target.value);\n            } else {\n                // Or we might receive a choice directly, for instance a newly created one\n                field.onChange(getChoiceValue(eventOrChoice));\n            }\n        },\n        [field, getChoiceValue]\n    );\n\n    const {\n        getCreateItem,\n        handleChange: handleChangeWithCreateSupport,\n        createElement,\n    } = useSupportCreateSuggestion({\n        create,\n        createLabel,\n        createValue,\n        handleChange,\n        onCreate,\n        optionText,\n    });\n\n    const createItem = create || onCreate ? getCreateItem() : null;\n    const finalChoices =\n        create || onCreate ? [...allChoices, createItem] : allChoices;\n\n    const renderMenuItem = useCallback(\n        choice => {\n            return choice ? (\n                <MenuItem\n                    key={getChoiceValue(choice)}\n                    value={getChoiceValue(choice)}\n                    disabled={getDisableValue(choice)}\n                >\n                    {renderMenuItemOption(\n                        !!createItem && choice?.id === createItem.id\n                            ? createItem\n                            : choice\n                    )}\n                </MenuItem>\n            ) : null;\n        },\n        [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]\n    );\n\n    if (isLoading) {\n        return (\n            <Labeled\n                label={label}\n                source={source}\n                resource={resource}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                isRequired={isRequired}\n            >\n                <LinearProgress />\n            </Labeled>\n        );\n    }\n\n    return (\n        <>\n            <StyledResettableTextField\n                id={id}\n                {...field}\n                className={clsx('ra-input', `ra-input-${source}`, className)}\n                onChange={handleChangeWithCreateSupport}\n                select\n                label={\n                    label !== '' &&\n                    label !== false && (\n                        <FieldTitle\n                            label={label}\n                            source={source}\n                            resource={resource}\n                            isRequired={isRequired}\n                        />\n                    )\n                }\n                clearAlwaysVisible\n                error={(isTouched || isSubmitted) && invalid}\n                helperText={\n                    <InputHelperText\n                        touched={isTouched || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                }\n                margin={margin}\n                {...sanitizeRestProps(rest)}\n            >\n                <MenuItem\n                    value={emptyValue}\n                    key=\"null\"\n                    aria-label={translate('ra.action.clear_input_value')}\n                    title={translate('ra.action.clear_input_value')}\n                >\n                    {renderEmptyItemOption()}\n                </MenuItem>\n                {finalChoices.map(renderMenuItem)}\n            </StyledResettableTextField>\n            {createElement}\n        </>\n    );\n};\n\nSelectInput.propTypes = {\n    emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    emptyValue: PropTypes.any,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    disableValue: PropTypes.string,\n    resettable: PropTypes.bool,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nSelectInput.defaultProps = {\n    emptyText: '',\n    emptyValue: '',\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n    disableValue: 'disabled',\n};\n\nconst sanitizeRestProps = ({\n    afterSubmit,\n    allowNull,\n    beforeSubmit,\n    choices,\n    className,\n    crudGetMatching,\n    crudGetOne,\n    data,\n    field,\n    fieldState,\n    formState,\n    filter,\n    filterToQuery,\n    formatOnBlur,\n    isEqual,\n    limitChoicesToValue,\n    multiple,\n    name,\n    pagination,\n    perPage,\n    ref,\n    reference,\n    refetch,\n    render,\n    setFilter,\n    setPagination,\n    setSort,\n    sort,\n    subscription,\n    type,\n    validateFields,\n    validation,\n    value,\n    ...rest\n}: any) => sanitizeInputRestProps(rest);\n\nconst PREFIX = 'RaSelectInput';\n\nconst StyledResettableTextField = styled(ResettableTextField, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    ...ResettableTextFieldStyles,\n    minWidth: theme.spacing(20),\n}));\n\nexport type SelectInputProps = Omit<CommonInputProps, 'source'> &\n    ChoicesProps &\n    Omit<SupportCreateSuggestionOptions, 'handleChange'> &\n    Omit<TextFieldProps, 'label' | 'helperText' | 'classes'> & {\n        disableValue?: string;\n        emptyText?: string | ReactElement;\n        emptyValue?: any;\n        // Source is optional as AutocompleteInput can be used inside a ReferenceInput that already defines the source\n        source?: string;\n    };\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, ReactNode } from 'react';\nimport {\n    TranslatableContextProvider,\n    useTranslatable,\n    UseTranslatableOptions,\n} from 'ra-core';\nimport { TranslatableInputsTabs } from './TranslatableInputsTabs';\nimport { TranslatableInputsTabContent } from './TranslatableInputsTabContent';\n\n/**\n * Provides a way to edit multiple languages for any input passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableInputs locales={['en', 'fr']}>\n *     <TextInput source=\"title\" />\n *     <RichTextInput source=\"description\" />\n * </Translatable>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableInputs\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextInput source=\"title\" />\n * </Translatable>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={event => selectLocale(event.target.value)}>\n *             {locales.map((locale) => (\n *                 <option selected={locale === selectedLocale}>\n *                     {locale}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * @param props The component props\n * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * @param {string[]} props.locales An array of the possible locales. For example: `['en', 'fr'].\n * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to MUI tabs.\n */\nexport const TranslatableInputs = (\n    props: TranslatableInputsProps\n): ReactElement => {\n    const {\n        className,\n        defaultLocale,\n        locales,\n        groupKey = '',\n        selector = <TranslatableInputsTabs groupKey={groupKey} />,\n        children,\n        variant,\n        margin,\n    } = props;\n    const context = useTranslatable({ defaultLocale, locales });\n\n    return (\n        <Root className={className}>\n            <TranslatableContextProvider value={context}>\n                {selector}\n                {locales.map(locale => (\n                    <TranslatableInputsTabContent\n                        key={locale}\n                        locale={locale}\n                        groupKey={groupKey}\n                        variant={variant}\n                        margin={margin}\n                    >\n                        {children}\n                    </TranslatableInputsTabContent>\n                ))}\n            </TranslatableContextProvider>\n        </Root>\n    );\n};\n\nexport interface TranslatableInputsProps extends UseTranslatableOptions {\n    className?: string;\n    selector?: ReactElement;\n    children: ReactNode;\n    groupKey?: string;\n    margin?: 'none' | 'normal' | 'dense';\n    variant?: 'standard' | 'outlined' | 'filled';\n}\n\nconst PREFIX = 'RaTranslatableInputs';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexGrow: 1,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5),\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport { AppBar, Tabs, TabsProps } from '@mui/material';\nimport { useTranslatableContext } from 'ra-core';\nimport { TranslatableInputsTab } from './TranslatableInputsTab';\nimport { AppBarProps } from '../layout';\n\n/**\n * Default locale selector for the TranslatableInputs component. Generates a tab for each specified locale.\n * @see TranslatableInputs\n */\nexport const TranslatableInputsTabs = (\n    props: TranslatableInputsTabsProps & AppBarProps\n): ReactElement => {\n    const { groupKey, TabsProps: tabsProps } = props;\n    const { locales, selectLocale, selectedLocale } = useTranslatableContext();\n\n    const handleChange = (event, newLocale): void => {\n        selectLocale(newLocale);\n    };\n\n    return (\n        <StyledAppBar\n            color=\"default\"\n            position=\"static\"\n            className={TranslatableInputsTabsClasses.root}\n        >\n            <Tabs\n                value={selectedLocale}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                className={TranslatableInputsTabsClasses.tabs}\n                {...tabsProps}\n            >\n                {locales.map(locale => (\n                    <TranslatableInputsTab\n                        key={locale}\n                        value={locale}\n                        locale={locale}\n                        groupKey={groupKey}\n                    />\n                ))}\n            </Tabs>\n        </StyledAppBar>\n    );\n};\n\nexport interface TranslatableInputsTabsProps {\n    groupKey?: string;\n    TabsProps?: TabsProps;\n}\n\nconst PREFIX = 'RaTranslatableInputsTabs';\n\nexport const TranslatableInputsTabsClasses = {\n    root: `${PREFIX}-root`,\n    tabs: `${PREFIX}-tabs`,\n};\n\nconst StyledAppBar = styled(AppBar, { name: PREFIX })(({ theme }) => ({\n    [`&.${TranslatableInputsTabsClasses.root}`]: {\n        boxShadow: 'none',\n        borderRadius: 0,\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n        border: `1px solid ${theme.palette.divider}`,\n    },\n\n    [`& .${TranslatableInputsTabsClasses.tabs}`]: {\n        minHeight: theme.spacing(3),\n    },\n}));\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tab, { TabProps } from '@mui/material/Tab';\nimport { useFormGroup, useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\nimport clsx from 'clsx';\n\n/**\n * Single tab that selects a locale in a TranslatableInputs component.\n * @see TranslatableInputs\n */\nexport const TranslatableInputsTab = (\n    props: TranslatableInputsTabProps & TabProps\n) => {\n    const { groupKey = '', locale, ...rest } = props;\n    const { isValid, isTouched } = useFormGroup(`${groupKey}${locale}`);\n    const translate = useTranslate();\n\n    return (\n        <StyledTab\n            id={`translatable-header-${groupKey}${locale}`}\n            label={translate(`ra.locales.${locale}`, {\n                _: capitalize(locale),\n            })}\n            className={clsx(TranslatableInputsTabClasses.root, {\n                [TranslatableInputsTabClasses.error]: !isValid && isTouched,\n            })}\n            {...rest}\n        />\n    );\n};\n\nexport interface TranslatableInputsTabProps {\n    groupKey?: string;\n    locale: string;\n}\n\nconst PREFIX = 'RaTranslatableInputsTab';\n\nexport const TranslatableInputsTabClasses = {\n    root: `${PREFIX}-root`,\n    error: `${PREFIX}-error`,\n};\n\nconst StyledTab = styled(Tab, { name: PREFIX })(({ theme }) => ({\n    [`&.${TranslatableInputsTabClasses.root}`]: {\n        fontSize: '0.8em',\n        minHeight: theme.spacing(3),\n        minWidth: theme.spacing(6),\n    },\n\n    [`&.${TranslatableInputsTabClasses.error}`]: {\n        color: theme.palette.error.main,\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n    Children,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport {\n    FormGroupContextProvider,\n    RaRecord,\n    useTranslatableContext,\n} from 'ra-core';\n\n/**\n * Default container for a group of translatable inputs inside a TranslatableInputs component.\n * @see TranslatableInputs\n */\nexport const TranslatableInputsTabContent = (\n    props: TranslatableInputsTabContentProps\n): ReactElement => {\n    const {\n        children,\n        groupKey = '',\n        locale,\n        margin,\n        variant,\n        ...other\n    } = props;\n    const { selectedLocale, getLabel, getSource } = useTranslatableContext();\n\n    return (\n        <FormGroupContextProvider name={`${groupKey}${locale}`}>\n            <Root\n                role=\"tabpanel\"\n                hidden={selectedLocale !== locale}\n                id={`translatable-content-${groupKey}${locale}`}\n                aria-labelledby={`translatable-header-${groupKey}${locale}`}\n                className={TranslatableInputsTabContentClasses.root}\n                {...other}\n            >\n                {Children.map(children, child =>\n                    isValidElement(child)\n                        ? cloneElement(child, {\n                              ...child.props,\n                              label: getLabel(\n                                  child.props.source,\n                                  child.props.label\n                              ),\n                              source: getSource(child.props.source, locale),\n                          })\n                        : null\n                )}\n            </Root>\n        </FormGroupContextProvider>\n    );\n};\n\nexport type TranslatableInputsTabContentProps<\n    RecordType extends RaRecord | Omit<RaRecord, 'id'> = any\n> = {\n    children: ReactNode;\n    groupKey?: string;\n    locale: string;\n    record?: RecordType;\n    resource?: string;\n    margin?: 'none' | 'normal' | 'dense';\n    variant?: 'standard' | 'outlined' | 'filled';\n};\n\nconst PREFIX = 'RaTranslatableInputsTabContent';\n\nexport const TranslatableInputsTabContentClasses = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('div', { name: PREFIX })(({ theme }) => ({\n    [`&.${TranslatableInputsTabContentClasses.root}`]: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        borderRadius: 0,\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        border: `1px solid ${theme.palette.divider}`,\n        borderTop: 0,\n    },\n}));\n","import { ThemeOptions } from '@mui/material';\n\nexport const defaultTheme = {\n    palette: {\n        background: {\n            default: '#fafafb',\n        },\n        secondary: {\n            light: '#6ec6ff',\n            main: '#2196f3',\n            dark: '#0069c0',\n            contrastText: '#fff',\n        },\n    },\n    typography: {\n        h6: {\n            fontWeight: 400,\n        },\n    },\n    sidebar: {\n        width: 240,\n        closedWidth: 50,\n    },\n    components: {\n        MuiButtonBase: {\n            defaultProps: {\n                // disable ripple for perf reasons\n                disableRipple: true,\n            },\n            styleOverrides: {\n                root: {\n                    '&:hover:active::after': {\n                        // recreate a static ripple color\n                        // use the currentColor to make it work both for outlined and contained buttons\n                        // but to dim the background without dimming the text,\n                        // put another element on top with a limited opacity\n                        content: '\"\"',\n                        display: 'block',\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        top: 0,\n                        right: 0,\n                        backgroundColor: 'currentColor',\n                        opacity: 0.3,\n                        borderRadius: 'inherit',\n                    },\n                    '&:focus::after': {\n                        // This ensures we provide visual cues to users using the keyboard\n                        // recreate a static ripple color\n                        // use the currentColor to make it work both for outlined and contained buttons\n                        // but to dim the background without dimming the text,\n                        // put another element on top with a limited opacity\n                        content: '\"\"',\n                        display: 'block',\n                        width: '100%',\n                        height: '100%',\n                        position: 'absolute',\n                        top: 0,\n                        right: 0,\n                        backgroundColor: 'currentColor',\n                        opacity: 0.3,\n                        borderRadius: 'inherit',\n                    },\n                },\n            },\n        },\n        MuiFilledInput: {\n            styleOverrides: {\n                root: {\n                    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                    '&$disabled': {\n                        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n                    },\n                },\n            },\n        },\n    },\n};\n\nexport interface RaThemeOptions extends ThemeOptions {\n    sidebar?: {\n        width?: number;\n        closedWidth?: number;\n    };\n}\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    CreateContextProvider,\n    RaRecord,\n    ResourceContextProvider,\n    useCheckMinimumRequiredProps,\n    useCreateController,\n} from 'ra-core';\n\nimport { CreateProps } from '../types';\nimport { CreateView } from './CreateView';\n\n/**\n * Page component for the Create view\n *\n * The `<Create>` component renders the page title and actions.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Create> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - mutationOptions\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Create, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostCreate } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" create={PostCreate} />\n *     </Admin>\n * );\n * export default App;\n */\nexport const Create = <RecordType extends RaRecord = any>(\n    props: CreateProps<RecordType> & { children: ReactElement }\n): ReactElement => {\n    useCheckMinimumRequiredProps('Create', ['children'], props);\n    const controllerProps = useCreateController<RecordType>(props);\n    const body = (\n        <CreateContextProvider value={controllerProps}>\n            <CreateView {...props} {...controllerProps} />\n        </CreateContextProvider>\n    );\n    return props.resource ? (\n        // support resource override via props\n        <ResourceContextProvider value={props.resource}>\n            {body}\n        </ResourceContextProvider>\n    ) : (\n        body\n    );\n};\n\nCreate.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    disableAuthentication: PropTypes.bool,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    title: PropTypes.node,\n    record: PropTypes.object,\n    hasList: PropTypes.bool,\n    mutationOptions: PropTypes.object,\n    transform: PropTypes.func,\n    sx: PropTypes.any,\n};\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { RaRecord, CreateControllerProps, useCreateContext } from 'ra-core';\nimport clsx from 'clsx';\n\nimport { CreateProps } from '../types';\nimport { Title } from '../layout';\n\nexport const CreateView = (props: CreateViewProps) => {\n    const {\n        actions,\n        aside,\n        children,\n        className,\n        component: Content = Card,\n        title,\n        ...rest\n    } = props;\n\n    const { defaultTitle } = useCreateContext(props);\n\n    return (\n        <Root\n            className={clsx('create-page', className)}\n            {...sanitizeRestProps(rest)}\n        >\n            <Title title={title} defaultTitle={defaultTitle} />\n            {actions}\n            <div\n                className={clsx(CreateClasses.main, {\n                    [CreateClasses.noActions]: !actions,\n                })}\n            >\n                <Content className={CreateClasses.card}>{children}</Content>\n                {aside}\n            </div>\n        </Root>\n    );\n};\n\ninterface CreateViewProps<RecordType extends RaRecord = any>\n    extends CreateProps<RecordType>,\n        Omit<CreateControllerProps<RecordType>, 'resource'> {\n    children: ReactElement;\n}\n\nCreateView.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    defaultTitle: PropTypes.any,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    mutationOptions: PropTypes.object,\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    save: PropTypes.func,\n    title: PropTypes.node,\n};\n\nconst sanitizeRestProps = ({\n    defaultTitle = null,\n    hasCreate = null,\n    hasEdit = null,\n    hasList = null,\n    hasShow = null,\n    history = null,\n    isFetching = null,\n    isLoading = null,\n    location = null,\n    match = null,\n    mutationOptions = null,\n    options = null,\n    permissions = null,\n    save = null,\n    saving = null,\n    transform = null,\n    ...rest\n}) => rest;\n\nconst PREFIX = 'RaCreate';\n\nexport const CreateClasses = {\n    main: `${PREFIX}-main`,\n    noActions: `${PREFIX}-noActions`,\n    card: `${PREFIX}-card`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${CreateClasses.main}`]: {\n        display: 'flex',\n    },\n\n    [`& .${CreateClasses.noActions}`]: {\n        [theme.breakpoints.up('sm')]: {\n            marginTop: '1em',\n        },\n    },\n\n    [`& .${CreateClasses.card}`]: {\n        flex: '1 1 auto',\n    },\n}));\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TopToolbar from '../layout/TopToolbar';\nimport { ListButton } from '../button';\nimport { useResourceDefinition } from 'ra-core';\n\n/**\n * Action Toolbar for the Create view\n *\n * Internal component. If you want to add or remove actions for a Create view,\n * write your own CreateActions Component. Then, in the <Create> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import Button from '@mui/material/Button';\n *     import { TopToolbar, Create, ListButton } from 'react-admin';\n *\n *     const PostCreateActions = () => (\n *         <TopToolbar>\n *             <ListButton />\n *             // Add your custom actions here //\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostCreate = (props) => (\n *         <Create actions={<PostCreateActions />} {...props}>\n *             ...\n *         </Create>\n *     );\n */\nexport const CreateActions = ({ className, ...rest }: CreateActionsProps) => {\n    const { hasList } = useResourceDefinition(rest);\n    return (\n        <TopToolbar className={className} {...sanitizeRestProps(rest)}>\n            {hasList && <ListButton />}\n        </TopToolbar>\n    );\n};\n\nconst sanitizeRestProps = ({\n    className = null,\n    hasList = null,\n    resource = null,\n    ...rest\n}) => rest;\n\nexport interface CreateActionsProps {\n    className?: string;\n    hasCreate?: boolean;\n    hasEdit?: boolean;\n    hasList?: boolean;\n    hasShow?: boolean;\n    resource?: string;\n}\n\nCreateActions.propTypes = {\n    className: PropTypes.string,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    hasList: PropTypes.bool,\n    resource: PropTypes.string,\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EditContextProvider,\n    ResourceContextProvider,\n    useCheckMinimumRequiredProps,\n    useEditController,\n    RaRecord,\n} from 'ra-core';\nimport { EditProps } from '../types';\nimport { EditView } from './EditView';\n\n/**\n * Page component for the Edit view\n *\n * The `<Edit>` component renders the page title and actions,\n * fetches the record from the data provider.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Edit> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - title\n * - mutationMode\n * - mutationOptions\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Edit, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostEdit } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" edit={PostEdit} />\n *     </Admin>\n * );\n * export default App;\n */\nexport const Edit = <RecordType extends RaRecord = any>(\n    props: EditProps<RecordType> & { children: ReactNode }\n) => {\n    useCheckMinimumRequiredProps('Edit', ['children'], props);\n    const controllerProps = useEditController<RecordType>(props);\n    const body = (\n        <EditContextProvider value={controllerProps}>\n            <EditView {...props} {...controllerProps} />\n        </EditContextProvider>\n    );\n    return props.resource ? (\n        // support resource override via props\n        <ResourceContextProvider value={props.resource}>\n            {body}\n        </ResourceContextProvider>\n    ) : (\n        body\n    );\n};\n\nEdit.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    disableAuthentication: PropTypes.bool,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    hasList: PropTypes.bool,\n    id: PropTypes.any,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    mutationOptions: PropTypes.object,\n    queryOptions: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    title: PropTypes.node,\n    transform: PropTypes.func,\n    sx: PropTypes.any,\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent } from '@mui/material';\nimport clsx from 'clsx';\nimport {\n    EditControllerProps,\n    ComponentPropType,\n    useEditContext,\n    useResourceDefinition,\n} from 'ra-core';\n\nimport { EditActions as DefaultActions } from './EditActions';\nimport { Title } from '../layout';\nimport { EditProps } from '../types';\n\nexport const EditView = (props: EditViewProps) => {\n    const {\n        actions,\n        aside,\n        children,\n        className,\n        component: Content = Card,\n        title,\n        mutationMode,\n        ...rest\n    } = props;\n\n    const { hasShow } = useResourceDefinition();\n    const { defaultTitle, record } = useEditContext(props);\n\n    const finalActions =\n        typeof actions === 'undefined' && hasShow ? (\n            <DefaultActions />\n        ) : (\n            actions\n        );\n    if (!children) {\n        return null;\n    }\n    return (\n        <Root\n            className={clsx('edit-page', className)}\n            {...sanitizeRestProps(rest)}\n        >\n            <Title title={title} defaultTitle={defaultTitle} />\n            {finalActions}\n            <div\n                className={clsx(EditClasses.main, {\n                    [EditClasses.noActions]: !finalActions,\n                })}\n            >\n                <Content className={EditClasses.card}>\n                    {record ? children : <CardContent>&nbsp;</CardContent>}\n                </Content>\n                {aside}\n            </div>\n        </Root>\n    );\n};\n\ninterface EditViewProps\n    extends EditProps,\n        Omit<EditControllerProps, 'resource'> {\n    children: ReactNode;\n}\n\nEditView.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    component: ComponentPropType,\n    defaultTitle: PropTypes.any,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    mutationOptions: PropTypes.object,\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    save: PropTypes.func,\n    title: PropTypes.node,\n};\n\nconst sanitizeRestProps = ({\n    defaultTitle = null,\n    hasCreate = null,\n    hasEdit = null,\n    hasList = null,\n    hasShow = null,\n    history = null,\n    id = null,\n    isFetching = null,\n    isLoading = null,\n    location = null,\n    match = null,\n    options = null,\n    queryOptions = null,\n    mutationOptions = null,\n    permissions = null,\n    refetch = null,\n    resource = null,\n    save = null,\n    saving = null,\n    transform = null,\n    ...rest\n}) => rest;\n\nconst PREFIX = 'RaEdit';\n\nexport const EditClasses = {\n    main: `${PREFIX}-main`,\n    noActions: `${PREFIX}-noActions`,\n    card: `${PREFIX}-card`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`& .${EditClasses.main}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    [`& .${EditClasses.noActions}`]: {\n        marginTop: '1em',\n    },\n    [`& .${EditClasses.card}`]: {\n        flex: '1 1 auto',\n    },\n});\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { RaRecord, useEditContext, useResourceDefinition } from 'ra-core';\nimport { ShowButton } from '../button';\nimport TopToolbar from '../layout/TopToolbar';\n\n/**\n * Action Toolbar for the Edit view\n *\n * Internal component. If you want to add or remove actions for an Edit view,\n * write your own EditActions Component. Then, in the <Edit> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import Button from '@mui/material/Button';\n *     import { TopToolbar, ShowButton, Edit } from 'react-admin';\n *\n *     const PostEditActions = ({ record, resource }) => (\n *         <TopToolbar>\n *             <ShowButton record={record} />\n *             // Add your custom actions here\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostEdit = (props) => (\n *         <Edit actions={<PostEditActions />} {...props}>\n *             ...\n *         </Edit>\n *     );\n */\nexport const EditActions = ({ className, ...rest }: EditActionsProps) => {\n    const { record } = useEditContext(rest);\n    const { hasShow } = useResourceDefinition(rest);\n\n    return (\n        <TopToolbar className={className} {...sanitizeRestProps(rest)}>\n            {hasShow && <ShowButton record={record} />}\n        </TopToolbar>\n    );\n};\n\nconst sanitizeRestProps = ({\n    hasCreate = null,\n    hasEdit = null,\n    hasShow = null,\n    hasList = null,\n    ...rest\n}) => rest;\n\nexport interface EditActionsProps {\n    className?: string;\n    data?: RaRecord;\n    hasCreate?: boolean;\n    hasEdit?: boolean;\n    hasList?: boolean;\n    hasShow?: boolean;\n    resource?: string;\n}\n\nEditActions.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.object,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    hasList: PropTypes.bool,\n    resource: PropTypes.string,\n};\n","import * as React from 'react';\nimport { ReactNode, ReactElement } from 'react';\nimport { SimpleForm } from '../form';\nimport {\n    ArrayInput,\n    BooleanInput,\n    DateInput,\n    NumberInput,\n    ReferenceInput,\n    ReferenceInputProps,\n    ReferenceArrayInput,\n    ReferenceArrayInputProps,\n    SelectInput,\n    SimpleFormIterator,\n    TextInput,\n} from '../input';\nimport { InferredElement, InferredTypeMap, InputProps } from 'ra-core';\n\nexport const editFieldTypes: InferredTypeMap = {\n    form: {\n        component: SimpleForm,\n        representation: (\n            _,\n            children: InferredElement[]\n        ) => `        <SimpleForm>\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\n        </SimpleForm>`,\n    },\n    array: {\n        // eslint-disable-next-line react/display-name\n        component: ({\n            children,\n            ...props\n        }: { children: ReactNode } & InputProps) => (\n            <ArrayInput {...props}>\n                <SimpleFormIterator>{children}</SimpleFormIterator>\n            </ArrayInput>\n        ),\n        representation: (props: InputProps, children: InferredElement[]) =>\n            `<ArrayInput source=\"${\n                props.source\n            }\"><SimpleFormIterator>${children\n                .map(child => child.getRepresentation())\n                .join('\\n')}</SimpleFormIterator></ArrayInput>`,\n    },\n    boolean: {\n        component: BooleanInput,\n        representation: (props: InputProps) =>\n            `<BooleanInput source=\"${props.source}\" />`,\n    },\n    date: {\n        component: DateInput,\n        representation: (props: InputProps) =>\n            `<DateInput source=\"${props.source}\" />`,\n    },\n    email: {\n        component: TextInput,\n        representation: (props: InputProps) =>\n            `<TextInput source=\"${props.source}\" />`,\n    },\n    id: {\n        component: TextInput,\n        representation: (props: InputProps) =>\n            `<TextInput source=\"${props.source}\" />`,\n    },\n    number: {\n        component: NumberInput,\n        representation: (props: InputProps) =>\n            `<NumberInput source=\"${props.source}\" />`,\n    },\n    reference: {\n        component: ReferenceInput,\n        representation: (\n            props: ReferenceInputProps,\n            children: InferredElement\n        ) =>\n            `<ReferenceInput source=\"${props.source}\" reference=\"${\n                props.reference\n            }\">${children.getRepresentation()}</ReferenceInput>`,\n    },\n    referenceChild: {\n        component: (props: { children: ReactNode } & InputProps) => (\n            <SelectInput optionText=\"id\" {...props} />\n        ), // eslint-disable-line react/display-name\n        representation: () => `<SelectInput optionText=\"id\" />`,\n    },\n    referenceArray: {\n        component: ReferenceArrayInput,\n        representation: (props: ReferenceArrayInputProps) =>\n            `<ReferenceArrayInput source=\"${props.source}\" reference=\"${props.reference}\"><TextInput source=\"id\" /></ReferenceArrayInput>`,\n    },\n    referenceArrayChild: {\n        component: (\n            props: { children: ReactNode } & InputProps\n        ): ReactElement => <SelectInput optionText=\"id\" {...props} />, // eslint-disable-line react/display-name\n        representation: () => `<SelectInput optionText=\"id\" />`,\n    },\n    richText: {\n        component: TextInput,\n        representation: (props: InputProps) =>\n            `<TextInput source=\"${props.source}\" />`,\n    },\n    string: {\n        component: TextInput,\n        representation: (props: InputProps) =>\n            `<TextInput source=\"${props.source}\" />`,\n    },\n    url: {\n        component: TextInput,\n        representation: (props: InputProps) =>\n            `<TextInput source=\"${props.source}\" />`,\n    },\n};\n","import * as React from 'react';\nimport {\n    Children,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n    HtmlHTMLAttributes,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Form,\n    FormProps,\n    MutationMode,\n    RaRecord,\n    RedirectionSideEffect,\n} from 'ra-core';\nimport get from 'lodash/get';\n\nimport { TabbedFormView } from './TabbedFormView';\nimport { useFormRootPath } from './useFormRootPath';\n\n/**\n * Form layout where inputs are divided by tab, one input per line.\n *\n * Pass FormTab components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import {\n *     Edit,\n *     TabbedForm,\n *     FormTab,\n *     Datagrid,\n *     TextField,\n *     DateField,\n *     TextInput,\n *     ReferenceManyField,\n *     NumberInput,\n *     DateInput,\n *     BooleanInput,\n *     EditButton\n * } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <TabbedForm>\n *             <FormTab label=\"summary\">\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\n *                 <TextInput source=\"title\" validate={required()} />\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\n *             </FormTab>\n *             <FormTab label=\"body\">\n *                 <RichTextInput source=\"body\" validate={required()} label={false} />\n *             </FormTab>\n *             <FormTab label=\"Miscellaneous\">\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\n *             </FormTab>\n *             <FormTab label=\"comments\">\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" label={false}>\n *                     <Datagrid>\n *                         <TextField source=\"body\" />\n *                         <DateField source=\"created_at\" />\n *                         <EditButton />\n *                     </Datagrid>\n *                 </ReferenceManyField>\n *             </FormTab>\n *         </TabbedForm>\n *     </Edit>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} FormTab elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\nexport const TabbedForm = (props: TabbedFormProps) => {\n    const formRootPathname = useFormRootPath();\n\n    return (\n        <Form formRootPathname={formRootPathname} {...props}>\n            <TabbedFormView formRootPathname={formRootPathname} {...props} />\n        </Form>\n    );\n};\n\nTabbedForm.propTypes = {\n    children: PropTypes.node,\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    formRootPathname: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    // @ts-ignore\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    saving: PropTypes.bool,\n    validate: PropTypes.func,\n};\n\nexport interface TabbedFormProps\n    extends Omit<FormProps, 'render'>,\n        Omit<\n            HtmlHTMLAttributes<HTMLFormElement>,\n            'defaultValue' | 'onSubmit' | 'children'\n        > {\n    children: ReactNode;\n    className?: string;\n    defaultValues?: any;\n    formRootPathname?: string;\n    mutationMode?: MutationMode;\n    record?: RaRecord;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    syncWithLocation?: boolean;\n    tabs?: ReactElement;\n    toolbar?: ReactElement;\n    warnWhenUnsavedChanges?: boolean;\n}\n\nexport const findTabsWithErrors = (children, errors) => {\n    console.warn(\n        'Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/EditTutorial.html#grouping-inputs'\n    );\n\n    return Children.toArray(children).reduce((acc: any[], child) => {\n        if (!isValidElement(child)) {\n            return acc;\n        }\n\n        const inputs = Children.toArray(child.props.children);\n\n        if (\n            inputs.some(\n                input =>\n                    isValidElement(input) && get(errors, input.props.source)\n            )\n        ) {\n            return [...acc, child.props.label];\n        }\n\n        return acc;\n    }, []);\n};\n","import * as React from 'react';\nimport {\n    ChangeEvent,\n    Children,\n    ComponentType,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n    useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Routes,\n    Route,\n    matchPath,\n    useResolvedPath,\n    useLocation,\n} from 'react-router-dom';\nimport { CardContent, Divider, SxProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useResourceContext } from 'ra-core';\nimport { Toolbar } from './Toolbar';\nimport { TabbedFormTabs, getTabbedFormTabFullPath } from './TabbedFormTabs';\n\nexport const TabbedFormView = (props: TabbedFormViewProps): ReactElement => {\n    const {\n        children,\n        className,\n        component: Component = DefaultComponent,\n        formRootPathname,\n        syncWithLocation = true,\n        tabs = DefaultTabs,\n        toolbar = DefaultToolbar,\n    } = props;\n    const location = useLocation();\n    const resolvedPath = useResolvedPath('');\n    const resource = useResourceContext(props);\n    const [tabValue, setTabValue] = useState(0);\n\n    const handleTabChange = (event: ChangeEvent<{}>, value: any): void => {\n        if (!syncWithLocation) {\n            setTabValue(value);\n        }\n    };\n\n    const renderTabHeaders = () =>\n        cloneElement(\n            tabs,\n            {\n                onChange: handleTabChange,\n                syncWithLocation,\n                url: formRootPathname,\n                value: tabValue,\n            },\n            children\n        );\n\n    return (\n        <Root className={clsx('tabbed-form', className)}>\n            {syncWithLocation ? (\n                <Routes>\n                    <Route path=\"/*\" element={renderTabHeaders()} />\n                </Routes>\n            ) : (\n                renderTabHeaders()\n            )}\n            <Divider />\n            <Component>\n                {/* All tabs are rendered (not only the one in focus), to allow validation\n                on tabs not in focus. The tabs receive a `hidden` property, which they'll\n                use to hide the tab using CSS if it's not the one in focus.\n                See https://github.com/marmelab/react-admin/issues/1866 */}\n                {Children.map(children, (tab: ReactElement, index) => {\n                    if (!tab) {\n                        return null;\n                    }\n                    const tabPath = getTabbedFormTabFullPath(tab, index);\n                    const hidden = syncWithLocation\n                        ? !matchPath(\n                              `${resolvedPath.pathname}/${tabPath}`,\n                              location.pathname\n                          )\n                        : tabValue !== index;\n\n                    return isValidElement<any>(tab)\n                        ? React.cloneElement(tab, {\n                              intent: 'content',\n                              resource,\n                              hidden,\n                              value: syncWithLocation ? tabPath : index,\n                          })\n                        : null;\n                })}\n            </Component>\n            {toolbar}\n        </Root>\n    );\n};\n\nTabbedFormView.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    location: PropTypes.object,\n    match: PropTypes.object,\n    // @ts-ignore\n    resource: PropTypes.string,\n    tabs: PropTypes.element,\n    toolbar: PropTypes.element,\n    validate: PropTypes.func,\n    value: PropTypes.number,\n};\n\nconst DefaultTabs = <TabbedFormTabs />;\nconst DefaultComponent = ({ children }) => (\n    <CardContent>{children}</CardContent>\n);\nconst DefaultToolbar = <Toolbar />;\n\nexport interface TabbedFormViewProps {\n    children?: ReactNode;\n    className?: string;\n    component?: ComponentType<any>;\n    resource?: string;\n    formRootPathname?: string;\n    syncWithLocation?: boolean;\n    tabs?: ReactElement;\n    toolbar?: ReactElement;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaTabbedForm';\n\nexport const TabbedFormClasses = {\n    errorTabButton: `${PREFIX}-errorTabButton`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .MuiTab-root.${TabbedFormClasses.errorTabButton}`]: {\n        color: theme.palette.error.main,\n    },\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar as MuiToolbar,\n    ToolbarProps as MuiToolbarProps,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport clsx from 'clsx';\nimport { RaRecord } from 'ra-core';\n\nimport { SaveButton, DeleteButton } from '../button';\n\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\nexport const Toolbar = <\n    RecordType extends Partial<RaRecord> = Partial<RaRecord>\n>(\n    props: ToolbarProps<RecordType>\n) => {\n    const { children, className, resource, ...rest } = props;\n\n    const isXs = useMediaQuery<Theme>(theme => theme.breakpoints.down('sm'));\n\n    return (\n        <StyledToolbar\n            className={clsx(\n                {\n                    [ToolbarClasses.mobileToolbar]: isXs,\n                    [ToolbarClasses.desktopToolbar]: !isXs,\n                },\n                className\n            )}\n            role=\"toolbar\"\n            {...rest}\n        >\n            {Children.count(children) === 0 ? (\n                <div className={ToolbarClasses.defaultToolbar}>\n                    <SaveButton />\n                    <DeleteButton resource={resource} />\n                </div>\n            ) : (\n                children\n            )}\n        </StyledToolbar>\n    );\n};\n\nexport interface ToolbarProps<RecordType extends Partial<RaRecord> = any>\n    extends Omit<MuiToolbarProps, 'classes'> {\n    children?: ReactNode;\n    className?: string;\n    record?: RecordType;\n    resource?: string;\n}\n\nToolbar.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    record: PropTypes.any,\n    resource: PropTypes.string,\n};\n\nconst PREFIX = 'RaToolbar';\n\nexport const ToolbarClasses = {\n    desktopToolbar: `${PREFIX}-desktopToolbar`,\n    mobileToolbar: `${PREFIX}-mobileToolbar`,\n    defaultToolbar: `${PREFIX}-defaultToolbar`,\n};\n\nconst StyledToolbar = styled(MuiToolbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    backgroundColor:\n        theme.palette.mode === 'light'\n            ? theme.palette.grey[100]\n            : theme.palette.grey[900],\n\n    [`&.${ToolbarClasses.desktopToolbar}`]: {},\n\n    [`&.${ToolbarClasses.mobileToolbar}`]: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        padding: '16px',\n        width: '100%',\n        boxSizing: 'border-box',\n        flexShrink: 0,\n        zIndex: 2,\n    },\n\n    [`& .${ToolbarClasses.defaultToolbar}`]: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n","import * as React from 'react';\nimport { Children, cloneElement, isValidElement, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\n\nexport const TabbedFormTabs = (props: TabbedFormTabsProps) => {\n    const { children, url, syncWithLocation, value, ...rest } = props;\n\n    const params = useParams();\n\n    // params will include eventual parameters from the root pathname and * for the remaining part\n    // which should match the tabs paths\n    const tabValue = params['*'];\n\n    return (\n        <Tabs\n            value={syncWithLocation ? tabValue : value}\n            indicatorColor=\"primary\"\n            {...rest}\n        >\n            {Children.map(children, (tab: ReactElement, index) => {\n                if (!isValidElement<any>(tab)) return null;\n\n                // Builds the full tab which is the concatenation of the last matched route in the\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n                // and the tab path.\n                // This will be used as the Tab's value\n                const tabPath = getTabbedFormTabFullPath(tab, index);\n\n                return cloneElement(tab, {\n                    intent: 'header',\n                    value: syncWithLocation ? tabPath : index,\n                    syncWithLocation,\n                });\n            })}\n        </Tabs>\n    );\n};\n\nTabbedFormTabs.propTypes = {\n    children: PropTypes.node,\n    url: PropTypes.string,\n    tabsWithErrors: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport const getTabbedFormTabFullPath = (\n    tab: ReactElement,\n    index: number\n): string =>\n    tab.props.path != null ? tab.props.path : index > 0 ? index.toString() : '';\n\nexport interface TabbedFormTabsProps extends TabsProps {\n    url?: string;\n    tabsWithErrors?: string[];\n    syncWithLocation?: boolean;\n}\n","import { matchPath, useLocation } from 'react-router-dom';\n\n/**\n * This hook infers the tabbed form root path from the current location.\n */\nexport const useFormRootPath = () => {\n    const location = useLocation();\n    const createMatch = matchPath(':resource/create/*', location.pathname);\n    const editMatch = matchPath(':resource/:id/*', location.pathname);\n\n    if (createMatch) {\n        return createMatch.pathnameBase;\n    }\n\n    if (editMatch) {\n        return editMatch.pathnameBase;\n    }\n\n    return '';\n};\n","import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport { Stack, StackProps } from '@mui/material';\n\nimport { FormTabHeader } from './FormTabHeader';\n\nexport const FormTab = (props: FormTabProps) => {\n    const {\n        className,\n        contentClassName,\n        children,\n        hidden,\n        icon,\n        intent,\n        label,\n        onChange,\n        path,\n        resource,\n        syncWithLocation,\n        value,\n        ...rest\n    } = props;\n\n    const renderHeader = () => (\n        <FormTabHeader\n            label={label}\n            value={value}\n            icon={icon}\n            className={className}\n            syncWithLocation={syncWithLocation}\n            onChange={onChange}\n        />\n    );\n\n    const renderContent = () => (\n        <FormGroupContextProvider name={value.toString()}>\n            <Stack\n                alignItems=\"flex-start\"\n                style={hidden ? hiddenStyle : null}\n                className={contentClassName}\n                id={`tabpanel-${value}`}\n                aria-labelledby={`tabheader-${value}`}\n                // Set undefined instead of false because WAI-ARIA Authoring Practices 1.1\n                // notes that aria-hidden=\"false\" currently behaves inconsistently across browsers.\n                aria-hidden={hidden || undefined}\n                {...rest}\n            >\n                {children}\n            </Stack>\n        </FormGroupContextProvider>\n    );\n\n    return intent === 'header' ? renderHeader() : renderContent();\n};\n\nFormTab.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    intent: PropTypes.oneOf(['header', 'content']),\n    hidden: PropTypes.bool,\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    path: PropTypes.string,\n    // @ts-ignore\n    resource: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport interface FormTabProps extends StackProps {\n    className?: string;\n    children?: ReactNode;\n    contentClassName?: string;\n    hidden?: boolean;\n    icon?: ReactElement;\n    intent?: 'header' | 'content';\n    label: string | ReactElement;\n    path?: string;\n    resource?: string;\n    syncWithLocation?: boolean;\n    value?: string | number;\n}\n\nFormTab.displayName = 'FormTab';\n\nconst hiddenStyle = { display: 'none' };\n","import * as React from 'react';\nimport { isValidElement, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab } from '@mui/material';\nimport clsx from 'clsx';\nimport { useTranslate, useFormGroup } from 'ra-core';\nimport { useFormState } from 'react-hook-form';\n\nimport { TabbedFormClasses } from './TabbedFormView';\n\nexport const FormTabHeader = ({\n    label,\n    value,\n    icon,\n    className,\n    onChange,\n    syncWithLocation,\n    ...rest\n}: FormTabHeaderProps): ReactElement => {\n    const translate = useTranslate();\n    const location = useLocation();\n    const { isSubmitted } = useFormState();\n    const formGroup = useFormGroup(value.toString());\n\n    const propsForLink = {\n        component: Link,\n        to: { ...location, pathname: value },\n    };\n\n    return (\n        <MuiTab\n            label={\n                isValidElement(label) ? label : translate(label, { _: label })\n            }\n            value={value}\n            icon={icon}\n            className={clsx('form-tab', className, {\n                [TabbedFormClasses.errorTabButton]:\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\n                error:\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\n            })}\n            {...(syncWithLocation ? propsForLink : {})} // to avoid TypeScript screams, see https://github.com/mui-org/material-ui/issues/9106#issuecomment-451270521\n            id={`tabheader-${value}`}\n            aria-controls={`tabpanel-${value}`}\n            onChange={onChange}\n            {...rest}\n        />\n    );\n};\n\ninterface FormTabHeaderProps {\n    className?: string;\n    hidden?: boolean;\n    icon?: ReactElement;\n    intent?: 'header' | 'content';\n    label: string | ReactElement;\n    margin?: 'none' | 'normal' | 'dense';\n    onChange?: (event: any) => void;\n    path?: string;\n    resource?: string;\n    syncWithLocation?: boolean;\n    value?: string | number;\n    variant?: 'standard' | 'outlined' | 'filled';\n}\n\nFormTabHeader.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    intent: PropTypes.oneOf(['header', 'content']),\n    hidden: PropTypes.bool,\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n    path: PropTypes.string,\n    // @ts-ignore\n    record: PropTypes.object,\n    resource: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    variant: PropTypes.oneOf(['standard', 'outlined', 'filled']),\n};\n","import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormProps } from 'ra-core';\nimport { Stack, CardContent, SxProps, StackProps } from '@mui/material';\nimport { Toolbar } from './Toolbar';\n\n/**\n * Form with a one column layout, one input per line.\n *\n * Pass input components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\n * import RichTextInput from 'ra-input-rich-text';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\n *             <RichTextInput source=\"body\" />\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} children Input elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\nexport const SimpleForm = (props: SimpleFormProps) => {\n    const {\n        children,\n        className,\n        component: Component = DefaultComponent,\n        sx,\n        toolbar = DefaultToolbar,\n        ...rest\n    } = props;\n    return (\n        <Form {...rest}>\n            <Component className={className} sx={sx}>\n                <Stack alignItems=\"flex-start\" {...sanitizeRestProps(props)}>\n                    {children}\n                </Stack>\n            </Component>\n            {toolbar}\n        </Form>\n    );\n};\n\nSimpleForm.propTypes = {\n    children: PropTypes.node,\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    // @ts-ignore\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n    validate: PropTypes.func,\n};\n\nexport interface SimpleFormProps\n    extends Omit<FormProps, 'render'>,\n        Omit<StackProps, 'onSubmit'> {\n    children: ReactNode;\n    className?: string;\n    component?: React.ComponentType<any>;\n    defaultValues?: any;\n    toolbar?: ReactElement | false;\n    sx?: SxProps;\n}\n\nconst DefaultComponent = ({ children, sx, className }) => (\n    <CardContent sx={sx} className={className}>\n        {children}\n    </CardContent>\n);\nconst DefaultToolbar = <Toolbar />;\n\nconst sanitizeRestProps = ({\n    children,\n    className,\n    component,\n    defaultValues,\n    onSubmit,\n    record,\n    resource,\n    reValidateMode,\n    sx,\n    toolbar,\n    validate,\n    resolver,\n    warnWhenUnsavedChanges,\n    ...props\n}: SimpleFormProps) => props;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport inflection from 'inflection';\nimport {\n    useEditController,\n    EditContextProvider,\n    InferredElement,\n    useResourceContext,\n    useEditContext,\n    getElementsFromRecords,\n} from 'ra-core';\n\nimport { EditProps } from '../types';\nimport { EditView } from './EditView';\nimport { editFieldTypes } from './editFieldTypes';\n\nconst EditViewGuesser = props => {\n    const resource = useResourceContext(props);\n    const { record } = useEditContext();\n    const [inferredChild, setInferredChild] = useState(null);\n    useEffect(() => {\n        if (record && !inferredChild) {\n            const inferredElements = getElementsFromRecords(\n                [record],\n                editFieldTypes\n            );\n            const inferredChild = new InferredElement(\n                editFieldTypes.form,\n                null,\n                inferredElements\n            );\n\n            process.env.NODE_ENV !== 'production' &&\n                // eslint-disable-next-line no-console\n                console.log(\n                    `Guessed Edit:\n\nexport const ${inflection.capitalize(\n                        inflection.singularize(resource)\n                    )}Edit = () => (\n    <Edit>\n${inferredChild.getRepresentation()}\n    </Edit>\n);`\n                );\n            setInferredChild(inferredChild.getElement());\n        }\n    }, [record, inferredChild, resource]);\n\n    return <EditView {...props}>{inferredChild}</EditView>;\n};\n\nEditViewGuesser.propTypes = EditView.propTypes;\n\nexport const EditGuesser = (props: EditProps) => {\n    const controllerProps = useEditController(props);\n    return (\n        <EditContextProvider value={controllerProps}>\n            <EditViewGuesser {...props} />\n        </EditContextProvider>\n    );\n};\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowBase, ResourceContextProvider, RaRecord } from 'ra-core';\n\nimport { ShowProps } from '../types';\nimport { ShowView } from './ShowView';\n\n/**\n * Page component for the Show view\n *\n * The `<Show>` component handles the headless logic of the Show page:\n * - it calls useShowController to fetch the record from the data provider,\n * - it creates a ShowContext and a RecordContext,\n * - it computes the default page title\n * - it renders the page layout with the correct title and actions\n *\n * `<Show>` is not responsible for rendering the actual page -\n * that's the job of its child component (usually `<SimpleShowLayout>`).\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n *\n * @param {ShowProps} props\n * @param {ReactElement|false} props.actions An element to display above the page content, or false to disable actions.\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {boolean} props.emptyWhileLoading Do not display the page content while loading the initial data.\n * @param {string} props.id The id of the resource to display (grabbed from the route params if not defined).\n * @param {Object} props.queryClient Options to pass to the react-query useQuery hook.\n * @param {string} props.resource The resource to fetch from the data provider (grabbed from the ResourceContext if not defined).\n * @param {Object} props.sx Custom style object.\n * @param {ElementType|string} props.title The title of the page. Defaults to `#{resource} #${id}`.\n *\n * @see ShowView for the actual rendering\n */\nexport const Show = <RecordType extends RaRecord = any>({\n    id,\n    resource,\n    queryOptions,\n    ...rest\n}: ShowProps<RecordType>): ReactElement => (\n    <ResourceContextProvider value={resource}>\n        <ShowBase<RecordType> id={id} queryOptions={queryOptions}>\n            <ShowView {...rest} />\n        </ShowBase>\n    </ResourceContextProvider>\n);\n\nShow.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    disableAuthentication: PropTypes.bool,\n    emptyWhileLoading: PropTypes.bool,\n    component: PropTypes.elementType,\n    resource: PropTypes.string,\n    title: PropTypes.node,\n    sx: PropTypes.any,\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { useShowContext, useResourceDefinition } from 'ra-core';\n\nimport { ShowProps } from '../types';\nimport { ShowActions } from './ShowActions';\nimport { Title } from '../layout';\n\nconst defaultActions = <ShowActions />;\n\nexport const ShowView = (props: ShowViewProps) => {\n    const {\n        actions,\n        aside,\n        children,\n        className,\n        component: Content = Card,\n        emptyWhileLoading = false,\n        title,\n        ...rest\n    } = props;\n\n    const { defaultTitle, record } = useShowContext(props);\n    const { hasEdit } = useResourceDefinition(props);\n\n    const finalActions =\n        typeof actions === 'undefined' && hasEdit ? defaultActions : actions;\n\n    if (!children || (!record && emptyWhileLoading)) {\n        return null;\n    }\n    return (\n        <Root\n            className={clsx('show-page', className)}\n            {...sanitizeRestProps(rest)}\n        >\n            <Title title={title} defaultTitle={defaultTitle} />\n            {finalActions !== false && finalActions}\n            <div\n                className={clsx(ShowClasses.main, {\n                    [ShowClasses.noActions]: !finalActions,\n                })}\n            >\n                <Content className={ShowClasses.card}>{children}</Content>\n                {aside}\n            </div>\n        </Root>\n    );\n};\n\nexport type ShowViewProps = ShowProps;\n\nShowView.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    children: PropTypes.node,\n    className: PropTypes.string,\n    emptyWhileLoading: PropTypes.bool,\n    title: PropTypes.any,\n};\n\nconst sanitizeRestProps = ({\n    defaultTitle = null,\n    hasCreate = null,\n    hasEdit = null,\n    hasList = null,\n    hasShow = null,\n    history = null,\n    id = null,\n    isLoading = null,\n    isFetching = null,\n    location = null,\n    match = null,\n    options = null,\n    refetch = null,\n    permissions = null,\n    ...rest\n}) => rest;\n\nconst PREFIX = 'RaShow';\n\nexport const ShowClasses = {\n    main: `${PREFIX}-main`,\n    noActions: `${PREFIX}-noActions`,\n    card: `${PREFIX}-card`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${ShowClasses.main}`]: {\n        display: 'flex',\n    },\n    [`& .${ShowClasses.noActions}`]: {\n        marginTop: '1em',\n    },\n    [`& .${ShowClasses.card}`]: {\n        flex: '1 1 auto',\n    },\n}));\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { RaRecord, useResourceDefinition, useRecordContext } from 'ra-core';\n\nimport { EditButton } from '../button';\nimport TopToolbar from '../layout/TopToolbar';\n\n/**\n * Action Toolbar for the Show view\n *\n * Internal component. If you want to add or remove actions for a Show view,\n * write your own ShowActions Component. Then, in the <Show> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import Button from '@mui/material/Button';\n *     import { TopToolbar, EditButton, Show } from 'react-admin';\n *\n *     const PostShowActions = ({ record, resource }) => (\n *         <TopToolbar>\n *             <EditButton record={record} />\n *             // Add your custom actions here //\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostShow = (props) => (\n *         <Show actions={<PostShowActions />} {...props}>\n *             ...\n *         </Show>\n *     );\n */\nexport const ShowActions = (props: ShowActionsProps) => {\n    const record = useRecordContext(props);\n    const { hasEdit } = useResourceDefinition();\n    if (!hasEdit) {\n        return null;\n    }\n    return (\n        <TopToolbar className={props.className}>\n            <EditButton record={record} />\n        </TopToolbar>\n    );\n};\n\nexport interface ShowActionsProps {\n    className?: string;\n    record?: RaRecord;\n}\n\nShowActions.propTypes = {\n    className: PropTypes.string,\n    record: PropTypes.any,\n};\n","import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { Datagrid } from '../list/datagrid/Datagrid';\nimport {\n    ArrayField,\n    BooleanField,\n    DateField,\n    EmailField,\n    NumberField,\n    ReferenceField,\n    ReferenceFieldProps,\n    ReferenceArrayField,\n    ReferenceArrayFieldProps,\n    RichTextField,\n    TextField,\n    UrlField,\n} from '../field';\nimport { SimpleShowLayout, SimpleShowLayoutProps } from './SimpleShowLayout';\nimport { InferredElement, InferredTypeMap, InputProps } from 'ra-core';\n\nexport const showFieldTypes: InferredTypeMap = {\n    show: {\n        component: (props: SimpleShowLayoutProps) => (\n            <SimpleShowLayout {...props} />\n        ), // eslint-disable-line react/display-name\n        representation: (_, children) => `        <SimpleShowLayout>\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\n        </SimpleShowLayout>`,\n    },\n    array: {\n        // eslint-disable-next-line react/display-name\n        component: ({\n            children,\n            ...props\n        }: { children: ReactNode } & InputProps) => (\n            <ArrayField {...props}>\n                <Datagrid>{children}</Datagrid>\n            </ArrayField>\n        ),\n        representation: (props: InputProps, children: InferredElement[]) =>\n            `<ArrayField source=\"${\n                props.source\n            }\"><Datagrid>${children\n                .map(child => child.getRepresentation())\n                .join('\\n')}</Datagrid></ArrayField>`,\n    },\n    boolean: {\n        component: BooleanField,\n        representation: (props: InputProps) =>\n            `<BooleanField source=\"${props.source}\" />`,\n    },\n    date: {\n        component: DateField,\n        representation: (props: InputProps) =>\n            `<DateField source=\"${props.source}\" />`,\n    },\n    email: {\n        component: EmailField,\n        representation: (props: InputProps) =>\n            `<EmailField source=\"${props.source}\" />`,\n    },\n    id: {\n        component: TextField,\n        representation: (props: InputProps) =>\n            `<TextField source=\"${props.source}\" />`,\n    },\n    number: {\n        component: NumberField,\n        representation: (props: InputProps) =>\n            `<NumberField source=\"${props.source}\" />`,\n    },\n    reference: {\n        component: ReferenceField,\n        representation: (props: ReferenceFieldProps) =>\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\"><TextField source=\"id\" /></ReferenceField>`,\n    },\n    referenceChild: {\n        component: (props: { children: ReactNode } & InputProps) => (\n            <TextField source=\"id\" {...props} />\n        ), // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    referenceArray: {\n        component: ReferenceArrayField,\n        representation: (props: ReferenceArrayFieldProps) =>\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\"><TextField source=\"id\" /></ReferenceArrayField>`,\n    },\n    referenceArrayChild: {\n        component: (props: { children: ReactNode } & InputProps) => (\n            <TextField source=\"id\" {...props} />\n        ), // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    richText: {\n        component: RichTextField,\n        representation: (props: InputProps) =>\n            `<RichTextField source=\"${props.source}\" />`,\n    },\n    string: {\n        component: TextField,\n        representation: (props: InputProps) =>\n            `<TextField source=\"${props.source}\" />`,\n    },\n    url: {\n        component: UrlField,\n        representation: (props: InputProps) =>\n            `<UrlField source=\"${props.source}\" />`,\n    },\n};\n","import * as React from 'react';\nimport { useEffect, useState, memo, FC, ReactElement } from 'react';\nimport get from 'lodash/get';\nimport { ListContextProvider, useRecordContext } from 'ra-core';\n\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * Display a collection\n *\n * Ideal for embedded arrays of objects, e.g.\n * {\n *   id: 123\n *   tags: [\n *     { name: 'foo' },\n *     { name: 'bar' }\n *   ]\n * }\n *\n * The child must be an iterator component\n * (like <Datagrid> or <SingleFieldList>).\n *\n * @example Display all the backlinks of the current post as a <Datagrid>\n * // post = {\n * //   id: 123\n * //   backlinks: [\n * //       {\n * //           uuid: '34fdf393-f449-4b04-a423-38ad02ae159e',\n * //           date: '2012-08-10T00:00:00.000Z',\n * //           url: 'http://example.com/foo/bar.html',\n * //       },\n * //       {\n * //           uuid: 'd907743a-253d-4ec1-8329-404d4c5e6cf1',\n * //           date: '2012-08-14T00:00:00.000Z',\n * //           url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n * //       }\n * //    ]\n * // }\n *     <ArrayField source=\"backlinks\">\n *         <Datagrid>\n *             <DateField source=\"date\" />\n *             <UrlField source=\"url\" />\n *         </Datagrid>\n *     </ArrayField>\n *\n * @example Display all the tags of the current post as <Chip> components\n * // post = {\n * //   id: 123\n * //   tags: [\n * //     { name: 'foo' },\n * //     { name: 'bar' }\n * //   ]\n * // }\n *     <ArrayField source=\"tags\">\n *         <SingleFieldList>\n *             <ChipField source=\"name\" />\n *         </SingleFieldList>\n *     </ArrayField>\n *\n * If you need to render a collection in a custom way, it's often simpler\n * to write your own component:\n *\n * @example\n *     const TagsField = ({ record }) => (\n *          <ul>\n *              {record.tags.map(item => (\n *                  <li key={item.name}>{item.name}</li>\n *              ))}\n *          </ul>\n *     );\n */\nexport const ArrayField: FC<ArrayFieldProps> = memo(props => {\n    const { children, resource, source } = props;\n    const record = useRecordContext(props);\n    const [data, setData] = useState(initialState);\n\n    useEffect(() => {\n        const data = get(record, source) || initialState;\n        setData(data);\n    }, [record, source]);\n\n    return (\n        <ListContextProvider\n            value={{\n                data,\n                selectedIds: [],\n                sort: { field: null, order: null },\n                displayedFilters: null,\n                filterValues: null,\n                hasCreate: null,\n                hideFilter: null,\n                isFetching: false,\n                isLoading: false,\n                onSelect: null,\n                onToggleItem: null,\n                onUnselectItems: null,\n                page: null,\n                perPage: null,\n                resource,\n                setFilters: null,\n                setPage: null,\n                setPerPage: null,\n                setSort: null,\n                showFilter: null,\n                total: data.length,\n            }}\n        >\n            {children}\n        </ListContextProvider>\n    );\n});\n\nArrayField.propTypes = {\n    ...fieldPropTypes,\n};\n\nexport interface ArrayFieldProps extends PublicFieldProps, InjectedFieldProps {\n    children: ReactElement;\n}\n\nArrayField.displayName = 'ArrayField';\n\nconst initialState = [];\n","import { ReactElement } from 'react';\nimport { RaRecord } from 'ra-core';\nimport PropTypes from 'prop-types';\nimport { TableCellProps } from '@mui/material/TableCell';\n\ntype TextAlign = TableCellProps['align'];\ntype SortOrder = 'ASC' | 'DESC';\n\nexport interface FieldProps<RecordType extends RaRecord = any>\n    extends PublicFieldProps,\n        InjectedFieldProps<RecordType> {}\n\nexport interface PublicFieldProps {\n    sortBy?: string;\n    sortByOrder?: SortOrder;\n    source?: string;\n    label?: string | ReactElement | boolean;\n    sortable?: boolean;\n    className?: string;\n    cellClassName?: string;\n    headerClassName?: string;\n    formClassName?: string;\n    textAlign?: TextAlign;\n    emptyText?: string;\n    fullWidth?: boolean;\n}\n\n// Props injected by react-admin\nexport interface InjectedFieldProps<RecordType extends RaRecord = any> {\n    record?: RecordType;\n    resource?: string;\n}\n\nexport const fieldPropTypes = {\n    sortBy: PropTypes.string,\n    sortByOrder: PropTypes.oneOf<SortOrder>(['ASC', 'DESC']),\n    source: PropTypes.string,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.bool,\n    ]),\n    sortable: PropTypes.bool,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    textAlign: PropTypes.oneOf<TextAlign>([\n        'inherit',\n        'left',\n        'center',\n        'right',\n        'justify',\n    ]),\n    emptyText: PropTypes.string,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo, FunctionComponent } from 'react';\nimport { SvgIconComponent } from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography, TypographyProps } from '@mui/material';\nimport { useTranslate, useRecordContext } from 'ra-core';\n\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\n\nexport const BooleanField: FunctionComponent<BooleanFieldProps> = memo(\n    props => {\n        const {\n            className,\n            emptyText,\n            source,\n            valueLabelTrue,\n            valueLabelFalse,\n            TrueIcon = DoneIcon,\n            FalseIcon = ClearIcon,\n            looseValue = false,\n            ...rest\n        } = props;\n        const record = useRecordContext(props);\n        const translate = useTranslate();\n\n        const value = get(record, source);\n        const isTruthyValue = value === true || (looseValue && value);\n        let ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n\n        if (!ariaLabel) {\n            ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n        }\n\n        if (looseValue || value === false || value === true) {\n            return (\n                <StyledTypography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={className}\n                    {...sanitizeFieldRestProps(rest)}\n                >\n                    <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n                        {isTruthyValue ? (\n                            <TrueIcon data-testid=\"true\" fontSize=\"small\" />\n                        ) : (\n                            <FalseIcon data-testid=\"false\" fontSize=\"small\" />\n                        )}\n                    </Tooltip>\n                </StyledTypography>\n            );\n        }\n\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        );\n    }\n);\n\nBooleanField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    valueLabelFalse: PropTypes.string,\n    valueLabelTrue: PropTypes.string,\n    TrueIcon: PropTypes.elementType,\n    FalseIcon: PropTypes.elementType,\n    looseValue: PropTypes.bool,\n};\n\nBooleanField.displayName = 'BooleanField';\n\nexport interface BooleanFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    valueLabelTrue?: string;\n    valueLabelFalse?: string;\n    TrueIcon?: SvgIconComponent;\n    FalseIcon?: SvgIconComponent;\n    looseValue?: boolean;\n}\n\nconst PREFIX = 'RaBooleanField';\n\nconst StyledTypography = styled(Typography, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    display: 'inline-flex',\n    verticalAlign: 'middle',\n    lineHeight: 0,\n});\n","export const sanitizeFieldRestProps: (props: any) => any = ({\n    cellClassName,\n    className,\n    emptyText,\n    formClassName,\n    fullWidth,\n    headerClassName,\n    label,\n    linkType,\n    link,\n    locale,\n    record,\n    refetch,\n    resource,\n    sortable,\n    sortBy,\n    sortByOrder,\n    source,\n    textAlign,\n    translateChoice,\n    ...props\n}) => props;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo, FC } from 'react';\nimport get from 'lodash/get';\nimport Chip, { ChipProps } from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport clsx from 'clsx';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const ChipField: FC<ChipFieldProps> = memo(props => {\n    const { className, source, emptyText, ...rest } = props;\n    const record = useRecordContext(props);\n\n    const value = get(record, source);\n\n    if (value == null && emptyText) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        );\n    }\n\n    return (\n        <StyledChip\n            className={clsx(ChipFieldClasses.chip, className)}\n            label={value}\n            {...sanitizeFieldRestProps(rest)}\n        />\n    );\n});\n\nChipField.propTypes = {\n    // @ts-ignore\n    ...ChipField.propTypes,\n    ...fieldPropTypes,\n};\n\nChipField.displayName = 'ChipField';\n\nexport interface ChipFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<ChipProps, 'label'> {}\n\nconst PREFIX = 'RaChipField';\n\nconst ChipFieldClasses = {\n    chip: `${PREFIX}-chip`,\n};\n\nconst StyledChip = styled(Chip, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`&.${ChipFieldClasses.chip}`]: { margin: 4, cursor: 'inherit' },\n});\n","import * as React from 'react';\nimport { memo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { Typography, TypographyProps } from '@mui/material';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\nexport const DateField: FC<DateFieldProps> = memo(props => {\n    const {\n        className,\n        emptyText,\n        locales,\n        options,\n        showTime = false,\n        source,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    if (!record) {\n        return null;\n    }\n    const value = get(record, source);\n    if (value == null || value === '') {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : null;\n    }\n\n    const date = value instanceof Date ? value : new Date(value);\n    let dateOptions = options;\n    if (\n        typeof value === 'string' &&\n        value.length <= 10 &&\n        !showTime &&\n        !options\n    ) {\n        // Input is a date string (e.g. '2022-02-15') without time and time zone.\n        // Force timezone to UTC to fix issue with people in negative time zones\n        // who may see a different date when calling toLocaleDateString().\n        dateOptions = { timeZone: 'UTC' };\n    }\n    const dateString = showTime\n        ? toLocaleStringSupportsLocales\n            ? date.toLocaleString(locales, options)\n            : date.toLocaleString()\n        : toLocaleStringSupportsLocales\n        ? date.toLocaleDateString(locales, dateOptions)\n        : date.toLocaleDateString();\n\n    return (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={className}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {dateString}\n        </Typography>\n    );\n});\n\nDateField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    locales: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]),\n    options: PropTypes.object,\n    showTime: PropTypes.bool,\n};\n\nDateField.displayName = 'DateField';\n\nexport interface DateFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    locales?: string | string[];\n    options?: object;\n    showTime?: boolean;\n}\n\nconst toLocaleStringSupportsLocales = (() => {\n    // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n    try {\n        new Date().toLocaleString('i');\n    } catch (error) {\n        return error instanceof RangeError;\n    }\n    return false;\n})();\n","import * as React from 'react';\nimport { memo, FC } from 'react';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { Link, LinkProps } from '@mui/material';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const EmailField: FC<EmailFieldProps> = memo(props => {\n    const { className, source, emptyText, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n\n    if (value == null) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : null;\n    }\n\n    return (\n        <Link\n            className={className}\n            href={`mailto:${value}`}\n            onClick={stopPropagation}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n});\n\nEmailField.propTypes = fieldPropTypes;\nEmailField.displayName = 'EmailField';\n\nexport interface EmailFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<LinkProps, 'textAlign'> {}\n\n// useful to prevent click bubbling in a Datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\nimport { SxProps } from '@mui/system';\n\n/**\n * Render a link to a file based on a path contained in a record field\n *\n * @example\n * import { FileField } from 'react-admin';\n *\n * <FileField source=\"url\" title=\"title\" />\n *\n * // renders the record { id: 123, url: 'doc.pdf', title: 'Presentation' } as\n * <div>\n *     <a href=\"doc.pdf\" title=\"Presentation\">Presentation</a>\n * </div>\n */\nexport const FileField = (props: FileFieldProps) => {\n    const {\n        className,\n        emptyText,\n        source,\n        title,\n        src,\n        target,\n        download,\n        ping,\n        rel,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    const sourceValue = get(record, source);\n\n    if (!sourceValue) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : (\n            <Root className={className} {...sanitizeFieldRestProps(rest)} />\n        );\n    }\n\n    if (Array.isArray(sourceValue)) {\n        return (\n            <StyledList className={className} {...sanitizeFieldRestProps(rest)}>\n                {sourceValue.map((file, index) => {\n                    const fileTitleValue = get(file, title) || title;\n                    const srcValue = get(file, src) || title;\n\n                    return (\n                        <li key={index}>\n                            <a\n                                href={srcValue}\n                                title={fileTitleValue}\n                                target={target}\n                                download={download}\n                                ping={ping}\n                                rel={rel}\n                            >\n                                {fileTitleValue}\n                            </a>\n                        </li>\n                    );\n                })}\n            </StyledList>\n        );\n    }\n\n    const titleValue = get(record, title) || title;\n\n    return (\n        <Root className={className} {...sanitizeFieldRestProps(rest)}>\n            <a\n                href={sourceValue}\n                title={titleValue}\n                target={target}\n                download={download}\n                ping={ping}\n                rel={rel}\n            >\n                {titleValue}\n            </a>\n        </Root>\n    );\n};\n\nexport interface FileFieldProps extends PublicFieldProps, InjectedFieldProps {\n    src?: string;\n    title?: string;\n    target?: string;\n    download?: boolean | string;\n    ping?: string;\n    rel?: string;\n    sx?: SxProps;\n}\n\nFileField.propTypes = {\n    ...fieldPropTypes,\n    src: PropTypes.string,\n    title: PropTypes.string,\n    target: PropTypes.string,\n    download: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    ping: PropTypes.string,\n    rel: PropTypes.string,\n};\n\nconst PREFIX = 'RaFileField';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    display: 'inline-block',\n});\n\nconst StyledList = styled('ul')({\n    display: 'inline-block',\n});\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { RaRecord, useRecordContext } from 'ra-core';\nimport PropTypes from 'prop-types';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * Field using a render function\n *\n * @example\n * <FunctionField\n *     source=\"last_name\" // used for sorting\n *     label=\"Name\"\n *     render={record => record && `${record.first_name} ${record.last_name}`}\n * />\n */\nexport const FunctionField = <RecordType extends RaRecord = any>(\n    props: FunctionFieldProps<RecordType>\n) => {\n    const { className, source = '', render, ...rest } = props;\n    const record = useRecordContext(props);\n    return useMemo(\n        () =>\n            record ? (\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={className}\n                    {...sanitizeFieldRestProps(rest)}\n                >\n                    {render(record, source)}\n                </Typography>\n            ) : null,\n        [className, record, source, render, rest]\n    );\n};\n\nFunctionField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    render: PropTypes.func.isRequired,\n};\n\nexport interface FunctionFieldProps<RecordType extends RaRecord = any>\n    extends PublicFieldProps,\n        InjectedFieldProps<RecordType>,\n        Omit<TypographyProps, 'textAlign'> {\n    render: (record?: RecordType, source?: string) => any;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport clsx from 'clsx';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\nimport { SxProps } from '@mui/system';\n\nexport const ImageField = (props: ImageFieldProps) => {\n    const { className, emptyText, source, src, title, ...rest } = props;\n    const record = useRecordContext(props);\n    const sourceValue = get(record, source);\n\n    if (!sourceValue) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : (\n            <div className={className} {...sanitizeFieldRestProps(rest)} />\n        );\n    }\n\n    if (Array.isArray(sourceValue)) {\n        return (\n            <List\n                className={clsx(ImageFieldClasses.list, className)}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {sourceValue.map((file, index) => {\n                    const fileTitleValue = get(file, title) || title;\n                    const srcValue = get(file, src) || title;\n\n                    return (\n                        <li key={index}>\n                            <img\n                                alt={fileTitleValue}\n                                title={fileTitleValue}\n                                src={srcValue}\n                                className={ImageFieldClasses.image}\n                            />\n                        </li>\n                    );\n                })}\n            </List>\n        );\n    }\n\n    const titleValue = get(record, title) || title;\n\n    return (\n        <Box className={className} {...sanitizeFieldRestProps(rest)}>\n            <img\n                title={titleValue}\n                alt={titleValue}\n                src={sourceValue}\n                className={ImageFieldClasses.image}\n            />\n        </Box>\n    );\n};\n\n// What? TypeScript loses the displayName if we don't set it explicitly\nImageField.displayName = 'ImageField';\n\nImageField.propTypes = {\n    ...fieldPropTypes,\n    src: PropTypes.string,\n    title: PropTypes.string,\n};\n\nconst PREFIX = 'RaImageField';\n\nexport const ImageFieldClasses = {\n    list: `${PREFIX}-list`,\n    image: `${PREFIX}-image`,\n};\n\nconst List = styled('ul', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`&.${ImageFieldClasses.list}`]: {\n        display: 'flex',\n        listStyleType: 'none',\n    },\n    [`& .${ImageFieldClasses.image}`]: {\n        margin: '0.5rem',\n        maxHeight: '10rem',\n    },\n});\n\nexport interface ImageFieldProps extends PublicFieldProps, InjectedFieldProps {\n    src?: string;\n    title?: string;\n    sx?: SxProps;\n}\n","import * as React from 'react';\nimport { memo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * Display a numeric value as a locale string.\n *\n * Uses Intl.NumberFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs number as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n * @example\n * <NumberField source=\"score\" />\n * // renders the record { id: 1234, score: 567 } as\n * <span>567</span>\n *\n * <NumberField source=\"score\" className=\"red\" />\n * // renders the record { id: 1234, score: 567 } as\n * <span class=\"red\">567</span>\n *\n * <NumberField source=\"share\" options={{ style: 'percent' }} />\n * // renders the record { id: 1234, share: 0.2545 } as\n * <span>25%</span>\n *\n * <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\n * // renders the record { id: 1234, price: 25.99 } as\n * <span>$25.99</span>\n *\n * <NumberField source=\"price\" locales=\"fr-FR\" options={{ style: 'currency', currency: 'USD' }} />\n * // renders the record { id: 1234, price: 25.99 } as\n * <span>25,99 $US</span>\n */\nexport const NumberField: FC<NumberFieldProps> = memo(props => {\n    const {\n        className,\n        emptyText,\n        source,\n        locales,\n        options,\n        textAlign,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    if (!record) {\n        return null;\n    }\n    const value = get(record, source);\n    if (value == null) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : null;\n    }\n\n    return (\n        <Typography\n            variant=\"body2\"\n            component=\"span\"\n            className={className}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {hasNumberFormat ? value.toLocaleString(locales, options) : value}\n        </Typography>\n    );\n});\n\n// what? TypeScript loses the displayName if we don't set it explicitly\nNumberField.displayName = 'NumberField';\n\nNumberField.defaultProps = {\n    textAlign: 'right',\n};\n\nNumberField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    locales: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]),\n    options: PropTypes.object,\n};\n\nexport interface NumberFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    locales?: string | string[];\n    options?: object;\n}\n\nconst hasNumberFormat = !!(\n    typeof Intl === 'object' &&\n    Intl &&\n    typeof Intl.NumberFormat === 'function'\n);\n","import * as React from 'react';\nimport { FC, memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ListContextProvider,\n    useListContext,\n    ListControllerProps,\n    useReferenceArrayFieldController,\n    SortPayload,\n    FilterPayload,\n    ResourceContextProvider,\n    useRecordContext,\n} from 'ra-core';\n\nimport { fieldPropTypes, PublicFieldProps, InjectedFieldProps } from './types';\nimport { LinearProgress } from '../layout';\nimport { styled } from '@mui/material/styles';\nimport { SxProps } from '@mui/system';\n\n/**\n * A container component that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * You must define the fields to be passed to the iterator component as children.\n *\n * @example Display all the products of the current order as datagrid\n * // order = {\n * //   id: 123,\n * //   product_ids: [456, 457, 458],\n * // }\n * <ReferenceArrayField label=\"Products\" reference=\"products\" source=\"product_ids\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"description\" />\n *         <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceArrayField>\n *\n * @example Display all the categories of the current product as a list of chips\n * // product = {\n * //   id: 456,\n * //   category_ids: [11, 22, 33],\n * // }\n * <ReferenceArrayField label=\"Categories\" reference=\"categories\" source=\"category_ids\">\n *     <SingleFieldList>\n *         <ChipField source=\"name\" />\n *     </SingleFieldList>\n * </ReferenceArrayField>\n *\n * By default, restricts the displayed values to 1000. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayField perPage={10} reference=\"categories\" source=\"category_ids\">\n *    ...\n * </ReferenceArrayField>\n *\n * By default, the field displays the results in the order in which they are referenced\n * (i.e. in the order of the list of ids). You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayField sort={{ field: 'name', order: 'ASC' }} reference=\"categories\" source=\"category_ids\">\n *    ...\n * </ReferenceArrayField>\n *\n * Also, you can filter the results to display only a subset of values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayField filter={{ is_published: true }} reference=\"categories\" source=\"category_ids\">\n *    ...\n * </ReferenceArrayField>\n */\nexport const ReferenceArrayField: FC<ReferenceArrayFieldProps> = props => {\n    const {\n        filter,\n        page = 1,\n        perPage,\n        reference,\n        resource,\n        sort,\n        source,\n    } = props;\n    const record = useRecordContext(props);\n    const controllerProps = useReferenceArrayFieldController({\n        filter,\n        page,\n        perPage,\n        record,\n        reference,\n        resource,\n        sort,\n        source,\n    });\n    return (\n        <ResourceContextProvider value={reference}>\n            <ListContextProvider value={controllerProps}>\n                <PureReferenceArrayFieldView {...props} />\n            </ListContextProvider>\n        </ResourceContextProvider>\n    );\n};\n\nReferenceArrayField.propTypes = {\n    ...fieldPropTypes,\n    className: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    label: fieldPropTypes.label,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n};\n\nexport interface ReferenceArrayFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps {\n    children: ReactElement;\n    filter?: FilterPayload;\n    page?: number;\n    pagination?: ReactElement;\n    perPage?: number;\n    reference: string;\n    resource?: string;\n    sort?: SortPayload;\n    sx?: SxProps;\n}\n\nexport interface ReferenceArrayFieldViewProps\n    extends Omit<ReferenceArrayFieldProps, 'resource' | 'page' | 'perPage'>,\n        ListControllerProps {}\n\nexport const ReferenceArrayFieldView: FC<ReferenceArrayFieldViewProps> = props => {\n    const { children, pagination, className, sx } = props;\n    const { isLoading, total } = useListContext(props);\n\n    return (\n        <Root className={className} sx={sx}>\n            {isLoading ? (\n                <LinearProgress\n                    className={ReferenceArrayFieldClasses.progress}\n                />\n            ) : (\n                <span>\n                    {children}\n                    {pagination && total !== undefined ? pagination : null}\n                </span>\n            )}\n        </Root>\n    );\n};\n\nReferenceArrayFieldView.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    reference: PropTypes.string.isRequired,\n};\n\nconst PREFIX = 'RaReferenceArrayField';\n\nexport const ReferenceArrayFieldClasses = {\n    progress: `${PREFIX}-progress`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${ReferenceArrayFieldClasses.progress}`]: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst PureReferenceArrayFieldView = memo(ReferenceArrayFieldView);\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { FC, memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { Typography } from '@mui/material';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport {\n    useReference,\n    UseReferenceResult,\n    LinkToType,\n    ResourceContextProvider,\n    RecordContextProvider,\n    RaRecord,\n    useRecordContext,\n    useCreatePath,\n    Identifier,\n} from 'ra-core';\n\nimport { LinearProgress } from '../layout';\nimport { Link } from '../Link';\nimport { PublicFieldProps, fieldPropTypes, InjectedFieldProps } from './types';\nimport { SxProps } from '@mui/system';\n\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\nexport const ReferenceField: FC<ReferenceFieldProps> = props => {\n    const { source, emptyText, ...rest } = props;\n    const record = useRecordContext(props);\n    const id = get(record, source);\n\n    return id == null ? (\n        emptyText ? (\n            <Typography component=\"span\" variant=\"body2\">\n                {emptyText}\n            </Typography>\n        ) : null\n    ) : (\n        <NonEmptyReferenceField {...rest} record={record} id={id} />\n    );\n};\n\nReferenceField.propTypes = {\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    label: fieldPropTypes.label,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    // @ts-ignore\n    link: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]).isRequired,\n};\n\nReferenceField.defaultProps = {\n    link: 'edit',\n};\n\nexport interface ReferenceFieldProps<RecordType extends RaRecord = any>\n    extends PublicFieldProps,\n        InjectedFieldProps<RecordType> {\n    children: ReactElement;\n    reference: string;\n    resource?: string;\n    source: string;\n    translateChoice?: Function | boolean;\n    link?: LinkToType;\n    sx?: SxProps;\n}\n\n/**\n * This intermediate component is made necessary by the useReference hook,\n * which cannot be called conditionally when get(record, source) is empty.\n */\nexport const NonEmptyReferenceField: FC<\n    Omit<ReferenceFieldProps, 'emptyText' | 'source'> & { id: Identifier }\n> = ({ children, id, record, reference, link, ...props }) => {\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceField> only accepts a single child');\n    }\n    const createPath = useCreatePath();\n    const resourceLinkPath =\n        link === false\n            ? false\n            : createPath({\n                  resource: reference,\n                  id,\n                  type:\n                      typeof link === 'function'\n                          ? link(record, reference)\n                          : link,\n              });\n\n    return (\n        <ResourceContextProvider value={reference}>\n            <PureReferenceFieldView\n                reference={reference}\n                {...props}\n                {...useReference({\n                    reference,\n                    id,\n                })}\n                resourceLinkPath={resourceLinkPath}\n            >\n                {children}\n            </PureReferenceFieldView>\n        </ResourceContextProvider>\n    );\n};\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\nexport const ReferenceFieldView: FC<ReferenceFieldViewProps> = props => {\n    const {\n        children,\n        className,\n        error,\n        isLoading,\n        referenceRecord,\n        resourceLinkPath,\n        sx,\n    } = props;\n\n    if (error) {\n        return (\n            /* eslint-disable jsx-a11y/role-supports-aria-props */\n            <ErrorIcon\n                aria-errormessage={error.message ? error.message : error}\n                role=\"presentation\"\n                color=\"error\"\n                fontSize=\"small\"\n            />\n            /* eslint-enable */\n        );\n    }\n    if (isLoading) {\n        return <LinearProgress />;\n    }\n    if (!referenceRecord) {\n        return null;\n    }\n\n    if (resourceLinkPath) {\n        return (\n            <Root className={className} sx={sx}>\n                <RecordContextProvider value={referenceRecord}>\n                    <Link\n                        to={resourceLinkPath as string}\n                        className={ReferenceFieldClasses.link}\n                        onClick={stopPropagation}\n                    >\n                        {children}\n                    </Link>\n                </RecordContextProvider>\n            </Root>\n        );\n    }\n\n    return (\n        <RecordContextProvider value={referenceRecord}>\n            {children}\n        </RecordContextProvider>\n    );\n};\n\nReferenceFieldView.propTypes = {\n    children: PropTypes.element,\n    className: PropTypes.string,\n    isLoading: PropTypes.bool,\n    record: PropTypes.any,\n    reference: PropTypes.string,\n    referenceRecord: PropTypes.any,\n    resource: PropTypes.string,\n    resourceLinkPath: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([false]),\n    ]) as React.Validator<string | false>,\n    source: PropTypes.string,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n};\n\nexport interface ReferenceFieldViewProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        UseReferenceResult {\n    reference: string;\n    resource?: string;\n    translateChoice?: Function | boolean;\n    resourceLinkPath?: string | false;\n    children?: ReactElement;\n    sx?: SxProps;\n}\n\nconst PureReferenceFieldView = memo(ReferenceFieldView);\n\nconst PREFIX = 'RaReferenceField';\n\nexport const ReferenceFieldClasses = {\n    link: `${PREFIX}-link`,\n};\n\nconst Root = styled('span', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${ReferenceFieldClasses.link}`]: {\n        '& > *': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Link as RRLink, LinkProps as RRLinkProps } from 'react-router-dom';\nimport { styled, Link as MuiLink } from '@mui/material';\n\nexport const Link = (props: LinkProps) => {\n    const { to, children, className, ...rest } = props;\n\n    return (\n        <StyledLink\n            to={to}\n            className={clsx(LinkClasses.link, className)}\n            {...rest}\n        >\n            {children}\n        </StyledLink>\n    );\n};\n\nconst PREFIX = 'RaLink';\n\nexport const LinkClasses = {\n    link: `${PREFIX}-link`,\n};\n\nconst MuiRouterLink = (props: RRLinkProps) => (\n    <MuiLink component={RRLink} {...props} />\n);\n\nconst StyledLink = styled(MuiRouterLink)(({ theme }) => ({\n    [`&.${LinkClasses.link}`]: {\n        textDecoration: 'none',\n    },\n}));\n\nexport interface LinkProps extends RRLinkProps {\n    className?: string;\n}\n\nLink.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import React, { FC, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    FilterPayload,\n    SortPayload,\n    useReferenceManyFieldController,\n    ListContextProvider,\n    ListControllerResult,\n    ResourceContextProvider,\n    useRecordContext,\n} from 'ra-core';\n\nimport { PublicFieldProps, fieldPropTypes, InjectedFieldProps } from './types';\n\n/**\n * Render related records to the current one.\n *\n * You must define the fields to be passed to the iterator component as children.\n *\n * @example Display all the comments of the current post as a datagrid\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"body\" />\n *         <DateField source=\"created_at\" />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceManyField>\n *\n * @example Display all the books by the current author, only the title\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, restricts the displayed values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceManyField perPage={10} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceManyField sort={{ field: 'created_at', order: 'DESC' }} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceManyField filter={{ is_published: true }} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n */\nexport const ReferenceManyField: FC<ReferenceManyFieldProps> = props => {\n    const {\n        children,\n        filter,\n        page = 1,\n        perPage,\n        reference,\n        resource,\n        sort,\n        source,\n        target,\n    } = props;\n    const record = useRecordContext(props);\n\n    if (React.Children.count(children) !== 1) {\n        throw new Error(\n            '<ReferenceManyField> only accepts a single child (like <Datagrid>)'\n        );\n    }\n\n    const controllerProps = useReferenceManyFieldController({\n        filter,\n        page,\n        perPage,\n        record,\n        reference,\n        resource,\n        sort,\n        source,\n        target,\n    });\n\n    return (\n        <ResourceContextProvider value={reference}>\n            <ListContextProvider value={controllerProps}>\n                <ReferenceManyFieldView {...props} {...controllerProps} />\n            </ListContextProvider>\n        </ResourceContextProvider>\n    );\n};\n\nexport interface ReferenceManyFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps {\n    children: ReactElement;\n    filter?: FilterPayload;\n    page?: number;\n    pagination?: ReactElement;\n    perPage?: number;\n    reference: string;\n    sort?: SortPayload;\n    target: string;\n}\n\nReferenceManyField.propTypes = {\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    filter: PropTypes.object,\n    label: fieldPropTypes.label,\n    perPage: PropTypes.number,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    target: PropTypes.string.isRequired,\n};\n\nReferenceManyField.defaultProps = {\n    filter: {},\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n    source: 'id',\n};\n\nexport const ReferenceManyFieldView: FC<ReferenceManyFieldViewProps> = props => {\n    const { children, pagination } = props;\n\n    return (\n        <>\n            {children}\n            {pagination && props.total !== undefined ? pagination : null}\n        </>\n    );\n};\n\nexport interface ReferenceManyFieldViewProps\n    extends Omit<\n            ReferenceManyFieldProps,\n            'resource' | 'page' | 'perPage' | 'sort'\n        >,\n        ListControllerResult {\n    children: ReactElement;\n}\n\nReferenceManyFieldView.propTypes = {\n    children: PropTypes.element,\n    className: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    data: PropTypes.any,\n    isLoading: PropTypes.bool,\n    pagination: PropTypes.element,\n    reference: PropTypes.string,\n    setSort: PropTypes.func,\n};\n","import React, { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport {\n    useReferenceOneFieldController,\n    useRecordContext,\n    ResourceContextProvider,\n    LinkToType,\n    useCreatePath,\n} from 'ra-core';\n\nimport { PublicFieldProps, fieldPropTypes, InjectedFieldProps } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport const ReferenceOneField = (props: ReferenceOneFieldProps) => {\n    const {\n        children,\n        reference,\n        source,\n        target,\n        emptyText,\n        link = false,\n    } = props;\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n\n    const {\n        isLoading,\n        isFetching,\n        referenceRecord,\n        error,\n        refetch,\n    } = useReferenceOneFieldController({\n        record,\n        reference,\n        source,\n        target,\n    });\n\n    const resourceLinkPath =\n        link === false\n            ? false\n            : createPath({\n                  resource: reference,\n                  id: referenceRecord?.id,\n                  type:\n                      typeof link === 'function'\n                          ? link(record, reference)\n                          : link,\n              });\n\n    return !record || (!isLoading && referenceRecord == null) ? (\n        emptyText ? (\n            <Typography component=\"span\" variant=\"body2\">\n                {emptyText}\n            </Typography>\n        ) : null\n    ) : (\n        <ResourceContextProvider value={reference}>\n            <ReferenceFieldView\n                isLoading={isLoading}\n                isFetching={isFetching}\n                referenceRecord={referenceRecord}\n                resourceLinkPath={resourceLinkPath}\n                reference={reference}\n                refetch={refetch}\n                error={error}\n            >\n                {children}\n            </ReferenceFieldView>\n        </ResourceContextProvider>\n    );\n};\n\nexport interface ReferenceOneFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps {\n    children: ReactElement;\n    reference: string;\n    target: string;\n    link?: LinkToType;\n}\n\nReferenceOneField.propTypes = {\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    label: fieldPropTypes.label,\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    target: PropTypes.string.isRequired,\n};\n\nReferenceOneField.defaultProps = {\n    source: 'id',\n};\n","import * as React from 'react';\nimport { FC, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { InjectedFieldProps, PublicFieldProps, fieldPropTypes } from './types';\n\nexport const RichTextField: FC<RichTextFieldProps> = memo<RichTextFieldProps>(\n    props => {\n        const {\n            className,\n            emptyText,\n            source,\n            stripTags = false,\n            ...rest\n        } = props;\n        const record = useRecordContext(props);\n        const value = get(record, source);\n\n        return (\n            <Typography\n                className={className}\n                variant=\"body2\"\n                component=\"span\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    emptyText\n                ) : stripTags ? (\n                    removeTags(value)\n                ) : (\n                    <span dangerouslySetInnerHTML={{ __html: value }} />\n                )}\n            </Typography>\n        );\n    }\n);\n\nRichTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nexport interface RichTextFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    stripTags?: boolean;\n}\n\nRichTextField.displayName = 'RichTextField';\n\nexport const removeTags = (input: string) =>\n    input ? input.replace(/<[^>]+>/gm, '') : '';\n","import * as React from 'react';\nimport { memo, FC } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { ChoicesProps, useChoices, useRecordContext } from 'ra-core';\nimport { Typography, TypographyProps } from '@mui/material';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * Display a value in an enumeration\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectField source=\"gender\" choices={choices} />\n *\n * By default, the text is built by\n * - finding a choice where the 'id' property equals the field value\n * - using the 'name' property as the option text\n *\n * You can also customize the properties to use for the value and text,\n * thanks to the 'optionValue' and 'optionText' attributes.\n *\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectField source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectField source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <Chip>{record.first_name} {record.last_name}</Chip>;\n * <SelectField source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The current choice is translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceField>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectField source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * **Tip**: <ReferenceField> sets `translateChoice` to false by default.\n */\nexport const SelectField: FC<SelectFieldProps> = memo(props => {\n    const {\n        className,\n        emptyText,\n        source,\n        choices,\n        optionValue,\n        optionText,\n        translateChoice,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const { getChoiceText, getChoiceValue } = useChoices({\n        optionText,\n        optionValue,\n        translateChoice,\n    });\n\n    const choice = choices.find(choice => getChoiceValue(choice) === value);\n\n    if (!choice) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        ) : null;\n    }\n\n    let choiceText = getChoiceText(choice);\n\n    return (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={className}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {choiceText}\n        </Typography>\n    );\n});\n\nSelectField.defaultProps = {\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n};\n\nSelectField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    choices: PropTypes.arrayOf(PropTypes.object).isRequired,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\n\nexport interface SelectFieldProps\n    extends ChoicesProps,\n        PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {}\n\nSelectField.displayName = 'SelectField';\n","import * as React from 'react';\nimport { memo, FC, ElementType } from 'react';\nimport get from 'lodash/get';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\nimport { useRecordContext } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const TextField: FC<TextFieldProps> = memo(props => {\n    const { className, source, emptyText, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n\n    return (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={className}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value != null && typeof value !== 'string'\n                ? JSON.stringify(value)\n                : value || emptyText}\n        </Typography>\n    );\n});\n\n// what? TypeScript loses the displayName if we don't set it explicitly\nTextField.displayName = 'TextField';\n\nTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n};\n\nexport interface TextFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        Omit<TypographyProps, 'textAlign'> {\n    // TypographyProps do not expose the component props, see https://github.com/mui-org/material-ui/issues/19512\n    component?: ElementType<any>;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, ReactNode } from 'react';\nimport {\n    TranslatableContextProvider,\n    useTranslatable,\n    UseTranslatableOptions,\n    RaRecord,\n    useRecordContext,\n} from 'ra-core';\nimport { TranslatableFieldsTabs } from './TranslatableFieldsTabs';\nimport { TranslatableFieldsTabContent } from './TranslatableFieldsTabContent';\n\n/**\n * Provides a way to show multiple languages for any field passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableFields locales={['en', 'fr']}>\n *     <TextField source={getSource('title')} />\n *     <TextField source={getSource('description')} />\n * </TranslatableFields>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableFields\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextField source={getSource('title')} />\n * <TranslatableFields>\n>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={selectLocale}>\n *             {locales.map((locale) => (\n *                 <option selected={locale.locale === selectedLocale}>\n *                     {locale.name}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * @param props The component props\n * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * @param {string[]} props.locales An array of the possible locales in the form. For example [{ 'en', 'fr' }].\n * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to MUI tabs.\n */\nexport const TranslatableFields = (\n    props: TranslatableFieldsProps\n): ReactElement => {\n    const {\n        defaultLocale,\n        locales,\n        groupKey = '',\n        selector = <TranslatableFieldsTabs groupKey={groupKey} />,\n        children,\n        resource,\n        className,\n    } = props;\n    const record = useRecordContext(props);\n    const context = useTranslatable({ defaultLocale, locales });\n\n    return (\n        <Root className={className}>\n            <TranslatableContextProvider value={context}>\n                {selector}\n                {locales.map(locale => (\n                    <TranslatableFieldsTabContent\n                        key={locale}\n                        locale={locale}\n                        record={record}\n                        resource={resource}\n                        groupKey={groupKey}\n                    >\n                        {children}\n                    </TranslatableFieldsTabContent>\n                ))}\n            </TranslatableContextProvider>\n        </Root>\n    );\n};\n\nexport interface TranslatableFieldsProps extends UseTranslatableOptions {\n    children: ReactNode;\n    className?: string;\n    record?: RaRecord;\n    resource?: string;\n    selector?: ReactElement;\n    groupKey?: string;\n}\n\nconst PREFIX = 'RaTranslatableFields';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexGrow: 1,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5),\n}));\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\nimport { useTranslatableContext } from 'ra-core';\nimport { TranslatableFieldsTab } from './TranslatableFieldsTab';\nimport { AppBarProps } from '../layout';\n\n/**\n * Default locale selector for the TranslatableFields component. Generates a tab for each specified locale.\n * @see TranslatableFields\n */\nexport const TranslatableFieldsTabs = (\n    props: TranslatableFieldsTabsProps & AppBarProps\n): ReactElement => {\n    const { groupKey, TabsProps: tabsProps, className } = props;\n    const { locales, selectLocale, selectedLocale } = useTranslatableContext();\n\n    const handleChange = (event, newLocale): void => {\n        selectLocale(newLocale);\n    };\n\n    return (\n        <StyledAppBar color=\"default\" position=\"static\" className={className}>\n            <Tabs\n                value={selectedLocale}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                {...tabsProps}\n            >\n                {locales.map(locale => (\n                    <TranslatableFieldsTab\n                        key={locale}\n                        value={locale}\n                        locale={locale}\n                        groupKey={groupKey}\n                    />\n                ))}\n            </Tabs>\n        </StyledAppBar>\n    );\n};\n\nexport interface TranslatableFieldsTabsProps {\n    TabsProps?: TabsProps;\n    groupKey?: string;\n}\n\nconst PREFIX = 'RaTranslatableFieldsTabs';\n\nconst StyledAppBar = styled(AppBar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    boxShadow: 'none',\n    borderRadius: 0,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius,\n    border: `1px solid ${theme.palette.divider}`,\n}));\n","import React from 'react';\nimport Tab, { TabProps } from '@mui/material/Tab';\nimport { useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\n\n/**\n * Single tab that selects a locale in a TranslatableFields component.\n * @see TranslatableFields\n */\nexport const TranslatableFieldsTab = (\n    props: TranslatableFieldsTabProps & TabProps\n) => {\n    const { locale, groupKey = '', ...rest } = props;\n    const translate = useTranslate();\n\n    return (\n        <Tab\n            id={`translatable-header-${groupKey}${locale}`}\n            label={translate(`ra.locales.${groupKey}${locale}`, {\n                _: capitalize(locale),\n            })}\n            {...rest}\n        />\n    );\n};\n\nexport interface TranslatableFieldsTabProps {\n    locale: string;\n    groupKey?: string;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n    Children,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport { useTranslatableContext, RaRecord } from 'ra-core';\nimport { Labeled } from '../Labeled';\n\n/**\n * Default container for a group of translatable fields inside a TranslatableFields components.\n * @see TranslatableFields\n */\nexport const TranslatableFieldsTabContent = (\n    props: TranslatableFieldsTabContentProps\n): ReactElement => {\n    const {\n        children,\n        groupKey = '',\n        locale,\n        record,\n        resource,\n        className,\n        ...other\n    } = props;\n    const { selectedLocale, getLabel, getSource } = useTranslatableContext();\n\n    return (\n        <Root\n            role=\"tabpanel\"\n            hidden={selectedLocale !== locale}\n            id={`translatable-content-${groupKey}${locale}`}\n            aria-labelledby={`translatable-header-${groupKey}${locale}`}\n            className={className}\n            {...other}\n        >\n            {Children.map(children, field =>\n                field && isValidElement<any>(field) ? (\n                    <div key={field.props.source}>\n                        {field.props.addLabel ? (\n                            <Labeled\n                                resource={resource}\n                                label={field.props.label}\n                                source={field.props.source}\n                            >\n                                {cloneElement(field, {\n                                    ...field.props,\n                                    label: getLabel(field.props.source),\n                                    record,\n                                    source: getSource(\n                                        field.props.source,\n                                        locale\n                                    ),\n                                })}\n                            </Labeled>\n                        ) : typeof field === 'string' ? (\n                            field\n                        ) : (\n                            cloneElement(field, {\n                                ...field.props,\n                                label: getLabel(field.props.source),\n                                record,\n                                source: getSource(field.props.source, locale),\n                            })\n                        )}\n                    </div>\n                ) : null\n            )}\n        </Root>\n    );\n};\n\nexport type TranslatableFieldsTabContentProps = {\n    children: ReactNode;\n    className?: string;\n    formGroupKeyPrefix?: string;\n    groupKey: string;\n    locale: string;\n    record: RaRecord;\n    resource: string;\n};\n\nconst PREFIX = 'RaTranslatableFieldsTabContent';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    borderRadius: 0,\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    border: `1px solid ${theme.palette.divider}`,\n    borderTop: 0,\n}));\n","import * as React from 'react';\nimport { AnchorHTMLAttributes, memo, FC } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext } from 'ra-core';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const UrlField: FC<UrlFieldProps> = memo(props => {\n    const { className, emptyText, source, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n\n    if (value == null) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText}\n            </Typography>\n        );\n    }\n\n    return (\n        <Link\n            className={className}\n            href={value}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n});\n\nUrlField.propTypes = fieldPropTypes;\nUrlField.displayName = 'UrlField';\n\nexport interface UrlFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\n","import * as React from 'react';\nimport { ReactNode } from 'react';\n\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\n/**\n * A field rendering its children.\n *\n * Designed as a wrapper for several fields, to support props read by\n * the parent element (e.g. `<SimpleShowLayout>`, `<Datagrid`).\n *\n * @example\n * import { WrapperField, TextField } from 'react-admin';\n *\n * const PostShow = () => (\n *    <Show>\n *        <SimpleShowLayout>\n *            <WrapperField label=\"author\" sortBy=\"last_name\">\n *               <TextField source=\"first_name\" />\n *               <TextField source=\"last_name\" />\n *            </WrapperField>\n *       </SimpleShowLayout>\n *   </Show>\n * );\n */\nexport const WrapperField = ({ children }: WrapperFieldProps) => (\n    <>{children}</>\n);\n\nWrapperField.displayName = 'WrapperField';\n\nWrapperField.propTypes = fieldPropTypes;\n\nexport interface WrapperFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps {\n    children: ReactNode;\n}\n","import * as React from 'react';\nimport { Children, isValidElement, ReactNode } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Stack } from '@mui/material';\nimport { ResponsiveStyleValue, SxProps } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    RaRecord,\n    useRecordContext,\n    OptionalRecordContextProvider,\n} from 'ra-core';\nimport { Labeled } from '../Labeled';\n\n/**\n * Layout for a Show view showing fields in one column.\n *\n * It pulls the record from the RecordContext. It renders the record fields in\n * a single-column layout (via MUI's `<Stack>` component).\n * `<SimpleShowLayout>` delegates the actual rendering of fields to its children.\n * It wraps each field inside a `<Labeled>` component to add a label.\n *\n * @example\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n *\n * @param {SimpleShowLayoutProps} props\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\n * @param {Object} props.sx Custom style object.\n */\nexport const SimpleShowLayout = (props: SimpleShowLayoutProps) => {\n    const { className, children, divider, spacing = 1, ...rest } = props;\n    const record = useRecordContext(props);\n    if (!record) {\n        return null;\n    }\n    return (\n        <OptionalRecordContextProvider value={props.record}>\n            <Root className={className} {...sanitizeRestProps(rest)}>\n                <Stack\n                    spacing={spacing}\n                    divider={divider}\n                    className={SimpleShowLayoutClasses.stack}\n                >\n                    {Children.map(children, field =>\n                        field && isValidElement<any>(field) ? (\n                            <Labeled\n                                key={field.props.source}\n                                className={clsx(\n                                    'ra-field',\n                                    field.props.source &&\n                                        `ra-field-${field.props.source}`,\n                                    SimpleShowLayoutClasses.row,\n                                    field.props.className\n                                )}\n                            >\n                                {field}\n                            </Labeled>\n                        ) : null\n                    )}\n                </Stack>\n            </Root>\n        </OptionalRecordContextProvider>\n    );\n};\n\nexport interface SimpleShowLayoutProps {\n    children: ReactNode;\n    className?: string;\n    divider?: ReactNode;\n    record?: RaRecord;\n    spacing?: ResponsiveStyleValue<number | string>;\n    sx?: SxProps;\n}\n\nSimpleShowLayout.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    record: PropTypes.object,\n    spacing: PropTypes.any,\n    sx: PropTypes.any,\n};\n\nconst PREFIX = 'RaSimpleShowLayout';\n\nexport const SimpleShowLayoutClasses = {\n    stack: `${PREFIX}-stack`,\n    row: `${PREFIX}-row`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flex: 1,\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    [`& .${SimpleShowLayoutClasses.stack}`]: {},\n    [`& .${SimpleShowLayoutClasses.row}`]: {\n        display: 'inline',\n    },\n}));\n\nconst sanitizeRestProps = ({\n    record,\n    resource,\n    initialValues,\n    translate,\n    ...rest\n}: any) => rest;\n","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport inflection from 'inflection';\nimport {\n    ShowBase,\n    InferredElement,\n    getElementsFromRecords,\n    useResourceContext,\n    useShowContext,\n} from 'ra-core';\n\nimport { ShowProps } from '../types';\nimport { ShowView } from './ShowView';\nimport { showFieldTypes } from './showFieldTypes';\n\nconst ShowViewGuesser = props => {\n    const resource = useResourceContext(props);\n    const { record } = useShowContext();\n    const [inferredChild, setInferredChild] = useState(null);\n    useEffect(() => {\n        if (record && !inferredChild) {\n            const inferredElements = getElementsFromRecords(\n                [record],\n                showFieldTypes\n            );\n            const inferredChild = new InferredElement(\n                showFieldTypes.show,\n                null,\n                inferredElements\n            );\n\n            process.env.NODE_ENV !== 'production' &&\n                // eslint-disable-next-line no-console\n                console.log(\n                    `Guessed Show:\n\nexport const ${inflection.capitalize(\n                        inflection.singularize(resource)\n                    )}Show = () => (\n    <Show>\n${inferredChild.getRepresentation()}\n    </Show>\n);`\n                );\n            setInferredChild(inferredChild.getElement());\n        }\n    }, [record, inferredChild, resource]);\n\n    return <ShowView {...props}>{inferredChild}</ShowView>;\n};\n\nShowViewGuesser.propTypes = ShowView.propTypes;\n\nexport const ShowGuesser = ({ id, queryOptions, ...rest }: ShowProps) => (\n    <ShowBase id={id} queryOptions={queryOptions}>\n        <ShowViewGuesser {...rest} />\n    </ShowBase>\n);\n\nexport default ShowGuesser;\n","import * as React from 'react';\nimport {\n    ChangeEvent,\n    Children,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n    useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveStyleValue, SxProps } from '@mui/system';\nimport { styled } from '@mui/material/styles';\nimport { Divider } from '@mui/material';\nimport { Outlet, Routes, Route } from 'react-router-dom';\nimport {\n    RaRecord,\n    useRecordContext,\n    OptionalRecordContextProvider,\n} from 'ra-core';\n\nimport {\n    TabbedShowLayoutTabs,\n    getShowLayoutTabFullPath,\n} from './TabbedShowLayoutTabs';\n\n/**\n * Layout for a Show view showing fields grouped in tabs and laid out in a single column.\n *\n * It pulls the record from the RecordContext. It renders a set of `<Tabs>`,\n * each of which contains a list of record fields in a single-column layout\n * (via MUI's `<Stack>` component).\n * `<TabbedShowLayout>` delegates the actual rendering of fields to its children,\n * which should be `<Tab>` components.\n * `<Tab>` wraps each field inside a <Labeled> component to add a label.\n *\n * @example\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <TabbedShowLayout>\n *             <Tab label=\"Content\">\n *                 <TextField source=\"title\" />\n *                 <TextField source=\"subtitle\" />\n *            </Tab>\n *             <Tab label=\"Metadata\">\n *                 <TextField source=\"category\" />\n *            </Tab>\n *         </TabbedShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n *\n * @param {TabbedShowLayoutProps} props\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\n * @param {Object} props.sx Custom style object.\n * @param {boolean} props.syncWithLocation Whether to update the URL when the tab changes. Defaults to true.\n * @param {ElementType} props.tabs A custom component for rendering tabs.\n */\nexport const TabbedShowLayout = (props: TabbedShowLayoutProps) => {\n    const {\n        children,\n        className,\n        spacing,\n        divider,\n        syncWithLocation = true,\n        tabs = DefaultTabs,\n        value,\n        ...rest\n    } = props;\n    const record = useRecordContext(props);\n    const nonNullChildren = Children.toArray(children).filter(\n        child => child !== null\n    );\n    const [tabValue, setTabValue] = useState(0);\n\n    const handleTabChange = (event: ChangeEvent<{}>, value: any): void => {\n        if (!syncWithLocation) {\n            setTabValue(value);\n        }\n    };\n\n    if (!record) {\n        return null;\n    }\n\n    const renderTabHeaders = () =>\n        cloneElement(\n            tabs,\n            {\n                onChange: handleTabChange,\n                syncWithLocation,\n                value: tabValue,\n            },\n            nonNullChildren\n        );\n\n    return (\n        <OptionalRecordContextProvider value={props.record}>\n            <Root className={className} {...sanitizeRestProps(rest)}>\n                {syncWithLocation ? (\n                    <Routes>\n                        <Route\n                            path=\"/*\"\n                            element={\n                                <>\n                                    {renderTabHeaders()}\n                                    <Divider />\n                                    <div\n                                        className={\n                                            TabbedShowLayoutClasses.content\n                                        }\n                                    >\n                                        <Outlet />\n                                    </div>\n                                </>\n                            }\n                        >\n                            {Children.map(nonNullChildren, (tab, index) =>\n                                isValidElement(tab) ? (\n                                    <Route\n                                        path={getShowLayoutTabFullPath(\n                                            tab,\n                                            index\n                                        )}\n                                        element={cloneElement(tab, {\n                                            context: 'content',\n                                            spacing,\n                                            divider,\n                                        })}\n                                    />\n                                ) : null\n                            )}\n                        </Route>\n                    </Routes>\n                ) : (\n                    <>\n                        {renderTabHeaders()}\n                        <Divider />\n                        <div className={TabbedShowLayoutClasses.content}>\n                            {Children.map(nonNullChildren, (tab, index) => {\n                                if (\n                                    !isValidElement(tab) ||\n                                    tabValue !== index\n                                ) {\n                                    return null;\n                                }\n                                return cloneElement(tab, {\n                                    context: 'content',\n                                    spacing,\n                                    divider,\n                                });\n                            })}\n                        </div>\n                    </>\n                )}\n            </Root>\n        </OptionalRecordContextProvider>\n    );\n};\n\nexport interface TabbedShowLayoutProps {\n    children: ReactNode;\n    className?: string;\n    divider?: ReactNode;\n    record?: RaRecord;\n    rootPath?: string;\n    spacing?: ResponsiveStyleValue<number | string>;\n    sx?: SxProps;\n    syncWithLocation?: boolean;\n    tabs?: ReactElement;\n    value?: any;\n}\n\nTabbedShowLayout.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    record: PropTypes.object,\n    spacing: PropTypes.any,\n    sx: PropTypes.any,\n    syncWithLocation: PropTypes.bool,\n    tabs: PropTypes.element,\n    value: PropTypes.number,\n};\n\nconst DefaultTabs = <TabbedShowLayoutTabs />;\n\nconst PREFIX = 'RaTabbedShowLayout';\n\nexport const TabbedShowLayoutClasses = {\n    content: `${PREFIX}-content`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flex: 1,\n    [`& .${TabbedShowLayoutClasses.content}`]: {\n        padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    },\n}));\n\nconst sanitizeRestProps = ({\n    record,\n    resource,\n    initialValues,\n    staticContext,\n    translate,\n    tabs,\n    ...rest\n}: any) => rest;\n","import * as React from 'react';\nimport { Children, cloneElement, ReactElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nimport { TabProps } from './Tab';\n\nexport const TabbedShowLayoutTabs = ({\n    children,\n    syncWithLocation,\n    value,\n    ...rest\n}: TabbedShowLayoutTabsProps) => {\n    const params = useParams();\n\n    // params will include eventual parameters from the root pathname and * for the remaining part\n    // which should match the tabs paths\n    const tabValue = params['*'];\n\n    return (\n        <Tabs\n            indicatorColor=\"primary\"\n            value={syncWithLocation ? tabValue : value}\n            {...rest}\n        >\n            {Children.map(children, (tab, index) => {\n                if (!tab || !isValidElement(tab)) return null;\n                // Builds the full tab which is the concatenation of the last matched route in the\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n                // and the tab path.\n                // This will be used as the Tab's value\n                const tabPath = getShowLayoutTabFullPath(tab, index);\n\n                return cloneElement(tab, {\n                    context: 'header',\n                    value: syncWithLocation ? tabPath : index,\n                    syncWithLocation,\n                });\n            })}\n        </Tabs>\n    );\n};\n\nexport const getShowLayoutTabFullPath = (tab, index) =>\n    `${tab.props.path ? `${tab.props.path}` : index > 0 ? index : ''}`;\n\nexport interface TabbedShowLayoutTabsProps extends TabsProps {\n    children?: ReactElement<TabProps>;\n    syncWithLocation?: boolean;\n}\n\nTabbedShowLayoutTabs.propTypes = {\n    children: PropTypes.node,\n};\n","import * as React from 'react';\nimport { isValidElement, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab, TabProps as MuiTabProps, Stack } from '@mui/material';\nimport { ResponsiveStyleValue } from '@mui/system';\nimport { useTranslate, RaRecord } from 'ra-core';\nimport clsx from 'clsx';\n\nimport { Labeled } from '../Labeled';\n\n/**\n * Tab element for the TabbedShowLayout.\n *\n * The `<Tab>` component accepts the following props:\n *\n * - label: The string displayed for each tab\n * - icon: The icon to show before the label (optional). Must be a component.\n * - path: The string used for custom urls\n *\n * @example\n *     // in src/posts.js\n *     import * as React from \"react\";\n *     import FavoriteIcon from '@mui/icons-material/Favorite';\n *     import PersonPinIcon from '@mui/icons-material/PersonPin';\n *     import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <TabbedShowLayout>\n *                 <Tab label=\"Content\" icon={<FavoriteIcon />}>\n *                     <TextField source=\"title\" />\n *                     <TextField source=\"subtitle\" />\n *                </Tab>\n *                 <Tab label=\"Metadata\" icon={<PersonIcon />} path=\"metadata\">\n *                     <TextField source=\"category\" />\n *                </Tab>\n *             </TabbedShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import * as React from \"react\";\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\nexport const Tab = ({\n    children,\n    contentClassName,\n    context,\n    className,\n    divider,\n    icon,\n    label,\n    record,\n    spacing = 1,\n    syncWithLocation = true,\n    value,\n    ...rest\n}: TabProps) => {\n    const translate = useTranslate();\n    const location = useLocation();\n    const propsForLink = {\n        component: Link,\n        to: { ...location, pathname: value },\n    };\n\n    const renderHeader = () => (\n        <MuiTab\n            key={`tab-header-${value}`}\n            label={\n                typeof label === 'string'\n                    ? translate(label, { _: label })\n                    : label\n            }\n            value={value}\n            icon={icon}\n            className={clsx('show-tab', className)}\n            {...(syncWithLocation ? propsForLink : {})} // to avoid TypeScript screams, see https://github.com/mui-org/material-ui/issues/9106#issuecomment-451270521\n            {...rest}\n        />\n    );\n\n    const renderContent = () => (\n        <Stack className={contentClassName} spacing={spacing} divider={divider}>\n            {React.Children.map(children, field =>\n                field && isValidElement<any>(field) ? (\n                    <Labeled\n                        key={field.props.source}\n                        className={clsx(\n                            'ra-field',\n                            field.props.source &&\n                                `ra-field-${field.props.source}`,\n                            field.props.className\n                        )}\n                    >\n                        {field}\n                    </Labeled>\n                ) : null\n            )}\n        </Stack>\n    );\n\n    return context === 'header' ? renderHeader() : renderContent();\n};\n\nTab.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    context: PropTypes.oneOf(['header', 'content']),\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    path: PropTypes.string,\n    spacing: PropTypes.any,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport interface TabProps extends Omit<MuiTabProps, 'children'> {\n    children: ReactNode;\n    contentClassName?: string;\n    context?: 'header' | 'content';\n    className?: string;\n    divider?: ReactNode;\n    icon?: ReactElement;\n    label: string | ReactElement;\n    path?: string;\n    record?: RaRecord;\n    spacing?: ResponsiveStyleValue<number | string>;\n    syncWithLocation?: boolean;\n    value?: string | number;\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport Inbox from '@mui/icons-material/Inbox';\nimport {\n    useTranslate,\n    useResourceDefinition,\n    useResourceContext,\n    useGetResourceLabel,\n} from 'ra-core';\n\nimport { CreateButton } from '../button';\n\nexport const Empty = (props: EmptyProps) => {\n    const { className } = props;\n    const { hasCreate } = useResourceDefinition(props);\n    const resource = useResourceContext(props);\n\n    const translate = useTranslate();\n\n    const getResourceLabel = useGetResourceLabel();\n    const resourceName = translate(`resources.${resource}.forcedCaseName`, {\n        smart_count: 0,\n        _: getResourceLabel(resource, 0),\n    });\n\n    const emptyMessage = translate('ra.page.empty', { name: resourceName });\n    const inviteMessage = translate('ra.page.invite');\n\n    return (\n        <Root className={className}>\n            <div className={EmptyClasses.message}>\n                <Inbox className={EmptyClasses.icon} />\n                <Typography variant=\"h4\" paragraph>\n                    {translate(`resources.${resource}.empty`, {\n                        _: emptyMessage,\n                    })}\n                </Typography>\n                {hasCreate && (\n                    <Typography variant=\"body1\">\n                        {translate(`resources.${resource}.invite`, {\n                            _: inviteMessage,\n                        })}\n                    </Typography>\n                )}\n            </div>\n            {hasCreate && (\n                <div className={EmptyClasses.toolbar}>\n                    <CreateButton variant=\"contained\" />\n                </div>\n            )}\n        </Root>\n    );\n};\n\nexport interface EmptyProps {\n    resource?: string;\n    hasCreate?: boolean;\n    className?: string;\n}\n\nconst PREFIX = 'RaEmpty';\n\nexport const EmptyClasses = {\n    message: `${PREFIX}-message`,\n    icon: `${PREFIX}-icon`,\n    toolbar: `${PREFIX}-toolbar`,\n};\n\nconst Root = styled('span', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flex: 1,\n    [`& .${EmptyClasses.message}`]: {\n        textAlign: 'center',\n        opacity: theme.palette.mode === 'light' ? 0.5 : 0.8,\n        margin: '0 1em',\n        color:\n            theme.palette.mode === 'light'\n                ? 'inherit'\n                : theme.palette.text.primary,\n    },\n\n    [`& .${EmptyClasses.icon}`]: {\n        width: '9em',\n        height: '9em',\n    },\n\n    [`& .${EmptyClasses.toolbar}`]: {\n        textAlign: 'center',\n        marginTop: '2em',\n    },\n}));\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListBase, ListControllerProps, RaRecord } from 'ra-core';\n\nimport { TitlePropType } from '../layout/Title';\n\nimport { ListView, ListViewProps } from './ListView';\n\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n *\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * The <List> component accepts the following props:\n *\n * - actions\n * - aside: Side Component\n * - children: List Layout\n * - component\n * - disableAuthentication\n * - disableSyncWithLocation\n * - empty: Empty Page Component\n * - emptyWhileLoading\n * - exporter\n * - filters: Filter Inputs\n * - filter: Permanent Filter\n * - filterDefaultValues\n * - pagination: Pagination Component\n * - perPage: Pagination Size\n * - queryOptions\n * - sort: Default Sort Field & Order\n * - title\n * - sx: CSS API\n *\n * @example\n * const postFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n *     <TextInput label=\"Title\" source=\"title\" />\n * ];\n * export const PostList = (props) => (\n *     <List {...props}\n *         title=\"List of posts\"\n *         sort={{ field: 'published_at' }}\n *         filter={{ is_published: true }}\n *         filters={postFilters}\n *     >\n *         <Datagrid>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n */\nexport const List = <RecordType extends RaRecord = any>({\n    debounce,\n    disableAuthentication,\n    disableSyncWithLocation,\n    exporter,\n    filter,\n    filterDefaultValues,\n    perPage,\n    queryOptions,\n    resource,\n    sort,\n    ...rest\n}: ListProps<RecordType>): ReactElement => (\n    <ListBase<RecordType>\n        debounce={debounce}\n        disableAuthentication={disableAuthentication}\n        disableSyncWithLocation={disableSyncWithLocation}\n        exporter={exporter}\n        filter={filter}\n        filterDefaultValues={filterDefaultValues}\n        perPage={perPage}\n        queryOptions={queryOptions}\n        resource={resource}\n        sort={sort}\n    >\n        <ListView<RecordType> {...rest} />\n    </ListBase>\n);\n\nexport interface ListProps<RecordType extends RaRecord = any>\n    extends ListControllerProps<RecordType>,\n        ListViewProps {}\n\nList.propTypes = {\n    // the props you can change\n    // @ts-ignore-line\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n    aside: PropTypes.element,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    emptyWhileLoading: PropTypes.bool,\n    filter: PropTypes.object,\n    filterDefaultValues: PropTypes.object,\n    filters: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element),\n    ]),\n    // @ts-ignore-line\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    perPage: PropTypes.number.isRequired,\n    //@ts-ignore-line\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    sx: PropTypes.any,\n    title: TitlePropType,\n    // the props managed by react-admin\n    disableSyncWithLocation: PropTypes.bool,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    resource: PropTypes.string,\n};\n\nList.defaultProps = {\n    filter: {},\n    perPage: 10,\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, cloneElement, ReactElement, ElementType } from 'react';\nimport PropTypes from 'prop-types';\nimport { SxProps } from '@mui/system';\nimport Card from '@mui/material/Card';\nimport clsx from 'clsx';\nimport { ComponentPropType, useListContext, RaRecord } from 'ra-core';\n\nimport { Title, TitlePropType } from '../layout/Title';\nimport { ListToolbar } from './ListToolbar';\nimport { Pagination as DefaultPagination } from './pagination';\nimport { ListActions as DefaultActions } from './ListActions';\nimport { Empty } from './Empty';\n\nconst defaultActions = <DefaultActions />;\nconst defaultPagination = <DefaultPagination />;\nconst defaultEmpty = <Empty />;\nconst DefaultComponent = Card;\n\nexport const ListView = <RecordType extends RaRecord = any>(\n    props: ListViewProps\n) => {\n    const {\n        actions = defaultActions,\n        aside,\n        filters,\n        bulkActionButtons,\n        emptyWhileLoading,\n        hasCreate,\n        pagination = defaultPagination,\n        children,\n        className,\n        component: Content = DefaultComponent,\n        title,\n        empty = defaultEmpty,\n        ...rest\n    } = props;\n    const {\n        defaultTitle,\n        data,\n        error,\n        total,\n        isLoading,\n        filterValues,\n    } = useListContext<RecordType>(props);\n\n    if (!children || (!data && isLoading && emptyWhileLoading)) {\n        return null;\n    }\n\n    if (error) {\n        return null;\n    }\n\n    const renderList = () => (\n        <div className={ListClasses.main}>\n            {(filters || actions) && (\n                <ListToolbar\n                    filters={filters}\n                    actions={actions}\n                    hasCreate={hasCreate}\n                />\n            )}\n            <Content className={ListClasses.content}>\n                {bulkActionButtons && children\n                    ? cloneElement(Children.only(children), {\n                          bulkActionButtons,\n                      })\n                    : children}\n            </Content>\n            {pagination !== false && pagination}\n        </div>\n    );\n\n    const renderEmpty = () =>\n        empty !== false && cloneElement(empty, { hasCreate });\n\n    const shouldRenderEmptyPage =\n        !isLoading &&\n        total === 0 &&\n        !Object.keys(filterValues).length &&\n        empty !== false;\n\n    return (\n        <Root className={clsx('list-page', className)} {...rest}>\n            <Title title={title} defaultTitle={defaultTitle} />\n            {shouldRenderEmptyPage ? renderEmpty() : renderList()}\n            {aside}\n        </Root>\n    );\n};\n\nListView.propTypes = {\n    // @ts-ignore-line\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    component: ComponentPropType,\n    // @ts-ignore-line\n    sort: PropTypes.shape({\n        field: PropTypes.string.isRequired,\n        order: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.any,\n    defaultTitle: PropTypes.string,\n    displayedFilters: PropTypes.object,\n    emptyWhileLoading: PropTypes.bool,\n    // @ts-ignore-line\n    exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    filterDefaultValues: PropTypes.object,\n    filters: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element),\n    ]),\n    filterValues: PropTypes.object,\n    hasCreate: PropTypes.bool,\n    hideFilter: PropTypes.func,\n    ids: PropTypes.array,\n    loading: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    onUnselectItems: PropTypes.func,\n    page: PropTypes.number,\n    // @ts-ignore-line\n    pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    perPage: PropTypes.number,\n    refresh: PropTypes.func,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.array,\n    setFilters: PropTypes.func,\n    setPage: PropTypes.func,\n    setPerPage: PropTypes.func,\n    setSort: PropTypes.func,\n    showFilter: PropTypes.func,\n    title: TitlePropType,\n    total: PropTypes.number,\n};\n\nexport interface ListViewProps {\n    actions?: ReactElement | false;\n    aside?: ReactElement;\n    /**\n     * @deprecated pass the bulkActionButtons prop to the List child (Datagrid or SimpleList) instead\n     */\n    bulkActionButtons?: ReactElement | false;\n    className?: string;\n    children: ReactElement;\n    component?: ElementType;\n    empty?: ReactElement | false;\n    emptyWhileLoading?: boolean;\n    filters?: ReactElement | ReactElement[];\n    hasCreate?: boolean;\n    pagination?: ReactElement | false;\n    title?: string | ReactElement;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaList';\n\nexport const ListClasses = {\n    main: `${PREFIX}-main`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    noResults: `${PREFIX}-noResults`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n\n    [`& .${ListClasses.main}`]: {\n        flex: '1 1 auto',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    [`& .${ListClasses.content}`]: {\n        position: 'relative',\n        [theme.breakpoints.down('sm')]: {\n            boxShadow: 'none',\n        },\n        overflow: 'inherit',\n    },\n\n    [`& .${ListClasses.actions}`]: {\n        zIndex: 2,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexWrap: 'wrap',\n    },\n\n    [`& .${ListClasses.noResults}`]: { padding: 20 },\n}));\n","import * as React from 'react';\nimport { FC, memo } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar, ToolbarProps } from '@mui/material';\nimport { Exporter } from 'ra-core';\n\nimport { FilterForm } from './filter';\nimport { FilterContext } from './FilterContext';\n\nexport const ListToolbar: FC<ListToolbarProps> = memo(props => {\n    const { filters, actions, className, ...rest } = props;\n\n    return Array.isArray(filters) ? (\n        <FilterContext.Provider value={filters}>\n            <Root className={className}>\n                <FilterForm />\n                <span />\n                {actions &&\n                    React.cloneElement(actions, {\n                        ...rest,\n                        ...actions.props,\n                    })}\n            </Root>\n        </FilterContext.Provider>\n    ) : (\n        <Root className={className}>\n            {filters &&\n                React.cloneElement(filters, {\n                    ...rest,\n                    context: 'form',\n                })}\n            <span />\n            {actions &&\n                React.cloneElement(actions, {\n                    ...rest,\n                    filters,\n                    ...actions.props,\n                })}\n        </Root>\n    );\n});\n\nListToolbar.propTypes = {\n    filters: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element),\n    ]),\n    // @ts-ignore\n    actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n    // @ts-ignore\n    exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n};\n\nexport interface ListToolbarProps\n    extends Omit<ToolbarProps, 'classes' | 'onSelect'> {\n    actions?: ReactElement | false;\n    exporter?: Exporter | false;\n    filters?: ReactElement | ReactElement[];\n    hasCreate?: boolean;\n}\n\nconst PREFIX = 'RaListToolbar';\n\nconst Root = styled(Toolbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    minHeight: 'auto',\n    [theme.breakpoints.up('sm')]: {\n        paddingRight: 0,\n    },\n    [theme.breakpoints.up('xs')]: {\n        paddingLeft: 0,\n    },\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n","import * as React from 'react';\nimport { cloneElement, useMemo, useContext, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    sanitizeListRestProps,\n    Identifier,\n    SortPayload,\n    Exporter,\n    useListContext,\n    useResourceContext,\n    useResourceDefinition,\n} from 'ra-core';\nimport { ToolbarProps } from '@mui/material';\n\nimport TopToolbar from '../layout/TopToolbar';\nimport { CreateButton, ExportButton } from '../button';\nimport { FilterContext } from './FilterContext';\nimport { FilterButton } from './filter';\n\n/**\n * Action Toolbar for the List view\n *\n * Internal component. If you want to add or remove actions for a List view,\n * write your own ListActions Component. Then, in the <List> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import { cloneElement } from 'react';\n *     import Button from '@mui/material/Button';\n *     import { TopToolbar, List, CreateButton, ExportButton } from 'react-admin';\n *\n *     const PostListActions = ({ filters }) => (\n *         <TopToolbar>\n *             { cloneElement(filters, { context: 'button' }) }\n *             <CreateButton/>\n *             <ExportButton/>\n *             // Add your custom actions here //\n *             <Button onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostList = (props) => (\n *         <List actions={<PostListActions />} {...props}>\n *             ...\n *         </List>\n *     );\n */\nexport const ListActions = (props: ListActionsProps) => {\n    const { className, filters: filtersProp, hasCreate: _, ...rest } = props;\n    const {\n        sort,\n        displayedFilters,\n        filterValues,\n        exporter,\n        showFilter,\n        total,\n    } = useListContext(props);\n    const resource = useResourceContext(props);\n    const { hasCreate } = useResourceDefinition(props);\n    const filters = useContext(FilterContext) || filtersProp;\n    return useMemo(\n        () => (\n            <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n                {filtersProp\n                    ? cloneElement(filtersProp, {\n                          resource,\n                          showFilter,\n                          displayedFilters,\n                          filterValues,\n                          context: 'button',\n                      })\n                    : filters && <FilterButton />}\n                {hasCreate && <CreateButton />}\n                {exporter !== false && (\n                    <ExportButton\n                        disabled={total === 0}\n                        resource={resource}\n                        sort={sort}\n                        filterValues={filterValues}\n                    />\n                )}\n            </TopToolbar>\n        ),\n        /* eslint-disable react-hooks/exhaustive-deps */\n        [\n            resource,\n            displayedFilters,\n            filterValues,\n            filtersProp,\n            showFilter,\n            filters,\n            total,\n            className,\n            sort,\n            exporter,\n            hasCreate,\n        ]\n    );\n};\n\nListActions.propTypes = {\n    className: PropTypes.string,\n    sort: PropTypes.any,\n    displayedFilters: PropTypes.object,\n    exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    filters: PropTypes.element,\n    filterValues: PropTypes.object,\n    hasCreate: PropTypes.bool,\n    resource: PropTypes.string,\n    onUnselectItems: PropTypes.func.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    showFilter: PropTypes.func,\n    total: PropTypes.number,\n};\n\nListActions.defaultProps = {\n    selectedIds: [],\n    onUnselectItems: () => null,\n};\n\nexport interface ListActionsProps extends ToolbarProps {\n    sort?: SortPayload;\n    className?: string;\n    resource?: string;\n    filters?: ReactElement<any>;\n    displayedFilters?: any;\n    exporter?: Exporter | boolean;\n    filterValues?: any;\n    permanentFilter?: any;\n    hasCreate?: boolean;\n    selectedIds?: Identifier[];\n    onUnselectItems?: () => void;\n    showFilter?: (filterName: string, defaultValue: any) => void;\n    total?: number;\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport inflection from 'inflection';\nimport {\n    useListController,\n    getElementsFromRecords,\n    InferredElement,\n    ListContextProvider,\n    useListContext,\n    useResourceContext,\n    RaRecord,\n} from 'ra-core';\n\nimport { ListView, ListViewProps } from './ListView';\nimport { listFieldTypes } from './listFieldTypes';\n\n/**\n * List component rendering a <Datagrid> based on the result of the\n * dataProvider.getList() call.\n *\n * The result (choice and type of columns) isn't configurable, but the\n * <ListGuesser> outputs the <Datagrid> it has guessed to the console so that\n * developers can start from there.\n *\n * To be used as the list prop of a <Resource>.\n *\n * @example\n *\n * import { Admin, Resource, ListGuesser } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n */\nexport const ListGuesser = <RecordType extends RaRecord = any>() => {\n    const controllerProps = useListController<RecordType>();\n    return (\n        <ListContextProvider value={controllerProps}>\n            <ListViewGuesser {...controllerProps} />\n        </ListContextProvider>\n    );\n};\n\nconst ListViewGuesser = (props: Omit<ListViewProps, 'children'>) => {\n    const { data } = useListContext(props);\n    const resource = useResourceContext();\n    const [inferredChild, setInferredChild] = useState(null);\n    useEffect(() => {\n        if (data && data.length > 0 && !inferredChild) {\n            const inferredElements = getElementsFromRecords(\n                data,\n                listFieldTypes\n            );\n            const inferredChild = new InferredElement(\n                listFieldTypes.table,\n                null,\n                inferredElements\n            );\n\n            process.env.NODE_ENV !== 'production' &&\n                // eslint-disable-next-line no-console\n                console.log(\n                    `Guessed List:\n\nexport const ${inflection.capitalize(\n                        inflection.singularize(resource)\n                    )}List = () => (\n    <List>\n${inferredChild.getRepresentation()}\n    </List>\n);`\n                );\n            setInferredChild(inferredChild.getElement());\n        }\n    }, [data, inferredChild, resource]);\n\n    return <ListView {...props}>{inferredChild}</ListView>;\n};\n\nListViewGuesser.propTypes = ListView.propTypes;\n","import * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport {\n    ArrayField,\n    BooleanField,\n    ChipField,\n    DateField,\n    EmailField,\n    NumberField,\n    ReferenceField,\n    ReferenceArrayField,\n    TextField,\n    UrlField,\n} from '../field';\n\nexport const listFieldTypes = {\n    table: {\n        component: props => <Datagrid rowClick=\"edit\" {...props} />, // eslint-disable-line react/display-name\n        representation: (_, children) => `        <Datagrid rowClick=\"edit\">\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\n        </Datagrid>`,\n    },\n    array: {\n        // eslint-disable-next-line react/display-name\n        component: ({ children, ...props }) => (\n            <ArrayField {...props}>\n                <SingleFieldList>\n                    <ChipField\n                        source={children.length > 0 && children[0].props.source}\n                    />\n                </SingleFieldList>\n            </ArrayField>\n        ),\n        representation: (props, children) =>\n            `<ArrayField source=\"${\n                props.source\n            }\"><SingleFieldList><ChipField source=\"${\n                children.length > 0 && children[0].getProps().source\n            }\" /></SingleFieldList></ArrayField>`,\n    },\n    boolean: {\n        component: BooleanField,\n        representation: props => `<BooleanField source=\"${props.source}\" />`,\n    },\n    date: {\n        component: DateField,\n        representation: props => `<DateField source=\"${props.source}\" />`,\n    },\n    email: {\n        component: EmailField,\n        representation: props => `<EmailField source=\"${props.source}\" />`,\n    },\n    id: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    number: {\n        component: NumberField,\n        representation: props => `<NumberField source=\"${props.source}\" />`,\n    },\n    reference: {\n        component: ReferenceField,\n        representation: props =>\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\"><TextField source=\"id\" /></ReferenceField>`,\n    },\n    referenceChild: {\n        component: props => <TextField source=\"id\" {...props} />, // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    referenceArray: {\n        component: ReferenceArrayField,\n        representation: props =>\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\"><TextField source=\"id\" /></ReferenceArrayField>`,\n    },\n    referenceArrayChild: {\n        component: props => <TextField source=\"id\" {...props} />, // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    richText: undefined, // never display a rich text field in a datagrid\n    string: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    url: {\n        component: UrlField,\n        representation: props => `<UrlField source=\"${props.source}\" />`,\n    },\n};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n    cloneElement,\n    Children,\n    HtmlHTMLAttributes,\n    ComponentType,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport {\n    sanitizeListRestProps,\n    useListContext,\n    useResourceContext,\n    RaRecord,\n    RecordContextProvider,\n    ComponentPropType,\n    useCreatePath,\n} from 'ra-core';\n\nimport { Link } from '../Link';\n\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the books by the current author\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, it includes a link to the <Edit> page of the related record\n * (`/books/:id` in the previous example).\n *\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType=\"show\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * You can also prevent `<SingleFieldList>` from adding link to children by setting\n * `linkType` to false.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType={false}>\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\nexport const SingleFieldList = (props: SingleFieldListProps) => {\n    const {\n        className,\n        children,\n        linkType = 'edit',\n        component: Component = Root,\n        ...rest\n    } = props;\n    const { data, isLoading } = useListContext(props);\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n\n    if (isLoading === true) {\n        return <LinearProgress />;\n    }\n\n    return (\n        <Component className={className} {...sanitizeListRestProps(rest)}>\n            {data.map(record => {\n                const resourceLinkPath = !linkType\n                    ? false\n                    : createPath({\n                          resource,\n                          type: linkType,\n                          id: record.id,\n                      });\n\n                if (resourceLinkPath) {\n                    return (\n                        <RecordContextProvider value={record} key={record.id}>\n                            <Link\n                                className={SingleFieldListClasses.link}\n                                to={resourceLinkPath}\n                                onClick={stopPropagation}\n                            >\n                                {cloneElement(Children.only(children), {\n                                    record,\n                                    resource,\n                                    // Workaround to force ChipField to be clickable\n                                    onClick: handleClick,\n                                })}\n                            </Link>\n                        </RecordContextProvider>\n                    );\n                }\n\n                return (\n                    <RecordContextProvider value={record} key={record.id}>\n                        {children}\n                    </RecordContextProvider>\n                );\n            })}\n        </Component>\n    );\n};\n\nSingleFieldList.propTypes = {\n    children: PropTypes.element.isRequired,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: ComponentPropType,\n    data: PropTypes.any,\n    ids: PropTypes.array,\n    // @ts-ignore\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    resource: PropTypes.string,\n};\n\nexport interface SingleFieldListProps<RecordType extends RaRecord = any>\n    extends HtmlHTMLAttributes<HTMLDivElement> {\n    className?: string;\n\n    component?: string | ComponentType<any>;\n    linkType?: string | false;\n    children: React.ReactElement;\n    // can be injected when using the component without context\n    data?: RecordType[];\n    total?: number;\n    loaded?: boolean;\n}\n\nconst PREFIX = 'RaSingleFieldList';\n\nexport const SingleFieldListClasses = {\n    link: `${PREFIX}-link`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(-1),\n\n    [`& .${SingleFieldListClasses.link}`]: {\n        textDecoration: 'none',\n    },\n}));\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from MUI.\n// The MUI Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { isValidElement, ReactNode, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Avatar,\n    List,\n    ListProps,\n    ListItem,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    ListItemProps,\n    ListItemSecondaryAction,\n    ListItemText,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport {\n    Identifier,\n    RaRecord,\n    RecordContextProvider,\n    sanitizeListRestProps,\n    useListContext,\n    useResourceContext,\n    useCreatePath,\n} from 'ra-core';\n\nimport { SimpleListLoading } from './SimpleListLoading';\n\n/**\n * The <SimpleList> component renders a list of records as a MUI <List>.\n * It is usually used as a child of react-admin's <List> and <ReferenceManyField> components.\n *\n * Also widely used on Mobile.\n *\n * Props:\n * - primaryText: function returning a React element (or some text) based on the record\n * - secondaryText: same\n * - tertiaryText: same\n * - leftAvatar: function returning a React element based on the record\n * - leftIcon: same\n * - rightAvatar: same\n * - rightIcon: same\n * - linkType: 'edit' or 'show', or a function returning 'edit' or 'show' based on the record\n * - rowStyle: function returning a style object based on (record, index)\n *\n * @example // Display all posts as a List\n * const postRowStyle = (record, index) => ({\n *     backgroundColor: record.views >= 500 ? '#efe' : 'white',\n * });\n * export const PostList = (props) => (\n *     <List {...props}>\n *         <SimpleList\n *             primaryText={record => record.title}\n *             secondaryText={record => `${record.views} views`}\n *             tertiaryText={record =>\n *                 new Date(record.published_at).toLocaleDateString()\n *             }\n *             rowStyle={postRowStyle}\n *          />\n *     </List>\n * );\n */\nexport const SimpleList = <RecordType extends RaRecord = any>(\n    props: SimpleListProps<RecordType>\n) => {\n    const {\n        className,\n        hasBulkActions,\n        leftAvatar,\n        leftIcon,\n        linkType = 'edit',\n        primaryText,\n        rightAvatar,\n        rightIcon,\n        secondaryText,\n        tertiaryText,\n        rowStyle,\n        ...rest\n    } = props;\n    const { data, isLoading, total } = useListContext<RecordType>(props);\n    const resource = useResourceContext(props);\n\n    if (isLoading === true) {\n        return (\n            <SimpleListLoading\n                className={className}\n                hasLeftAvatarOrIcon={!!leftIcon || !!leftAvatar}\n                hasRightAvatarOrIcon={!!rightIcon || !!rightAvatar}\n                hasSecondaryText={!!secondaryText}\n                hasTertiaryText={!!tertiaryText}\n            />\n        );\n    }\n\n    const renderAvatar = (\n        record: RecordType,\n        avatarCallback: FunctionToElement<RecordType>\n    ) => {\n        const avatarValue = avatarCallback(record, record.id);\n        if (\n            typeof avatarValue === 'string' &&\n            (avatarValue.startsWith('http') || avatarValue.startsWith('data:'))\n        ) {\n            return <Avatar src={avatarValue} />;\n        } else {\n            return <Avatar>{avatarValue}</Avatar>;\n        }\n    };\n\n    return (total == null && data?.length > 0) || total > 0 ? (\n        <Root className={className} {...sanitizeListRestProps(rest)}>\n            {data.map((record, rowIndex) => (\n                <RecordContextProvider key={record.id} value={record}>\n                    <ListItem disablePadding>\n                        <LinkOrNot\n                            linkType={linkType}\n                            resource={resource}\n                            id={record.id}\n                            record={record}\n                            style={\n                                rowStyle\n                                    ? rowStyle(record, rowIndex)\n                                    : undefined\n                            }\n                        >\n                            {leftIcon && (\n                                <ListItemIcon>\n                                    {leftIcon(record, record.id)}\n                                </ListItemIcon>\n                            )}\n                            {leftAvatar && (\n                                <ListItemAvatar>\n                                    {renderAvatar(record, leftAvatar)}\n                                </ListItemAvatar>\n                            )}\n                            <ListItemText\n                                primary={\n                                    <div>\n                                        {isValidElement(primaryText)\n                                            ? primaryText\n                                            : primaryText(record, record.id)}\n\n                                        {!!tertiaryText &&\n                                            (isValidElement(tertiaryText) ? (\n                                                tertiaryText\n                                            ) : (\n                                                <span\n                                                    className={\n                                                        SimpleListClasses.tertiary\n                                                    }\n                                                >\n                                                    {tertiaryText(\n                                                        record,\n                                                        record.id\n                                                    )}\n                                                </span>\n                                            ))}\n                                    </div>\n                                }\n                                secondary={\n                                    !!secondaryText &&\n                                    (isValidElement(secondaryText)\n                                        ? secondaryText\n                                        : secondaryText(record, record.id))\n                                }\n                            />\n                            {(rightAvatar || rightIcon) && (\n                                <ListItemSecondaryAction>\n                                    {rightAvatar && (\n                                        <Avatar>\n                                            {renderAvatar(record, rightAvatar)}\n                                        </Avatar>\n                                    )}\n                                    {rightIcon && (\n                                        <ListItemIcon>\n                                            {rightIcon(record, record.id)}\n                                        </ListItemIcon>\n                                    )}\n                                </ListItemSecondaryAction>\n                            )}\n                        </LinkOrNot>\n                    </ListItem>\n                </RecordContextProvider>\n            ))}\n        </Root>\n    ) : null;\n};\n\nSimpleList.propTypes = {\n    className: PropTypes.string,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    primaryText: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n    tertiaryText: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n    rowStyle: PropTypes.func,\n};\n\nexport type FunctionToElement<RecordType extends RaRecord = any> = (\n    record: RecordType,\n    id: Identifier\n) => ReactNode;\n\nexport interface SimpleListProps<RecordType extends RaRecord = any>\n    extends Omit<ListProps, 'classes'> {\n    className?: string;\n    hasBulkActions?: boolean;\n    leftAvatar?: FunctionToElement<RecordType>;\n    leftIcon?: FunctionToElement<RecordType>;\n    primaryText?: FunctionToElement<RecordType> | ReactElement;\n    linkType?: string | FunctionLinkType | false;\n    rightAvatar?: FunctionToElement<RecordType>;\n    rightIcon?: FunctionToElement<RecordType>;\n    secondaryText?: FunctionToElement<RecordType> | ReactElement;\n    tertiaryText?: FunctionToElement<RecordType> | ReactElement;\n    rowStyle?: (record: RecordType, index: number) => any;\n    // can be injected when using the component without context\n    resource?: string;\n    data?: RecordType[];\n    isLoading?: boolean;\n    isLoaded?: boolean;\n    total?: number;\n}\n\nconst LinkOrNot = (\n    props: LinkOrNotProps & Omit<ListItemProps, 'button' | 'component' | 'id'>\n) => {\n    const {\n        classes: classesOverride,\n        linkType,\n        resource,\n        id,\n        children,\n        record,\n        ...rest\n    } = props;\n    const createPath = useCreatePath();\n    const type =\n        typeof linkType === 'function' ? linkType(record, id) : linkType;\n\n    return type === false ? (\n        <ListItemText\n            // @ts-ignore\n            component=\"div\"\n            {...rest}\n        >\n            {children}\n        </ListItemText>\n    ) : (\n        // @ts-ignore\n        <ListItemButton\n            component={Link}\n            to={createPath({ resource, id, type })}\n            {...rest}\n        >\n            {children}\n        </ListItemButton>\n    );\n};\n\nexport type FunctionLinkType = (record: RaRecord, id: Identifier) => string;\n\nexport interface LinkOrNotProps {\n    linkType?: string | FunctionLinkType | false;\n    resource: string;\n    id: Identifier;\n    record: RaRecord;\n    children: ReactNode;\n}\n\nconst PREFIX = 'RaSimpleList';\n\nexport const SimpleListClasses = {\n    tertiary: `${PREFIX}-tertiary`,\n};\n\nconst Root = styled(List, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`& .${SimpleListClasses.tertiary}`]: { float: 'right', opacity: 0.541176 },\n});\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport List, { ListProps } from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { Placeholder } from './Placeholder';\nimport { useTimeout } from 'ra-core';\n\nexport const SimpleListLoading = (props: Props & ListProps) => {\n    const {\n        className,\n        hasLeftAvatarOrIcon,\n        hasRightAvatarOrIcon,\n        hasSecondaryText,\n        hasTertiaryText,\n        nbFakeLines = 5,\n        ...rest\n    } = props;\n\n    const oneSecondHasPassed = useTimeout(1000);\n\n    return oneSecondHasPassed ? (\n        <StyledList className={className} {...rest}>\n            {times(nbFakeLines, key => (\n                <ListItem key={key}>\n                    {hasLeftAvatarOrIcon && (\n                        <ListItemAvatar>\n                            <Avatar>&nbsp;</Avatar>\n                        </ListItemAvatar>\n                    )}\n                    <ListItemText\n                        primary={\n                            <div>\n                                <Placeholder\n                                    className={SimpleListLoadingClasses.primary}\n                                />\n                                {hasTertiaryText && (\n                                    <span\n                                        className={\n                                            SimpleListLoadingClasses.tertiary\n                                        }\n                                    >\n                                        <Placeholder />\n                                    </span>\n                                )}\n                            </div>\n                        }\n                        secondary={\n                            hasSecondaryText ? <Placeholder /> : undefined\n                        }\n                    />\n                    {hasRightAvatarOrIcon && (\n                        <ListItemSecondaryAction>\n                            <Avatar>&nbsp;</Avatar>\n                        </ListItemSecondaryAction>\n                    )}\n                </ListItem>\n            ))}\n        </StyledList>\n    ) : null;\n};\n\nSimpleListLoading.propTypes = {\n    className: PropTypes.string,\n    hasLeftAvatarOrIcon: PropTypes.bool,\n    hasRightAvatarOrIcon: PropTypes.bool,\n    hasSecondaryText: PropTypes.bool,\n    hasTertiaryText: PropTypes.bool,\n    nbFakeLines: PropTypes.number,\n};\n\nconst PREFIX = 'RaSimpleListLoading';\n\nexport const SimpleListLoadingClasses = {\n    primary: `${PREFIX}-primary`,\n    tertiary: `${PREFIX}-tertiary`,\n};\n\nconst StyledList = styled(List, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${SimpleListLoadingClasses.primary}`]: {\n        width: '30vw',\n        display: 'inline-block',\n        marginBottom: theme.spacing(),\n    },\n\n    [`& .${SimpleListLoadingClasses.tertiary}`]: {\n        float: 'right',\n        opacity: 0.541176,\n        minWidth: '10vw',\n    },\n}));\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\ninterface Props {\n    className?: string;\n    hasLeftAvatarOrIcon?: boolean;\n    hasRightAvatarOrIcon?: boolean;\n    hasSecondaryText?: boolean;\n    hasTertiaryText?: boolean;\n    nbFakeLines?: number;\n}\n","import * as React from 'react';\nimport { createElement, ComponentType } from 'react';\nimport { CoreAdminUI, CoreAdminUIProps } from 'ra-core';\nimport {\n    Layout as DefaultLayout,\n    LoadingPage,\n    NotFound,\n    Notification,\n} from './layout';\nimport { Login } from './auth';\n\nexport const AdminUI = ({ notification, ...props }: AdminUIProps) => (\n    <>\n        <CoreAdminUI {...props} />\n        {createElement(notification)}\n    </>\n);\n\nexport interface AdminUIProps extends CoreAdminUIProps {\n    notification?: ComponentType;\n}\n\nAdminUI.defaultProps = {\n    layout: DefaultLayout,\n    catchAll: NotFound,\n    loading: LoadingPage,\n    loginPage: Login,\n    notification: Notification,\n};\n","import * as React from 'react';\nimport { CoreAdminContext, CoreAdminContextProps } from 'ra-core';\n\nimport { defaultTheme } from './defaultTheme';\nimport { ThemeProvider } from './layout/Theme';\n\nexport const AdminContext = (props: CoreAdminContextProps) => {\n    const { theme = defaultTheme, children, ...rest } = props;\n    return (\n        <CoreAdminContext {...rest}>\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\n        </CoreAdminContext>\n    );\n};\n\nAdminContext.displayName = 'AdminContext';\n"]},"metadata":{},"sourceType":"module"}